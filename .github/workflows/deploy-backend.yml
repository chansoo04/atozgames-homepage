# .github/workflows/deploy-backend.yml
name: Deploy Backend to Cloud Run

on:
  push:
    branches: [main]
    paths:
      - "apps/backend/**"
      - ".github/workflows/deploy-backend.yml"

permissions:
  contents: read
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - uses: actions/checkout@v4

      # 2. Google Cloud OIDC 로그인
      - id: auth
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_ID_PROVIDER }}
          service_account:           ${{ secrets.SERVICE_ACCOUNT }}

      # 3. Cloud SDK & Docker 도우미 설치 ★
      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT }}
          install_components: "gcloud"
          export_default_credentials: true   # gcloud credential helper에 토큰 전달

      # 4. Artifact Registry용 Docker 도우미 구성 ★
      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev --quiet

      # 5. Buildx 준비
      - uses: docker/setup-buildx-action@v3

      # 6. 이미지 빌드 & 푸시
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ${{ github.workspace }}/apps/backend
          push: true
          provenance: false
          tags: >
            ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/wyc-atoz-backend/backend:${{ github.sha }}

      # 7. Cloud Run 배포
      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ secrets.RUN_SERVICE }}
          region:  ${{ secrets.GCP_REGION }}
          image:   ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/wyc-atoz-backend/backend:${{ github.sha }}
          traffic-percentages: '100'
