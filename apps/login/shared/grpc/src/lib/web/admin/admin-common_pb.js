// source: admin-common.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
  (typeof globalThis !== 'undefined' && globalThis) ||
  (typeof window !== 'undefined' && window) ||
  (typeof global !== 'undefined' && global) ||
  (typeof self !== 'undefined' && self) ||
  function () {
    return this;
  }.call(null) ||
  Function('return this')();

goog.exportSymbol('proto.admin.CodeGroup', null, global);
goog.exportSymbol('proto.admin.CodeItem', null, global);
goog.exportSymbol('proto.admin.Department', null, global);
goog.exportSymbol('proto.admin.GlobalNavigationMenus', null, global);
goog.exportSymbol('proto.admin.GroupPermission', null, global);
goog.exportSymbol('proto.admin.GroupPermissionMenu', null, global);
goog.exportSymbol('proto.admin.GroupPermissionUser', null, global);
goog.exportSymbol('proto.admin.IdName', null, global);
goog.exportSymbol('proto.admin.IdNumberName', null, global);
goog.exportSymbol('proto.admin.Job', null, global);
goog.exportSymbol('proto.admin.Menu', null, global);
goog.exportSymbol('proto.admin.MenuAction', null, global);
goog.exportSymbol('proto.admin.MenuActionList', null, global);
goog.exportSymbol('proto.admin.MenuListOnGroupPermission', null, global);
goog.exportSymbol('proto.admin.MenuOfGroupPermissionMenu', null, global);
goog.exportSymbol('proto.admin.MenuPrivacy', null, global);
goog.exportSymbol('proto.admin.Position', null, global);
goog.exportSymbol('proto.admin.PrivacyOfGroupPermissionMenu', null, global);
goog.exportSymbol('proto.admin.PrivacyType', null, global);
goog.exportSymbol('proto.admin.RequiredUserField', null, global);
goog.exportSymbol('proto.admin.System', null, global);
goog.exportSymbol('proto.admin.User', null, global);
goog.exportSymbol('proto.admin.UserInfo', null, global);
goog.exportSymbol('proto.admin.UserInfoAuth', null, global);
goog.exportSymbol('proto.admin.UserPermission', null, global);
goog.exportSymbol('proto.admin.UserPermissionMenuList', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admin.User = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admin.User, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admin.User.displayName = 'proto.admin.User';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admin.GroupPermission = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admin.GroupPermission, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admin.GroupPermission.displayName = 'proto.admin.GroupPermission';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admin.GroupPermissionMenu = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admin.GroupPermissionMenu, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admin.GroupPermissionMenu.displayName =
    'proto.admin.GroupPermissionMenu';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admin.MenuListOnGroupPermission = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admin.MenuListOnGroupPermission, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admin.MenuListOnGroupPermission.displayName =
    'proto.admin.MenuListOnGroupPermission';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admin.MenuOfGroupPermissionMenu = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.admin.MenuOfGroupPermissionMenu.repeatedFields_,
    null,
  );
};
goog.inherits(proto.admin.MenuOfGroupPermissionMenu, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admin.MenuOfGroupPermissionMenu.displayName =
    'proto.admin.MenuOfGroupPermissionMenu';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admin.MenuActionList = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admin.MenuActionList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admin.MenuActionList.displayName = 'proto.admin.MenuActionList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admin.PrivacyOfGroupPermissionMenu = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admin.PrivacyOfGroupPermissionMenu, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admin.PrivacyOfGroupPermissionMenu.displayName =
    'proto.admin.PrivacyOfGroupPermissionMenu';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admin.GroupPermissionUser = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admin.GroupPermissionUser, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admin.GroupPermissionUser.displayName =
    'proto.admin.GroupPermissionUser';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admin.UserPermission = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.admin.UserPermission.repeatedFields_,
    null,
  );
};
goog.inherits(proto.admin.UserPermission, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admin.UserPermission.displayName = 'proto.admin.UserPermission';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admin.UserPermissionMenuList = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.admin.UserPermissionMenuList.repeatedFields_,
    null,
  );
};
goog.inherits(proto.admin.UserPermissionMenuList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admin.UserPermissionMenuList.displayName =
    'proto.admin.UserPermissionMenuList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admin.CodeGroup = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admin.CodeGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admin.CodeGroup.displayName = 'proto.admin.CodeGroup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admin.CodeItem = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admin.CodeItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admin.CodeItem.displayName = 'proto.admin.CodeItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admin.Department = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admin.Department, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admin.Department.displayName = 'proto.admin.Department';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admin.Job = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admin.Job, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admin.Job.displayName = 'proto.admin.Job';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admin.Menu = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.admin.Menu.repeatedFields_,
    null,
  );
};
goog.inherits(proto.admin.Menu, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admin.Menu.displayName = 'proto.admin.Menu';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admin.MenuAction = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admin.MenuAction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admin.MenuAction.displayName = 'proto.admin.MenuAction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admin.MenuPrivacy = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admin.MenuPrivacy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admin.MenuPrivacy.displayName = 'proto.admin.MenuPrivacy';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admin.Position = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admin.Position, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admin.Position.displayName = 'proto.admin.Position';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admin.PrivacyType = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admin.PrivacyType, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admin.PrivacyType.displayName = 'proto.admin.PrivacyType';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admin.RequiredUserField = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admin.RequiredUserField, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admin.RequiredUserField.displayName = 'proto.admin.RequiredUserField';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admin.System = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admin.System, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admin.System.displayName = 'proto.admin.System';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admin.UserInfo = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.admin.UserInfo.repeatedFields_,
    null,
  );
};
goog.inherits(proto.admin.UserInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admin.UserInfo.displayName = 'proto.admin.UserInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admin.UserInfoAuth = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admin.UserInfoAuth, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admin.UserInfoAuth.displayName = 'proto.admin.UserInfoAuth';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admin.IdName = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admin.IdName, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admin.IdName.displayName = 'proto.admin.IdName';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admin.IdNumberName = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admin.IdNumberName, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admin.IdNumberName.displayName = 'proto.admin.IdNumberName';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admin.GlobalNavigationMenus = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admin.GlobalNavigationMenus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admin.GlobalNavigationMenus.displayName =
    'proto.admin.GlobalNavigationMenus';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.admin.User.prototype.toObject = function (opt_includeInstance) {
    return proto.admin.User.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.admin.User} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.admin.User.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        userId: jspb.Message.getFieldWithDefault(msg, 1, ''),
        email: jspb.Message.getFieldWithDefault(msg, 2, ''),
        employeeNumber: jspb.Message.getFieldWithDefault(msg, 3, ''),
        name: jspb.Message.getFieldWithDefault(msg, 4, ''),
        department:
          (f = msg.getDepartment()) &&
          proto.admin.IdNumberName.toObject(includeInstance, f),
        position:
          (f = msg.getPosition()) &&
          proto.admin.IdNumberName.toObject(includeInstance, f),
        job:
          (f = msg.getJob()) &&
          proto.admin.IdNumberName.toObject(includeInstance, f),
        phoneNumber: jspb.Message.getFieldWithDefault(msg, 8, 0),
        extensionNumber: jspb.Message.getFieldWithDefault(msg, 9, 0),
        state: jspb.Message.getFieldWithDefault(msg, 10, 0),
        createdAt: jspb.Message.getFieldWithDefault(msg, 11, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admin.User}
 */
proto.admin.User.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admin.User();
  return proto.admin.User.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admin.User} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admin.User}
 */
proto.admin.User.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setUserId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setEmail(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setEmployeeNumber(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      case 5:
        var value = new proto.admin.IdNumberName();
        reader.readMessage(
          value,
          proto.admin.IdNumberName.deserializeBinaryFromReader,
        );
        msg.setDepartment(value);
        break;
      case 6:
        var value = new proto.admin.IdNumberName();
        reader.readMessage(
          value,
          proto.admin.IdNumberName.deserializeBinaryFromReader,
        );
        msg.setPosition(value);
        break;
      case 7:
        var value = new proto.admin.IdNumberName();
        reader.readMessage(
          value,
          proto.admin.IdNumberName.deserializeBinaryFromReader,
        );
        msg.setJob(value);
        break;
      case 8:
        var value = /** @type {number} */ (reader.readInt64());
        msg.setPhoneNumber(value);
        break;
      case 9:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setExtensionNumber(value);
        break;
      case 10:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setState(value);
        break;
      case 11:
        var value = /** @type {string} */ (reader.readString());
        msg.setCreatedAt(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admin.User.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.admin.User.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admin.User} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin.User.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getEmployeeNumber();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getDepartment();
  if (f != null) {
    writer.writeMessage(5, f, proto.admin.IdNumberName.serializeBinaryToWriter);
  }
  f = message.getPosition();
  if (f != null) {
    writer.writeMessage(6, f, proto.admin.IdNumberName.serializeBinaryToWriter);
  }
  f = message.getJob();
  if (f != null) {
    writer.writeMessage(7, f, proto.admin.IdNumberName.serializeBinaryToWriter);
  }
  f = message.getPhoneNumber();
  if (f !== 0) {
    writer.writeInt64(8, f);
  }
  f = message.getExtensionNumber();
  if (f !== 0) {
    writer.writeInt32(9, f);
  }
  f = message.getState();
  if (f !== 0) {
    writer.writeInt32(10, f);
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(11, f);
  }
};

/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.admin.User.prototype.getUserId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.User} returns this
 */
proto.admin.User.prototype.setUserId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string email = 2;
 * @return {string}
 */
proto.admin.User.prototype.getEmail = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.User} returns this
 */
proto.admin.User.prototype.setEmail = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string employee_number = 3;
 * @return {string}
 */
proto.admin.User.prototype.getEmployeeNumber = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.User} returns this
 */
proto.admin.User.prototype.setEmployeeNumber = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string name = 4;
 * @return {string}
 */
proto.admin.User.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.User} returns this
 */
proto.admin.User.prototype.setName = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional IdNumberName department = 5;
 * @return {?proto.admin.IdNumberName}
 */
proto.admin.User.prototype.getDepartment = function () {
  return /** @type{?proto.admin.IdNumberName} */ (
    jspb.Message.getWrapperField(this, proto.admin.IdNumberName, 5)
  );
};

/**
 * @param {?proto.admin.IdNumberName|undefined} value
 * @return {!proto.admin.User} returns this
 */
proto.admin.User.prototype.setDepartment = function (value) {
  return jspb.Message.setWrapperField(this, 5, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.admin.User} returns this
 */
proto.admin.User.prototype.clearDepartment = function () {
  return this.setDepartment(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admin.User.prototype.hasDepartment = function () {
  return jspb.Message.getField(this, 5) != null;
};

/**
 * optional IdNumberName position = 6;
 * @return {?proto.admin.IdNumberName}
 */
proto.admin.User.prototype.getPosition = function () {
  return /** @type{?proto.admin.IdNumberName} */ (
    jspb.Message.getWrapperField(this, proto.admin.IdNumberName, 6)
  );
};

/**
 * @param {?proto.admin.IdNumberName|undefined} value
 * @return {!proto.admin.User} returns this
 */
proto.admin.User.prototype.setPosition = function (value) {
  return jspb.Message.setWrapperField(this, 6, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.admin.User} returns this
 */
proto.admin.User.prototype.clearPosition = function () {
  return this.setPosition(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admin.User.prototype.hasPosition = function () {
  return jspb.Message.getField(this, 6) != null;
};

/**
 * optional IdNumberName job = 7;
 * @return {?proto.admin.IdNumberName}
 */
proto.admin.User.prototype.getJob = function () {
  return /** @type{?proto.admin.IdNumberName} */ (
    jspb.Message.getWrapperField(this, proto.admin.IdNumberName, 7)
  );
};

/**
 * @param {?proto.admin.IdNumberName|undefined} value
 * @return {!proto.admin.User} returns this
 */
proto.admin.User.prototype.setJob = function (value) {
  return jspb.Message.setWrapperField(this, 7, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.admin.User} returns this
 */
proto.admin.User.prototype.clearJob = function () {
  return this.setJob(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admin.User.prototype.hasJob = function () {
  return jspb.Message.getField(this, 7) != null;
};

/**
 * optional int64 phone_number = 8;
 * @return {number}
 */
proto.admin.User.prototype.getPhoneNumber = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};

/**
 * @param {number} value
 * @return {!proto.admin.User} returns this
 */
proto.admin.User.prototype.setPhoneNumber = function (value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};

/**
 * optional int32 extension_number = 9;
 * @return {number}
 */
proto.admin.User.prototype.getExtensionNumber = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};

/**
 * @param {number} value
 * @return {!proto.admin.User} returns this
 */
proto.admin.User.prototype.setExtensionNumber = function (value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};

/**
 * optional int32 state = 10;
 * @return {number}
 */
proto.admin.User.prototype.getState = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};

/**
 * @param {number} value
 * @return {!proto.admin.User} returns this
 */
proto.admin.User.prototype.setState = function (value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};

/**
 * optional string created_at = 11;
 * @return {string}
 */
proto.admin.User.prototype.getCreatedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.User} returns this
 */
proto.admin.User.prototype.setCreatedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.admin.GroupPermission.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.admin.GroupPermission.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.admin.GroupPermission} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.admin.GroupPermission.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        permissionCode: jspb.Message.getFieldWithDefault(msg, 1, ''),
        name: jspb.Message.getFieldWithDefault(msg, 2, ''),
        description: jspb.Message.getFieldWithDefault(msg, 3, ''),
        isActive: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
        createdAt: jspb.Message.getFieldWithDefault(msg, 5, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admin.GroupPermission}
 */
proto.admin.GroupPermission.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admin.GroupPermission();
  return proto.admin.GroupPermission.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admin.GroupPermission} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admin.GroupPermission}
 */
proto.admin.GroupPermission.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setPermissionCode(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setDescription(value);
        break;
      case 4:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsActive(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setCreatedAt(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admin.GroupPermission.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.admin.GroupPermission.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admin.GroupPermission} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin.GroupPermission.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getPermissionCode();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(4, f);
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(5, f);
  }
};

/**
 * optional string permission_code = 1;
 * @return {string}
 */
proto.admin.GroupPermission.prototype.getPermissionCode = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.GroupPermission} returns this
 */
proto.admin.GroupPermission.prototype.setPermissionCode = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string name = 2;
 * @return {string}
 */
proto.admin.GroupPermission.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.GroupPermission} returns this
 */
proto.admin.GroupPermission.prototype.setName = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string description = 3;
 * @return {string}
 */
proto.admin.GroupPermission.prototype.getDescription = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.GroupPermission} returns this
 */
proto.admin.GroupPermission.prototype.setDescription = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional bool is_active = 4;
 * @return {boolean}
 */
proto.admin.GroupPermission.prototype.getIsActive = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 4, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.admin.GroupPermission} returns this
 */
proto.admin.GroupPermission.prototype.setIsActive = function (value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};

/**
 * optional string created_at = 5;
 * @return {string}
 */
proto.admin.GroupPermission.prototype.getCreatedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.GroupPermission} returns this
 */
proto.admin.GroupPermission.prototype.setCreatedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.admin.GroupPermissionMenu.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.admin.GroupPermissionMenu.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.admin.GroupPermissionMenu} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.admin.GroupPermissionMenu.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        permissionCode: jspb.Message.getFieldWithDefault(msg, 1, ''),
        menuId: jspb.Message.getFieldWithDefault(msg, 2, ''),
        menuActionId: jspb.Message.getFieldWithDefault(msg, 3, ''),
        createdAt: jspb.Message.getFieldWithDefault(msg, 4, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admin.GroupPermissionMenu}
 */
proto.admin.GroupPermissionMenu.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admin.GroupPermissionMenu();
  return proto.admin.GroupPermissionMenu.deserializeBinaryFromReader(
    msg,
    reader,
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admin.GroupPermissionMenu} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admin.GroupPermissionMenu}
 */
proto.admin.GroupPermissionMenu.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setPermissionCode(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setMenuId(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setMenuActionId(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setCreatedAt(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admin.GroupPermissionMenu.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.admin.GroupPermissionMenu.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admin.GroupPermissionMenu} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin.GroupPermissionMenu.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getPermissionCode();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getMenuId();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getMenuActionId();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
};

/**
 * optional string permission_code = 1;
 * @return {string}
 */
proto.admin.GroupPermissionMenu.prototype.getPermissionCode = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.GroupPermissionMenu} returns this
 */
proto.admin.GroupPermissionMenu.prototype.setPermissionCode = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string menu_id = 2;
 * @return {string}
 */
proto.admin.GroupPermissionMenu.prototype.getMenuId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.GroupPermissionMenu} returns this
 */
proto.admin.GroupPermissionMenu.prototype.setMenuId = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string menu_action_id = 3;
 * @return {string}
 */
proto.admin.GroupPermissionMenu.prototype.getMenuActionId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.GroupPermissionMenu} returns this
 */
proto.admin.GroupPermissionMenu.prototype.setMenuActionId = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string created_at = 4;
 * @return {string}
 */
proto.admin.GroupPermissionMenu.prototype.getCreatedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.GroupPermissionMenu} returns this
 */
proto.admin.GroupPermissionMenu.prototype.setCreatedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.admin.MenuListOnGroupPermission.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.admin.MenuListOnGroupPermission.toObject(
      opt_includeInstance,
      this,
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.admin.MenuListOnGroupPermission} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.admin.MenuListOnGroupPermission.toObject = function (
    includeInstance,
    msg,
  ) {
    var f,
      obj = {
        permissionCode: jspb.Message.getFieldWithDefault(msg, 1, ''),
        menu:
          (f = msg.getMenu()) &&
          proto.admin.MenuOfGroupPermissionMenu.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admin.MenuListOnGroupPermission}
 */
proto.admin.MenuListOnGroupPermission.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admin.MenuListOnGroupPermission();
  return proto.admin.MenuListOnGroupPermission.deserializeBinaryFromReader(
    msg,
    reader,
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admin.MenuListOnGroupPermission} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admin.MenuListOnGroupPermission}
 */
proto.admin.MenuListOnGroupPermission.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setPermissionCode(value);
        break;
      case 2:
        var value = new proto.admin.MenuOfGroupPermissionMenu();
        reader.readMessage(
          value,
          proto.admin.MenuOfGroupPermissionMenu.deserializeBinaryFromReader,
        );
        msg.setMenu(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admin.MenuListOnGroupPermission.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.admin.MenuListOnGroupPermission.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admin.MenuListOnGroupPermission} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin.MenuListOnGroupPermission.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getPermissionCode();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getMenu();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.admin.MenuOfGroupPermissionMenu.serializeBinaryToWriter,
    );
  }
};

/**
 * optional string permission_code = 1;
 * @return {string}
 */
proto.admin.MenuListOnGroupPermission.prototype.getPermissionCode =
  function () {
    return /** @type {string} */ (
      jspb.Message.getFieldWithDefault(this, 1, '')
    );
  };

/**
 * @param {string} value
 * @return {!proto.admin.MenuListOnGroupPermission} returns this
 */
proto.admin.MenuListOnGroupPermission.prototype.setPermissionCode = function (
  value,
) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional MenuOfGroupPermissionMenu menu = 2;
 * @return {?proto.admin.MenuOfGroupPermissionMenu}
 */
proto.admin.MenuListOnGroupPermission.prototype.getMenu = function () {
  return /** @type{?proto.admin.MenuOfGroupPermissionMenu} */ (
    jspb.Message.getWrapperField(this, proto.admin.MenuOfGroupPermissionMenu, 2)
  );
};

/**
 * @param {?proto.admin.MenuOfGroupPermissionMenu|undefined} value
 * @return {!proto.admin.MenuListOnGroupPermission} returns this
 */
proto.admin.MenuListOnGroupPermission.prototype.setMenu = function (value) {
  return jspb.Message.setWrapperField(this, 2, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.admin.MenuListOnGroupPermission} returns this
 */
proto.admin.MenuListOnGroupPermission.prototype.clearMenu = function () {
  return this.setMenu(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admin.MenuListOnGroupPermission.prototype.hasMenu = function () {
  return jspb.Message.getField(this, 2) != null;
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.admin.MenuOfGroupPermissionMenu.repeatedFields_ = [3, 5];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.admin.MenuOfGroupPermissionMenu.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.admin.MenuOfGroupPermissionMenu.toObject(
      opt_includeInstance,
      this,
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.admin.MenuOfGroupPermissionMenu} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.admin.MenuOfGroupPermissionMenu.toObject = function (
    includeInstance,
    msg,
  ) {
    var f,
      obj = {
        menuId: jspb.Message.getFieldWithDefault(msg, 1, ''),
        name: jspb.Message.getFieldWithDefault(msg, 2, ''),
        menuActionListList: jspb.Message.toObjectList(
          msg.getMenuActionListList(),
          proto.admin.MenuActionList.toObject,
          includeInstance,
        ),
        system:
          (f = msg.getSystem()) &&
          proto.admin.IdName.toObject(includeInstance, f),
        privacyListList: jspb.Message.toObjectList(
          msg.getPrivacyListList(),
          proto.admin.PrivacyOfGroupPermissionMenu.toObject,
          includeInstance,
        ),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admin.MenuOfGroupPermissionMenu}
 */
proto.admin.MenuOfGroupPermissionMenu.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admin.MenuOfGroupPermissionMenu();
  return proto.admin.MenuOfGroupPermissionMenu.deserializeBinaryFromReader(
    msg,
    reader,
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admin.MenuOfGroupPermissionMenu} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admin.MenuOfGroupPermissionMenu}
 */
proto.admin.MenuOfGroupPermissionMenu.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setMenuId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      case 3:
        var value = new proto.admin.MenuActionList();
        reader.readMessage(
          value,
          proto.admin.MenuActionList.deserializeBinaryFromReader,
        );
        msg.addMenuActionList(value);
        break;
      case 4:
        var value = new proto.admin.IdName();
        reader.readMessage(
          value,
          proto.admin.IdName.deserializeBinaryFromReader,
        );
        msg.setSystem(value);
        break;
      case 5:
        var value = new proto.admin.PrivacyOfGroupPermissionMenu();
        reader.readMessage(
          value,
          proto.admin.PrivacyOfGroupPermissionMenu.deserializeBinaryFromReader,
        );
        msg.addPrivacyList(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admin.MenuOfGroupPermissionMenu.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.admin.MenuOfGroupPermissionMenu.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admin.MenuOfGroupPermissionMenu} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin.MenuOfGroupPermissionMenu.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getMenuId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getMenuActionListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.admin.MenuActionList.serializeBinaryToWriter,
    );
  }
  f = message.getSystem();
  if (f != null) {
    writer.writeMessage(4, f, proto.admin.IdName.serializeBinaryToWriter);
  }
  f = message.getPrivacyListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.admin.PrivacyOfGroupPermissionMenu.serializeBinaryToWriter,
    );
  }
};

/**
 * optional string menu_id = 1;
 * @return {string}
 */
proto.admin.MenuOfGroupPermissionMenu.prototype.getMenuId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.MenuOfGroupPermissionMenu} returns this
 */
proto.admin.MenuOfGroupPermissionMenu.prototype.setMenuId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string name = 2;
 * @return {string}
 */
proto.admin.MenuOfGroupPermissionMenu.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.MenuOfGroupPermissionMenu} returns this
 */
proto.admin.MenuOfGroupPermissionMenu.prototype.setName = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * repeated MenuActionList menu_action_list = 3;
 * @return {!Array<!proto.admin.MenuActionList>}
 */
proto.admin.MenuOfGroupPermissionMenu.prototype.getMenuActionListList =
  function () {
    return /** @type{!Array<!proto.admin.MenuActionList>} */ (
      jspb.Message.getRepeatedWrapperField(this, proto.admin.MenuActionList, 3)
    );
  };

/**
 * @param {!Array<!proto.admin.MenuActionList>} value
 * @return {!proto.admin.MenuOfGroupPermissionMenu} returns this
 */
proto.admin.MenuOfGroupPermissionMenu.prototype.setMenuActionListList =
  function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 3, value);
  };

/**
 * @param {!proto.admin.MenuActionList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.admin.MenuActionList}
 */
proto.admin.MenuOfGroupPermissionMenu.prototype.addMenuActionList = function (
  opt_value,
  opt_index,
) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    3,
    opt_value,
    proto.admin.MenuActionList,
    opt_index,
  );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.admin.MenuOfGroupPermissionMenu} returns this
 */
proto.admin.MenuOfGroupPermissionMenu.prototype.clearMenuActionListList =
  function () {
    return this.setMenuActionListList([]);
  };

/**
 * optional IdName system = 4;
 * @return {?proto.admin.IdName}
 */
proto.admin.MenuOfGroupPermissionMenu.prototype.getSystem = function () {
  return /** @type{?proto.admin.IdName} */ (
    jspb.Message.getWrapperField(this, proto.admin.IdName, 4)
  );
};

/**
 * @param {?proto.admin.IdName|undefined} value
 * @return {!proto.admin.MenuOfGroupPermissionMenu} returns this
 */
proto.admin.MenuOfGroupPermissionMenu.prototype.setSystem = function (value) {
  return jspb.Message.setWrapperField(this, 4, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.admin.MenuOfGroupPermissionMenu} returns this
 */
proto.admin.MenuOfGroupPermissionMenu.prototype.clearSystem = function () {
  return this.setSystem(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admin.MenuOfGroupPermissionMenu.prototype.hasSystem = function () {
  return jspb.Message.getField(this, 4) != null;
};

/**
 * repeated PrivacyOfGroupPermissionMenu privacy_list = 5;
 * @return {!Array<!proto.admin.PrivacyOfGroupPermissionMenu>}
 */
proto.admin.MenuOfGroupPermissionMenu.prototype.getPrivacyListList =
  function () {
    return /** @type{!Array<!proto.admin.PrivacyOfGroupPermissionMenu>} */ (
      jspb.Message.getRepeatedWrapperField(
        this,
        proto.admin.PrivacyOfGroupPermissionMenu,
        5,
      )
    );
  };

/**
 * @param {!Array<!proto.admin.PrivacyOfGroupPermissionMenu>} value
 * @return {!proto.admin.MenuOfGroupPermissionMenu} returns this
 */
proto.admin.MenuOfGroupPermissionMenu.prototype.setPrivacyListList = function (
  value,
) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};

/**
 * @param {!proto.admin.PrivacyOfGroupPermissionMenu=} opt_value
 * @param {number=} opt_index
 * @return {!proto.admin.PrivacyOfGroupPermissionMenu}
 */
proto.admin.MenuOfGroupPermissionMenu.prototype.addPrivacyList = function (
  opt_value,
  opt_index,
) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    5,
    opt_value,
    proto.admin.PrivacyOfGroupPermissionMenu,
    opt_index,
  );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.admin.MenuOfGroupPermissionMenu} returns this
 */
proto.admin.MenuOfGroupPermissionMenu.prototype.clearPrivacyListList =
  function () {
    return this.setPrivacyListList([]);
  };

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.admin.MenuActionList.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.admin.MenuActionList.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.admin.MenuActionList} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.admin.MenuActionList.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        id: jspb.Message.getFieldWithDefault(msg, 1, ''),
        name: jspb.Message.getFieldWithDefault(msg, 2, ''),
        isActive: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admin.MenuActionList}
 */
proto.admin.MenuActionList.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admin.MenuActionList();
  return proto.admin.MenuActionList.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admin.MenuActionList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admin.MenuActionList}
 */
proto.admin.MenuActionList.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      case 3:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsActive(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admin.MenuActionList.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.admin.MenuActionList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admin.MenuActionList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin.MenuActionList.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(3, f);
  }
};

/**
 * optional string id = 1;
 * @return {string}
 */
proto.admin.MenuActionList.prototype.getId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.MenuActionList} returns this
 */
proto.admin.MenuActionList.prototype.setId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string name = 2;
 * @return {string}
 */
proto.admin.MenuActionList.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.MenuActionList} returns this
 */
proto.admin.MenuActionList.prototype.setName = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional bool is_active = 3;
 * @return {boolean}
 */
proto.admin.MenuActionList.prototype.getIsActive = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 3, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.admin.MenuActionList} returns this
 */
proto.admin.MenuActionList.prototype.setIsActive = function (value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.admin.PrivacyOfGroupPermissionMenu.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.admin.PrivacyOfGroupPermissionMenu.toObject(
      opt_includeInstance,
      this,
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.admin.PrivacyOfGroupPermissionMenu} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.admin.PrivacyOfGroupPermissionMenu.toObject = function (
    includeInstance,
    msg,
  ) {
    var f,
      obj = {
        id: jspb.Message.getFieldWithDefault(msg, 1, ''),
        name: jspb.Message.getFieldWithDefault(msg, 2, ''),
        description: jspb.Message.getFieldWithDefault(msg, 3, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admin.PrivacyOfGroupPermissionMenu}
 */
proto.admin.PrivacyOfGroupPermissionMenu.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admin.PrivacyOfGroupPermissionMenu();
  return proto.admin.PrivacyOfGroupPermissionMenu.deserializeBinaryFromReader(
    msg,
    reader,
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admin.PrivacyOfGroupPermissionMenu} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admin.PrivacyOfGroupPermissionMenu}
 */
proto.admin.PrivacyOfGroupPermissionMenu.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = /** @type {string} */ (reader.readString());
          msg.setId(value);
          break;
        case 2:
          var value = /** @type {string} */ (reader.readString());
          msg.setName(value);
          break;
        case 3:
          var value = /** @type {string} */ (reader.readString());
          msg.setDescription(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admin.PrivacyOfGroupPermissionMenu.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.admin.PrivacyOfGroupPermissionMenu.serializeBinaryToWriter(
      this,
      writer,
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admin.PrivacyOfGroupPermissionMenu} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin.PrivacyOfGroupPermissionMenu.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
};

/**
 * optional string id = 1;
 * @return {string}
 */
proto.admin.PrivacyOfGroupPermissionMenu.prototype.getId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.PrivacyOfGroupPermissionMenu} returns this
 */
proto.admin.PrivacyOfGroupPermissionMenu.prototype.setId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string name = 2;
 * @return {string}
 */
proto.admin.PrivacyOfGroupPermissionMenu.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.PrivacyOfGroupPermissionMenu} returns this
 */
proto.admin.PrivacyOfGroupPermissionMenu.prototype.setName = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string description = 3;
 * @return {string}
 */
proto.admin.PrivacyOfGroupPermissionMenu.prototype.getDescription =
  function () {
    return /** @type {string} */ (
      jspb.Message.getFieldWithDefault(this, 3, '')
    );
  };

/**
 * @param {string} value
 * @return {!proto.admin.PrivacyOfGroupPermissionMenu} returns this
 */
proto.admin.PrivacyOfGroupPermissionMenu.prototype.setDescription = function (
  value,
) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.admin.GroupPermissionUser.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.admin.GroupPermissionUser.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.admin.GroupPermissionUser} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.admin.GroupPermissionUser.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        permissionCode: jspb.Message.getFieldWithDefault(msg, 1, ''),
        userId: jspb.Message.getFieldWithDefault(msg, 2, ''),
        createdAt: jspb.Message.getFieldWithDefault(msg, 3, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admin.GroupPermissionUser}
 */
proto.admin.GroupPermissionUser.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admin.GroupPermissionUser();
  return proto.admin.GroupPermissionUser.deserializeBinaryFromReader(
    msg,
    reader,
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admin.GroupPermissionUser} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admin.GroupPermissionUser}
 */
proto.admin.GroupPermissionUser.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setPermissionCode(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setUserId(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setCreatedAt(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admin.GroupPermissionUser.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.admin.GroupPermissionUser.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admin.GroupPermissionUser} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin.GroupPermissionUser.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getPermissionCode();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
};

/**
 * optional string permission_code = 1;
 * @return {string}
 */
proto.admin.GroupPermissionUser.prototype.getPermissionCode = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.GroupPermissionUser} returns this
 */
proto.admin.GroupPermissionUser.prototype.setPermissionCode = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.admin.GroupPermissionUser.prototype.getUserId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.GroupPermissionUser} returns this
 */
proto.admin.GroupPermissionUser.prototype.setUserId = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string created_at = 3;
 * @return {string}
 */
proto.admin.GroupPermissionUser.prototype.getCreatedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.GroupPermissionUser} returns this
 */
proto.admin.GroupPermissionUser.prototype.setCreatedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.admin.UserPermission.repeatedFields_ = [2];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.admin.UserPermission.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.admin.UserPermission.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.admin.UserPermission} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.admin.UserPermission.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        userId: jspb.Message.getFieldWithDefault(msg, 1, ''),
        menuListList: jspb.Message.toObjectList(
          msg.getMenuListList(),
          proto.admin.UserPermissionMenuList.toObject,
          includeInstance,
        ),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admin.UserPermission}
 */
proto.admin.UserPermission.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admin.UserPermission();
  return proto.admin.UserPermission.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admin.UserPermission} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admin.UserPermission}
 */
proto.admin.UserPermission.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setUserId(value);
        break;
      case 2:
        var value = new proto.admin.UserPermissionMenuList();
        reader.readMessage(
          value,
          proto.admin.UserPermissionMenuList.deserializeBinaryFromReader,
        );
        msg.addMenuList(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admin.UserPermission.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.admin.UserPermission.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admin.UserPermission} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin.UserPermission.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getMenuListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.admin.UserPermissionMenuList.serializeBinaryToWriter,
    );
  }
};

/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.admin.UserPermission.prototype.getUserId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.UserPermission} returns this
 */
proto.admin.UserPermission.prototype.setUserId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * repeated UserPermissionMenuList menu_list = 2;
 * @return {!Array<!proto.admin.UserPermissionMenuList>}
 */
proto.admin.UserPermission.prototype.getMenuListList = function () {
  return /** @type{!Array<!proto.admin.UserPermissionMenuList>} */ (
    jspb.Message.getRepeatedWrapperField(
      this,
      proto.admin.UserPermissionMenuList,
      2,
    )
  );
};

/**
 * @param {!Array<!proto.admin.UserPermissionMenuList>} value
 * @return {!proto.admin.UserPermission} returns this
 */
proto.admin.UserPermission.prototype.setMenuListList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};

/**
 * @param {!proto.admin.UserPermissionMenuList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.admin.UserPermissionMenuList}
 */
proto.admin.UserPermission.prototype.addMenuList = function (
  opt_value,
  opt_index,
) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    2,
    opt_value,
    proto.admin.UserPermissionMenuList,
    opt_index,
  );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.admin.UserPermission} returns this
 */
proto.admin.UserPermission.prototype.clearMenuListList = function () {
  return this.setMenuListList([]);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.admin.UserPermissionMenuList.repeatedFields_ = [4, 5];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.admin.UserPermissionMenuList.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.admin.UserPermissionMenuList.toObject(
      opt_includeInstance,
      this,
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.admin.UserPermissionMenuList} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.admin.UserPermissionMenuList.toObject = function (
    includeInstance,
    msg,
  ) {
    var f,
      obj = {
        menuId: jspb.Message.getFieldWithDefault(msg, 1, ''),
        system:
          (f = msg.getSystem()) &&
          proto.admin.IdName.toObject(includeInstance, f),
        name: jspb.Message.getFieldWithDefault(msg, 3, ''),
        menuActionListList: jspb.Message.toObjectList(
          msg.getMenuActionListList(),
          proto.admin.MenuActionList.toObject,
          includeInstance,
        ),
        privacyListList: jspb.Message.toObjectList(
          msg.getPrivacyListList(),
          proto.admin.PrivacyOfGroupPermissionMenu.toObject,
          includeInstance,
        ),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admin.UserPermissionMenuList}
 */
proto.admin.UserPermissionMenuList.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admin.UserPermissionMenuList();
  return proto.admin.UserPermissionMenuList.deserializeBinaryFromReader(
    msg,
    reader,
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admin.UserPermissionMenuList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admin.UserPermissionMenuList}
 */
proto.admin.UserPermissionMenuList.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setMenuId(value);
        break;
      case 2:
        var value = new proto.admin.IdName();
        reader.readMessage(
          value,
          proto.admin.IdName.deserializeBinaryFromReader,
        );
        msg.setSystem(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      case 4:
        var value = new proto.admin.MenuActionList();
        reader.readMessage(
          value,
          proto.admin.MenuActionList.deserializeBinaryFromReader,
        );
        msg.addMenuActionList(value);
        break;
      case 5:
        var value = new proto.admin.PrivacyOfGroupPermissionMenu();
        reader.readMessage(
          value,
          proto.admin.PrivacyOfGroupPermissionMenu.deserializeBinaryFromReader,
        );
        msg.addPrivacyList(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admin.UserPermissionMenuList.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.admin.UserPermissionMenuList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admin.UserPermissionMenuList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin.UserPermissionMenuList.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getMenuId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getSystem();
  if (f != null) {
    writer.writeMessage(2, f, proto.admin.IdName.serializeBinaryToWriter);
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getMenuActionListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.admin.MenuActionList.serializeBinaryToWriter,
    );
  }
  f = message.getPrivacyListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.admin.PrivacyOfGroupPermissionMenu.serializeBinaryToWriter,
    );
  }
};

/**
 * optional string menu_id = 1;
 * @return {string}
 */
proto.admin.UserPermissionMenuList.prototype.getMenuId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.UserPermissionMenuList} returns this
 */
proto.admin.UserPermissionMenuList.prototype.setMenuId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional IdName system = 2;
 * @return {?proto.admin.IdName}
 */
proto.admin.UserPermissionMenuList.prototype.getSystem = function () {
  return /** @type{?proto.admin.IdName} */ (
    jspb.Message.getWrapperField(this, proto.admin.IdName, 2)
  );
};

/**
 * @param {?proto.admin.IdName|undefined} value
 * @return {!proto.admin.UserPermissionMenuList} returns this
 */
proto.admin.UserPermissionMenuList.prototype.setSystem = function (value) {
  return jspb.Message.setWrapperField(this, 2, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.admin.UserPermissionMenuList} returns this
 */
proto.admin.UserPermissionMenuList.prototype.clearSystem = function () {
  return this.setSystem(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admin.UserPermissionMenuList.prototype.hasSystem = function () {
  return jspb.Message.getField(this, 2) != null;
};

/**
 * optional string name = 3;
 * @return {string}
 */
proto.admin.UserPermissionMenuList.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.UserPermissionMenuList} returns this
 */
proto.admin.UserPermissionMenuList.prototype.setName = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * repeated MenuActionList menu_action_list = 4;
 * @return {!Array<!proto.admin.MenuActionList>}
 */
proto.admin.UserPermissionMenuList.prototype.getMenuActionListList =
  function () {
    return /** @type{!Array<!proto.admin.MenuActionList>} */ (
      jspb.Message.getRepeatedWrapperField(this, proto.admin.MenuActionList, 4)
    );
  };

/**
 * @param {!Array<!proto.admin.MenuActionList>} value
 * @return {!proto.admin.UserPermissionMenuList} returns this
 */
proto.admin.UserPermissionMenuList.prototype.setMenuActionListList = function (
  value,
) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};

/**
 * @param {!proto.admin.MenuActionList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.admin.MenuActionList}
 */
proto.admin.UserPermissionMenuList.prototype.addMenuActionList = function (
  opt_value,
  opt_index,
) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    4,
    opt_value,
    proto.admin.MenuActionList,
    opt_index,
  );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.admin.UserPermissionMenuList} returns this
 */
proto.admin.UserPermissionMenuList.prototype.clearMenuActionListList =
  function () {
    return this.setMenuActionListList([]);
  };

/**
 * repeated PrivacyOfGroupPermissionMenu privacy_list = 5;
 * @return {!Array<!proto.admin.PrivacyOfGroupPermissionMenu>}
 */
proto.admin.UserPermissionMenuList.prototype.getPrivacyListList = function () {
  return /** @type{!Array<!proto.admin.PrivacyOfGroupPermissionMenu>} */ (
    jspb.Message.getRepeatedWrapperField(
      this,
      proto.admin.PrivacyOfGroupPermissionMenu,
      5,
    )
  );
};

/**
 * @param {!Array<!proto.admin.PrivacyOfGroupPermissionMenu>} value
 * @return {!proto.admin.UserPermissionMenuList} returns this
 */
proto.admin.UserPermissionMenuList.prototype.setPrivacyListList = function (
  value,
) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};

/**
 * @param {!proto.admin.PrivacyOfGroupPermissionMenu=} opt_value
 * @param {number=} opt_index
 * @return {!proto.admin.PrivacyOfGroupPermissionMenu}
 */
proto.admin.UserPermissionMenuList.prototype.addPrivacyList = function (
  opt_value,
  opt_index,
) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    5,
    opt_value,
    proto.admin.PrivacyOfGroupPermissionMenu,
    opt_index,
  );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.admin.UserPermissionMenuList} returns this
 */
proto.admin.UserPermissionMenuList.prototype.clearPrivacyListList =
  function () {
    return this.setPrivacyListList([]);
  };

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.admin.CodeGroup.prototype.toObject = function (opt_includeInstance) {
    return proto.admin.CodeGroup.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.admin.CodeGroup} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.admin.CodeGroup.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        groupCode: jspb.Message.getFieldWithDefault(msg, 1, ''),
        name: jspb.Message.getFieldWithDefault(msg, 2, ''),
        description: jspb.Message.getFieldWithDefault(msg, 3, ''),
        isActive: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
        isDeleted: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
        createdAt: jspb.Message.getFieldWithDefault(msg, 6, ''),
        updatedAt: jspb.Message.getFieldWithDefault(msg, 7, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admin.CodeGroup}
 */
proto.admin.CodeGroup.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admin.CodeGroup();
  return proto.admin.CodeGroup.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admin.CodeGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admin.CodeGroup}
 */
proto.admin.CodeGroup.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setGroupCode(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setDescription(value);
        break;
      case 4:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsActive(value);
        break;
      case 5:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsDeleted(value);
        break;
      case 6:
        var value = /** @type {string} */ (reader.readString());
        msg.setCreatedAt(value);
        break;
      case 7:
        var value = /** @type {string} */ (reader.readString());
        msg.setUpdatedAt(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admin.CodeGroup.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.admin.CodeGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admin.CodeGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin.CodeGroup.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getGroupCode();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(4, f);
  }
  f = message.getIsDeleted();
  if (f) {
    writer.writeBool(5, f);
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(6, f);
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(7, f);
  }
};

/**
 * optional string group_code = 1;
 * @return {string}
 */
proto.admin.CodeGroup.prototype.getGroupCode = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.CodeGroup} returns this
 */
proto.admin.CodeGroup.prototype.setGroupCode = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string name = 2;
 * @return {string}
 */
proto.admin.CodeGroup.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.CodeGroup} returns this
 */
proto.admin.CodeGroup.prototype.setName = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string description = 3;
 * @return {string}
 */
proto.admin.CodeGroup.prototype.getDescription = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.CodeGroup} returns this
 */
proto.admin.CodeGroup.prototype.setDescription = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional bool is_active = 4;
 * @return {boolean}
 */
proto.admin.CodeGroup.prototype.getIsActive = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 4, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.admin.CodeGroup} returns this
 */
proto.admin.CodeGroup.prototype.setIsActive = function (value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};

/**
 * optional bool is_deleted = 5;
 * @return {boolean}
 */
proto.admin.CodeGroup.prototype.getIsDeleted = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 5, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.admin.CodeGroup} returns this
 */
proto.admin.CodeGroup.prototype.setIsDeleted = function (value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};

/**
 * optional string created_at = 6;
 * @return {string}
 */
proto.admin.CodeGroup.prototype.getCreatedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.CodeGroup} returns this
 */
proto.admin.CodeGroup.prototype.setCreatedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};

/**
 * optional string updated_at = 7;
 * @return {string}
 */
proto.admin.CodeGroup.prototype.getUpdatedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.CodeGroup} returns this
 */
proto.admin.CodeGroup.prototype.setUpdatedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.admin.CodeItem.prototype.toObject = function (opt_includeInstance) {
    return proto.admin.CodeItem.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.admin.CodeItem} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.admin.CodeItem.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        groupCode: jspb.Message.getFieldWithDefault(msg, 1, ''),
        itemCode: jspb.Message.getFieldWithDefault(msg, 2, ''),
        name: jspb.Message.getFieldWithDefault(msg, 3, ''),
        description: jspb.Message.getFieldWithDefault(msg, 4, ''),
        ordering: jspb.Message.getFieldWithDefault(msg, 5, 0),
        isActive: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
        isDeleted: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
        createdAt: jspb.Message.getFieldWithDefault(msg, 8, ''),
        updatedAt: jspb.Message.getFieldWithDefault(msg, 9, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admin.CodeItem}
 */
proto.admin.CodeItem.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admin.CodeItem();
  return proto.admin.CodeItem.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admin.CodeItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admin.CodeItem}
 */
proto.admin.CodeItem.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setGroupCode(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setItemCode(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setDescription(value);
        break;
      case 5:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setOrdering(value);
        break;
      case 6:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsActive(value);
        break;
      case 7:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsDeleted(value);
        break;
      case 8:
        var value = /** @type {string} */ (reader.readString());
        msg.setCreatedAt(value);
        break;
      case 9:
        var value = /** @type {string} */ (reader.readString());
        msg.setUpdatedAt(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admin.CodeItem.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.admin.CodeItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admin.CodeItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin.CodeItem.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getGroupCode();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getItemCode();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getOrdering();
  if (f !== 0) {
    writer.writeInt32(5, f);
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(6, f);
  }
  f = message.getIsDeleted();
  if (f) {
    writer.writeBool(7, f);
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(8, f);
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(9, f);
  }
};

/**
 * optional string group_code = 1;
 * @return {string}
 */
proto.admin.CodeItem.prototype.getGroupCode = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.CodeItem} returns this
 */
proto.admin.CodeItem.prototype.setGroupCode = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string item_code = 2;
 * @return {string}
 */
proto.admin.CodeItem.prototype.getItemCode = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.CodeItem} returns this
 */
proto.admin.CodeItem.prototype.setItemCode = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string name = 3;
 * @return {string}
 */
proto.admin.CodeItem.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.CodeItem} returns this
 */
proto.admin.CodeItem.prototype.setName = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string description = 4;
 * @return {string}
 */
proto.admin.CodeItem.prototype.getDescription = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.CodeItem} returns this
 */
proto.admin.CodeItem.prototype.setDescription = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional int32 ordering = 5;
 * @return {number}
 */
proto.admin.CodeItem.prototype.getOrdering = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};

/**
 * @param {number} value
 * @return {!proto.admin.CodeItem} returns this
 */
proto.admin.CodeItem.prototype.setOrdering = function (value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};

/**
 * optional bool is_active = 6;
 * @return {boolean}
 */
proto.admin.CodeItem.prototype.getIsActive = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 6, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.admin.CodeItem} returns this
 */
proto.admin.CodeItem.prototype.setIsActive = function (value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};

/**
 * optional bool is_deleted = 7;
 * @return {boolean}
 */
proto.admin.CodeItem.prototype.getIsDeleted = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 7, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.admin.CodeItem} returns this
 */
proto.admin.CodeItem.prototype.setIsDeleted = function (value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};

/**
 * optional string created_at = 8;
 * @return {string}
 */
proto.admin.CodeItem.prototype.getCreatedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.CodeItem} returns this
 */
proto.admin.CodeItem.prototype.setCreatedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};

/**
 * optional string updated_at = 9;
 * @return {string}
 */
proto.admin.CodeItem.prototype.getUpdatedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.CodeItem} returns this
 */
proto.admin.CodeItem.prototype.setUpdatedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.admin.Department.prototype.toObject = function (opt_includeInstance) {
    return proto.admin.Department.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.admin.Department} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.admin.Department.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        departmentId: jspb.Message.getFieldWithDefault(msg, 1, 0),
        code: jspb.Message.getFieldWithDefault(msg, 2, ''),
        name: jspb.Message.getFieldWithDefault(msg, 3, ''),
        description: jspb.Message.getFieldWithDefault(msg, 4, ''),
        isActive: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
        createdAt: jspb.Message.getFieldWithDefault(msg, 6, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admin.Department}
 */
proto.admin.Department.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admin.Department();
  return proto.admin.Department.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admin.Department} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admin.Department}
 */
proto.admin.Department.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setDepartmentId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setCode(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setDescription(value);
        break;
      case 5:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsActive(value);
        break;
      case 6:
        var value = /** @type {string} */ (reader.readString());
        msg.setCreatedAt(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admin.Department.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.admin.Department.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admin.Department} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin.Department.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getDepartmentId();
  if (f !== 0) {
    writer.writeInt32(1, f);
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(5, f);
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(6, f);
  }
};

/**
 * optional int32 department_id = 1;
 * @return {number}
 */
proto.admin.Department.prototype.getDepartmentId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.admin.Department} returns this
 */
proto.admin.Department.prototype.setDepartmentId = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional string code = 2;
 * @return {string}
 */
proto.admin.Department.prototype.getCode = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.Department} returns this
 */
proto.admin.Department.prototype.setCode = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string name = 3;
 * @return {string}
 */
proto.admin.Department.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.Department} returns this
 */
proto.admin.Department.prototype.setName = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string description = 4;
 * @return {string}
 */
proto.admin.Department.prototype.getDescription = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.Department} returns this
 */
proto.admin.Department.prototype.setDescription = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional bool is_active = 5;
 * @return {boolean}
 */
proto.admin.Department.prototype.getIsActive = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 5, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.admin.Department} returns this
 */
proto.admin.Department.prototype.setIsActive = function (value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};

/**
 * optional string created_at = 6;
 * @return {string}
 */
proto.admin.Department.prototype.getCreatedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.Department} returns this
 */
proto.admin.Department.prototype.setCreatedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.admin.Job.prototype.toObject = function (opt_includeInstance) {
    return proto.admin.Job.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.admin.Job} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.admin.Job.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        jobId: jspb.Message.getFieldWithDefault(msg, 1, 0),
        code: jspb.Message.getFieldWithDefault(msg, 2, ''),
        name: jspb.Message.getFieldWithDefault(msg, 3, ''),
        description: jspb.Message.getFieldWithDefault(msg, 4, ''),
        isActive: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
        createdAt: jspb.Message.getFieldWithDefault(msg, 6, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admin.Job}
 */
proto.admin.Job.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admin.Job();
  return proto.admin.Job.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admin.Job} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admin.Job}
 */
proto.admin.Job.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setJobId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setCode(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setDescription(value);
        break;
      case 5:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsActive(value);
        break;
      case 6:
        var value = /** @type {string} */ (reader.readString());
        msg.setCreatedAt(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admin.Job.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.admin.Job.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admin.Job} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin.Job.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getJobId();
  if (f !== 0) {
    writer.writeInt32(1, f);
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(5, f);
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(6, f);
  }
};

/**
 * optional int32 job_id = 1;
 * @return {number}
 */
proto.admin.Job.prototype.getJobId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.admin.Job} returns this
 */
proto.admin.Job.prototype.setJobId = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional string code = 2;
 * @return {string}
 */
proto.admin.Job.prototype.getCode = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.Job} returns this
 */
proto.admin.Job.prototype.setCode = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string name = 3;
 * @return {string}
 */
proto.admin.Job.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.Job} returns this
 */
proto.admin.Job.prototype.setName = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string description = 4;
 * @return {string}
 */
proto.admin.Job.prototype.getDescription = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.Job} returns this
 */
proto.admin.Job.prototype.setDescription = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional bool is_active = 5;
 * @return {boolean}
 */
proto.admin.Job.prototype.getIsActive = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 5, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.admin.Job} returns this
 */
proto.admin.Job.prototype.setIsActive = function (value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};

/**
 * optional string created_at = 6;
 * @return {string}
 */
proto.admin.Job.prototype.getCreatedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.Job} returns this
 */
proto.admin.Job.prototype.setCreatedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.admin.Menu.repeatedFields_ = [3, 13];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.admin.Menu.prototype.toObject = function (opt_includeInstance) {
    return proto.admin.Menu.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.admin.Menu} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.admin.Menu.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        system:
          (f = msg.getSystem()) &&
          proto.admin.IdName.toObject(includeInstance, f),
        menuId: jspb.Message.getFieldWithDefault(msg, 2, ''),
        menuActionListList: jspb.Message.toObjectList(
          msg.getMenuActionListList(),
          proto.admin.MenuActionList.toObject,
          includeInstance,
        ),
        parentMenu:
          (f = msg.getParentMenu()) &&
          proto.admin.IdName.toObject(includeInstance, f),
        name: jspb.Message.getFieldWithDefault(msg, 5, ''),
        url: jspb.Message.getFieldWithDefault(msg, 6, ''),
        description: jspb.Message.getFieldWithDefault(msg, 7, ''),
        ordering: jspb.Message.getFieldWithDefault(msg, 8, 0),
        isActive: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
        isDeleted: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
        createdAt: jspb.Message.getFieldWithDefault(msg, 11, ''),
        updatedAt: jspb.Message.getFieldWithDefault(msg, 12, ''),
        privacyListList: jspb.Message.toObjectList(
          msg.getPrivacyListList(),
          proto.admin.PrivacyOfGroupPermissionMenu.toObject,
          includeInstance,
        ),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admin.Menu}
 */
proto.admin.Menu.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admin.Menu();
  return proto.admin.Menu.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admin.Menu} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admin.Menu}
 */
proto.admin.Menu.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.admin.IdName();
        reader.readMessage(
          value,
          proto.admin.IdName.deserializeBinaryFromReader,
        );
        msg.setSystem(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setMenuId(value);
        break;
      case 3:
        var value = new proto.admin.MenuActionList();
        reader.readMessage(
          value,
          proto.admin.MenuActionList.deserializeBinaryFromReader,
        );
        msg.addMenuActionList(value);
        break;
      case 4:
        var value = new proto.admin.IdName();
        reader.readMessage(
          value,
          proto.admin.IdName.deserializeBinaryFromReader,
        );
        msg.setParentMenu(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      case 6:
        var value = /** @type {string} */ (reader.readString());
        msg.setUrl(value);
        break;
      case 7:
        var value = /** @type {string} */ (reader.readString());
        msg.setDescription(value);
        break;
      case 8:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setOrdering(value);
        break;
      case 9:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsActive(value);
        break;
      case 10:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsDeleted(value);
        break;
      case 11:
        var value = /** @type {string} */ (reader.readString());
        msg.setCreatedAt(value);
        break;
      case 12:
        var value = /** @type {string} */ (reader.readString());
        msg.setUpdatedAt(value);
        break;
      case 13:
        var value = new proto.admin.PrivacyOfGroupPermissionMenu();
        reader.readMessage(
          value,
          proto.admin.PrivacyOfGroupPermissionMenu.deserializeBinaryFromReader,
        );
        msg.addPrivacyList(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admin.Menu.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.admin.Menu.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admin.Menu} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin.Menu.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getSystem();
  if (f != null) {
    writer.writeMessage(1, f, proto.admin.IdName.serializeBinaryToWriter);
  }
  f = message.getMenuId();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getMenuActionListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.admin.MenuActionList.serializeBinaryToWriter,
    );
  }
  f = message.getParentMenu();
  if (f != null) {
    writer.writeMessage(4, f, proto.admin.IdName.serializeBinaryToWriter);
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(5, f);
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(6, f);
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(7, f);
  }
  f = message.getOrdering();
  if (f !== 0) {
    writer.writeInt32(8, f);
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(9, f);
  }
  f = message.getIsDeleted();
  if (f) {
    writer.writeBool(10, f);
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(11, f);
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(12, f);
  }
  f = message.getPrivacyListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      proto.admin.PrivacyOfGroupPermissionMenu.serializeBinaryToWriter,
    );
  }
};

/**
 * optional IdName system = 1;
 * @return {?proto.admin.IdName}
 */
proto.admin.Menu.prototype.getSystem = function () {
  return /** @type{?proto.admin.IdName} */ (
    jspb.Message.getWrapperField(this, proto.admin.IdName, 1)
  );
};

/**
 * @param {?proto.admin.IdName|undefined} value
 * @return {!proto.admin.Menu} returns this
 */
proto.admin.Menu.prototype.setSystem = function (value) {
  return jspb.Message.setWrapperField(this, 1, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.admin.Menu} returns this
 */
proto.admin.Menu.prototype.clearSystem = function () {
  return this.setSystem(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admin.Menu.prototype.hasSystem = function () {
  return jspb.Message.getField(this, 1) != null;
};

/**
 * optional string menu_id = 2;
 * @return {string}
 */
proto.admin.Menu.prototype.getMenuId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.Menu} returns this
 */
proto.admin.Menu.prototype.setMenuId = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * repeated MenuActionList menu_action_list = 3;
 * @return {!Array<!proto.admin.MenuActionList>}
 */
proto.admin.Menu.prototype.getMenuActionListList = function () {
  return /** @type{!Array<!proto.admin.MenuActionList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.admin.MenuActionList, 3)
  );
};

/**
 * @param {!Array<!proto.admin.MenuActionList>} value
 * @return {!proto.admin.Menu} returns this
 */
proto.admin.Menu.prototype.setMenuActionListList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};

/**
 * @param {!proto.admin.MenuActionList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.admin.MenuActionList}
 */
proto.admin.Menu.prototype.addMenuActionList = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    3,
    opt_value,
    proto.admin.MenuActionList,
    opt_index,
  );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.admin.Menu} returns this
 */
proto.admin.Menu.prototype.clearMenuActionListList = function () {
  return this.setMenuActionListList([]);
};

/**
 * optional IdName parent_menu = 4;
 * @return {?proto.admin.IdName}
 */
proto.admin.Menu.prototype.getParentMenu = function () {
  return /** @type{?proto.admin.IdName} */ (
    jspb.Message.getWrapperField(this, proto.admin.IdName, 4)
  );
};

/**
 * @param {?proto.admin.IdName|undefined} value
 * @return {!proto.admin.Menu} returns this
 */
proto.admin.Menu.prototype.setParentMenu = function (value) {
  return jspb.Message.setWrapperField(this, 4, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.admin.Menu} returns this
 */
proto.admin.Menu.prototype.clearParentMenu = function () {
  return this.setParentMenu(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admin.Menu.prototype.hasParentMenu = function () {
  return jspb.Message.getField(this, 4) != null;
};

/**
 * optional string name = 5;
 * @return {string}
 */
proto.admin.Menu.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.Menu} returns this
 */
proto.admin.Menu.prototype.setName = function (value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * optional string url = 6;
 * @return {string}
 */
proto.admin.Menu.prototype.getUrl = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.Menu} returns this
 */
proto.admin.Menu.prototype.setUrl = function (value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};

/**
 * optional string description = 7;
 * @return {string}
 */
proto.admin.Menu.prototype.getDescription = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.Menu} returns this
 */
proto.admin.Menu.prototype.setDescription = function (value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};

/**
 * optional int32 ordering = 8;
 * @return {number}
 */
proto.admin.Menu.prototype.getOrdering = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};

/**
 * @param {number} value
 * @return {!proto.admin.Menu} returns this
 */
proto.admin.Menu.prototype.setOrdering = function (value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};

/**
 * optional bool is_active = 9;
 * @return {boolean}
 */
proto.admin.Menu.prototype.getIsActive = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 9, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.admin.Menu} returns this
 */
proto.admin.Menu.prototype.setIsActive = function (value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};

/**
 * optional bool is_deleted = 10;
 * @return {boolean}
 */
proto.admin.Menu.prototype.getIsDeleted = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 10, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.admin.Menu} returns this
 */
proto.admin.Menu.prototype.setIsDeleted = function (value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};

/**
 * optional string created_at = 11;
 * @return {string}
 */
proto.admin.Menu.prototype.getCreatedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.Menu} returns this
 */
proto.admin.Menu.prototype.setCreatedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};

/**
 * optional string updated_at = 12;
 * @return {string}
 */
proto.admin.Menu.prototype.getUpdatedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.Menu} returns this
 */
proto.admin.Menu.prototype.setUpdatedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};

/**
 * repeated PrivacyOfGroupPermissionMenu privacy_list = 13;
 * @return {!Array<!proto.admin.PrivacyOfGroupPermissionMenu>}
 */
proto.admin.Menu.prototype.getPrivacyListList = function () {
  return /** @type{!Array<!proto.admin.PrivacyOfGroupPermissionMenu>} */ (
    jspb.Message.getRepeatedWrapperField(
      this,
      proto.admin.PrivacyOfGroupPermissionMenu,
      13,
    )
  );
};

/**
 * @param {!Array<!proto.admin.PrivacyOfGroupPermissionMenu>} value
 * @return {!proto.admin.Menu} returns this
 */
proto.admin.Menu.prototype.setPrivacyListList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 13, value);
};

/**
 * @param {!proto.admin.PrivacyOfGroupPermissionMenu=} opt_value
 * @param {number=} opt_index
 * @return {!proto.admin.PrivacyOfGroupPermissionMenu}
 */
proto.admin.Menu.prototype.addPrivacyList = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    13,
    opt_value,
    proto.admin.PrivacyOfGroupPermissionMenu,
    opt_index,
  );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.admin.Menu} returns this
 */
proto.admin.Menu.prototype.clearPrivacyListList = function () {
  return this.setPrivacyListList([]);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.admin.MenuAction.prototype.toObject = function (opt_includeInstance) {
    return proto.admin.MenuAction.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.admin.MenuAction} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.admin.MenuAction.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        menuId: jspb.Message.getFieldWithDefault(msg, 1, ''),
        menuActionId: jspb.Message.getFieldWithDefault(msg, 2, ''),
        name: jspb.Message.getFieldWithDefault(msg, 3, ''),
        url: jspb.Message.getFieldWithDefault(msg, 4, ''),
        ordering: jspb.Message.getFieldWithDefault(msg, 5, 0),
        isActive: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
        isDeleted: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
        createdAt: jspb.Message.getFieldWithDefault(msg, 8, ''),
        updatedAt: jspb.Message.getFieldWithDefault(msg, 9, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admin.MenuAction}
 */
proto.admin.MenuAction.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admin.MenuAction();
  return proto.admin.MenuAction.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admin.MenuAction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admin.MenuAction}
 */
proto.admin.MenuAction.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setMenuId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setMenuActionId(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setUrl(value);
        break;
      case 5:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setOrdering(value);
        break;
      case 6:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsActive(value);
        break;
      case 7:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsDeleted(value);
        break;
      case 8:
        var value = /** @type {string} */ (reader.readString());
        msg.setCreatedAt(value);
        break;
      case 9:
        var value = /** @type {string} */ (reader.readString());
        msg.setUpdatedAt(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admin.MenuAction.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.admin.MenuAction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admin.MenuAction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin.MenuAction.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getMenuId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getMenuActionId();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getOrdering();
  if (f !== 0) {
    writer.writeInt32(5, f);
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(6, f);
  }
  f = message.getIsDeleted();
  if (f) {
    writer.writeBool(7, f);
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(8, f);
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(9, f);
  }
};

/**
 * optional string menu_id = 1;
 * @return {string}
 */
proto.admin.MenuAction.prototype.getMenuId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.MenuAction} returns this
 */
proto.admin.MenuAction.prototype.setMenuId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string menu_action_id = 2;
 * @return {string}
 */
proto.admin.MenuAction.prototype.getMenuActionId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.MenuAction} returns this
 */
proto.admin.MenuAction.prototype.setMenuActionId = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string name = 3;
 * @return {string}
 */
proto.admin.MenuAction.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.MenuAction} returns this
 */
proto.admin.MenuAction.prototype.setName = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string url = 4;
 * @return {string}
 */
proto.admin.MenuAction.prototype.getUrl = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.MenuAction} returns this
 */
proto.admin.MenuAction.prototype.setUrl = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional int32 ordering = 5;
 * @return {number}
 */
proto.admin.MenuAction.prototype.getOrdering = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};

/**
 * @param {number} value
 * @return {!proto.admin.MenuAction} returns this
 */
proto.admin.MenuAction.prototype.setOrdering = function (value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};

/**
 * optional bool is_active = 6;
 * @return {boolean}
 */
proto.admin.MenuAction.prototype.getIsActive = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 6, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.admin.MenuAction} returns this
 */
proto.admin.MenuAction.prototype.setIsActive = function (value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};

/**
 * optional bool is_deleted = 7;
 * @return {boolean}
 */
proto.admin.MenuAction.prototype.getIsDeleted = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 7, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.admin.MenuAction} returns this
 */
proto.admin.MenuAction.prototype.setIsDeleted = function (value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};

/**
 * optional string created_at = 8;
 * @return {string}
 */
proto.admin.MenuAction.prototype.getCreatedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.MenuAction} returns this
 */
proto.admin.MenuAction.prototype.setCreatedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};

/**
 * optional string updated_at = 9;
 * @return {string}
 */
proto.admin.MenuAction.prototype.getUpdatedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.MenuAction} returns this
 */
proto.admin.MenuAction.prototype.setUpdatedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.admin.MenuPrivacy.prototype.toObject = function (opt_includeInstance) {
    return proto.admin.MenuPrivacy.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.admin.MenuPrivacy} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.admin.MenuPrivacy.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        menuId: jspb.Message.getFieldWithDefault(msg, 1, ''),
        privacyTypeId: jspb.Message.getFieldWithDefault(msg, 2, 0),
        createdAt: jspb.Message.getFieldWithDefault(msg, 3, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admin.MenuPrivacy}
 */
proto.admin.MenuPrivacy.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admin.MenuPrivacy();
  return proto.admin.MenuPrivacy.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admin.MenuPrivacy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admin.MenuPrivacy}
 */
proto.admin.MenuPrivacy.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setMenuId(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setPrivacyTypeId(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setCreatedAt(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admin.MenuPrivacy.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.admin.MenuPrivacy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admin.MenuPrivacy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin.MenuPrivacy.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getMenuId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getPrivacyTypeId();
  if (f !== 0) {
    writer.writeInt32(2, f);
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
};

/**
 * optional string menu_id = 1;
 * @return {string}
 */
proto.admin.MenuPrivacy.prototype.getMenuId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.MenuPrivacy} returns this
 */
proto.admin.MenuPrivacy.prototype.setMenuId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional int32 privacy_type_id = 2;
 * @return {number}
 */
proto.admin.MenuPrivacy.prototype.getPrivacyTypeId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/**
 * @param {number} value
 * @return {!proto.admin.MenuPrivacy} returns this
 */
proto.admin.MenuPrivacy.prototype.setPrivacyTypeId = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};

/**
 * optional string created_at = 3;
 * @return {string}
 */
proto.admin.MenuPrivacy.prototype.getCreatedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.MenuPrivacy} returns this
 */
proto.admin.MenuPrivacy.prototype.setCreatedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.admin.Position.prototype.toObject = function (opt_includeInstance) {
    return proto.admin.Position.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.admin.Position} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.admin.Position.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        positionId: jspb.Message.getFieldWithDefault(msg, 1, 0),
        code: jspb.Message.getFieldWithDefault(msg, 2, ''),
        name: jspb.Message.getFieldWithDefault(msg, 3, ''),
        description: jspb.Message.getFieldWithDefault(msg, 4, ''),
        isActive: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
        createdAt: jspb.Message.getFieldWithDefault(msg, 6, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admin.Position}
 */
proto.admin.Position.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admin.Position();
  return proto.admin.Position.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admin.Position} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admin.Position}
 */
proto.admin.Position.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setPositionId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setCode(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setDescription(value);
        break;
      case 5:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsActive(value);
        break;
      case 6:
        var value = /** @type {string} */ (reader.readString());
        msg.setCreatedAt(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admin.Position.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.admin.Position.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admin.Position} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin.Position.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getPositionId();
  if (f !== 0) {
    writer.writeInt32(1, f);
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(5, f);
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(6, f);
  }
};

/**
 * optional int32 position_id = 1;
 * @return {number}
 */
proto.admin.Position.prototype.getPositionId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.admin.Position} returns this
 */
proto.admin.Position.prototype.setPositionId = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional string code = 2;
 * @return {string}
 */
proto.admin.Position.prototype.getCode = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.Position} returns this
 */
proto.admin.Position.prototype.setCode = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string name = 3;
 * @return {string}
 */
proto.admin.Position.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.Position} returns this
 */
proto.admin.Position.prototype.setName = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string description = 4;
 * @return {string}
 */
proto.admin.Position.prototype.getDescription = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.Position} returns this
 */
proto.admin.Position.prototype.setDescription = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional bool is_active = 5;
 * @return {boolean}
 */
proto.admin.Position.prototype.getIsActive = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 5, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.admin.Position} returns this
 */
proto.admin.Position.prototype.setIsActive = function (value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};

/**
 * optional string created_at = 6;
 * @return {string}
 */
proto.admin.Position.prototype.getCreatedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.Position} returns this
 */
proto.admin.Position.prototype.setCreatedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.admin.PrivacyType.prototype.toObject = function (opt_includeInstance) {
    return proto.admin.PrivacyType.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.admin.PrivacyType} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.admin.PrivacyType.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        privacyTypeId: jspb.Message.getFieldWithDefault(msg, 1, 0),
        name: jspb.Message.getFieldWithDefault(msg, 2, ''),
        description: jspb.Message.getFieldWithDefault(msg, 3, ''),
        isActive: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
        isDeleted: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
        createdAt: jspb.Message.getFieldWithDefault(msg, 6, ''),
        updatedAt: jspb.Message.getFieldWithDefault(msg, 7, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admin.PrivacyType}
 */
proto.admin.PrivacyType.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admin.PrivacyType();
  return proto.admin.PrivacyType.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admin.PrivacyType} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admin.PrivacyType}
 */
proto.admin.PrivacyType.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setPrivacyTypeId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setDescription(value);
        break;
      case 4:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsActive(value);
        break;
      case 5:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsDeleted(value);
        break;
      case 6:
        var value = /** @type {string} */ (reader.readString());
        msg.setCreatedAt(value);
        break;
      case 7:
        var value = /** @type {string} */ (reader.readString());
        msg.setUpdatedAt(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admin.PrivacyType.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.admin.PrivacyType.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admin.PrivacyType} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin.PrivacyType.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getPrivacyTypeId();
  if (f !== 0) {
    writer.writeInt32(1, f);
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(4, f);
  }
  f = message.getIsDeleted();
  if (f) {
    writer.writeBool(5, f);
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(6, f);
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(7, f);
  }
};

/**
 * optional int32 privacy_type_id = 1;
 * @return {number}
 */
proto.admin.PrivacyType.prototype.getPrivacyTypeId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.admin.PrivacyType} returns this
 */
proto.admin.PrivacyType.prototype.setPrivacyTypeId = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional string name = 2;
 * @return {string}
 */
proto.admin.PrivacyType.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.PrivacyType} returns this
 */
proto.admin.PrivacyType.prototype.setName = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string description = 3;
 * @return {string}
 */
proto.admin.PrivacyType.prototype.getDescription = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.PrivacyType} returns this
 */
proto.admin.PrivacyType.prototype.setDescription = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional bool is_active = 4;
 * @return {boolean}
 */
proto.admin.PrivacyType.prototype.getIsActive = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 4, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.admin.PrivacyType} returns this
 */
proto.admin.PrivacyType.prototype.setIsActive = function (value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};

/**
 * optional bool is_deleted = 5;
 * @return {boolean}
 */
proto.admin.PrivacyType.prototype.getIsDeleted = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 5, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.admin.PrivacyType} returns this
 */
proto.admin.PrivacyType.prototype.setIsDeleted = function (value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};

/**
 * optional string created_at = 6;
 * @return {string}
 */
proto.admin.PrivacyType.prototype.getCreatedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.PrivacyType} returns this
 */
proto.admin.PrivacyType.prototype.setCreatedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};

/**
 * optional string updated_at = 7;
 * @return {string}
 */
proto.admin.PrivacyType.prototype.getUpdatedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.PrivacyType} returns this
 */
proto.admin.PrivacyType.prototype.setUpdatedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.admin.RequiredUserField.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.admin.RequiredUserField.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.admin.RequiredUserField} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.admin.RequiredUserField.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        fieldId: jspb.Message.getFieldWithDefault(msg, 1, 0),
        field: jspb.Message.getFieldWithDefault(msg, 2, ''),
        isRequire: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
        isActive: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
        isDeleted: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
        createdAt: jspb.Message.getFieldWithDefault(msg, 6, ''),
        updatedAt: jspb.Message.getFieldWithDefault(msg, 7, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admin.RequiredUserField}
 */
proto.admin.RequiredUserField.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admin.RequiredUserField();
  return proto.admin.RequiredUserField.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admin.RequiredUserField} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admin.RequiredUserField}
 */
proto.admin.RequiredUserField.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setFieldId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setField(value);
        break;
      case 3:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsRequire(value);
        break;
      case 4:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsActive(value);
        break;
      case 5:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsDeleted(value);
        break;
      case 6:
        var value = /** @type {string} */ (reader.readString());
        msg.setCreatedAt(value);
        break;
      case 7:
        var value = /** @type {string} */ (reader.readString());
        msg.setUpdatedAt(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admin.RequiredUserField.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.admin.RequiredUserField.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admin.RequiredUserField} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin.RequiredUserField.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getFieldId();
  if (f !== 0) {
    writer.writeInt32(1, f);
  }
  f = message.getField();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getIsRequire();
  if (f) {
    writer.writeBool(3, f);
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(4, f);
  }
  f = message.getIsDeleted();
  if (f) {
    writer.writeBool(5, f);
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(6, f);
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(7, f);
  }
};

/**
 * optional int32 field_id = 1;
 * @return {number}
 */
proto.admin.RequiredUserField.prototype.getFieldId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.admin.RequiredUserField} returns this
 */
proto.admin.RequiredUserField.prototype.setFieldId = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional string field = 2;
 * @return {string}
 */
proto.admin.RequiredUserField.prototype.getField = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.RequiredUserField} returns this
 */
proto.admin.RequiredUserField.prototype.setField = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional bool is_require = 3;
 * @return {boolean}
 */
proto.admin.RequiredUserField.prototype.getIsRequire = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 3, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.admin.RequiredUserField} returns this
 */
proto.admin.RequiredUserField.prototype.setIsRequire = function (value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};

/**
 * optional bool is_active = 4;
 * @return {boolean}
 */
proto.admin.RequiredUserField.prototype.getIsActive = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 4, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.admin.RequiredUserField} returns this
 */
proto.admin.RequiredUserField.prototype.setIsActive = function (value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};

/**
 * optional bool is_deleted = 5;
 * @return {boolean}
 */
proto.admin.RequiredUserField.prototype.getIsDeleted = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 5, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.admin.RequiredUserField} returns this
 */
proto.admin.RequiredUserField.prototype.setIsDeleted = function (value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};

/**
 * optional string created_at = 6;
 * @return {string}
 */
proto.admin.RequiredUserField.prototype.getCreatedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.RequiredUserField} returns this
 */
proto.admin.RequiredUserField.prototype.setCreatedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};

/**
 * optional string updated_at = 7;
 * @return {string}
 */
proto.admin.RequiredUserField.prototype.getUpdatedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.RequiredUserField} returns this
 */
proto.admin.RequiredUserField.prototype.setUpdatedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.admin.System.prototype.toObject = function (opt_includeInstance) {
    return proto.admin.System.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.admin.System} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.admin.System.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        systemId: jspb.Message.getFieldWithDefault(msg, 1, ''),
        name: jspb.Message.getFieldWithDefault(msg, 2, ''),
        description: jspb.Message.getFieldWithDefault(msg, 3, ''),
        isActive: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
        isDeleted: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
        createdAt: jspb.Message.getFieldWithDefault(msg, 6, ''),
        updatedAt: jspb.Message.getFieldWithDefault(msg, 7, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admin.System}
 */
proto.admin.System.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admin.System();
  return proto.admin.System.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admin.System} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admin.System}
 */
proto.admin.System.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setSystemId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setDescription(value);
        break;
      case 4:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsActive(value);
        break;
      case 5:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsDeleted(value);
        break;
      case 6:
        var value = /** @type {string} */ (reader.readString());
        msg.setCreatedAt(value);
        break;
      case 7:
        var value = /** @type {string} */ (reader.readString());
        msg.setUpdatedAt(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admin.System.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.admin.System.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admin.System} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin.System.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getSystemId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(4, f);
  }
  f = message.getIsDeleted();
  if (f) {
    writer.writeBool(5, f);
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(6, f);
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(7, f);
  }
};

/**
 * optional string system_id = 1;
 * @return {string}
 */
proto.admin.System.prototype.getSystemId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.System} returns this
 */
proto.admin.System.prototype.setSystemId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string name = 2;
 * @return {string}
 */
proto.admin.System.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.System} returns this
 */
proto.admin.System.prototype.setName = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string description = 3;
 * @return {string}
 */
proto.admin.System.prototype.getDescription = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.System} returns this
 */
proto.admin.System.prototype.setDescription = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional bool is_active = 4;
 * @return {boolean}
 */
proto.admin.System.prototype.getIsActive = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 4, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.admin.System} returns this
 */
proto.admin.System.prototype.setIsActive = function (value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};

/**
 * optional bool is_deleted = 5;
 * @return {boolean}
 */
proto.admin.System.prototype.getIsDeleted = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 5, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.admin.System} returns this
 */
proto.admin.System.prototype.setIsDeleted = function (value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};

/**
 * optional string created_at = 6;
 * @return {string}
 */
proto.admin.System.prototype.getCreatedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.System} returns this
 */
proto.admin.System.prototype.setCreatedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};

/**
 * optional string updated_at = 7;
 * @return {string}
 */
proto.admin.System.prototype.getUpdatedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.System} returns this
 */
proto.admin.System.prototype.setUpdatedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.admin.UserInfo.repeatedFields_ = [12];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.admin.UserInfo.prototype.toObject = function (opt_includeInstance) {
    return proto.admin.UserInfo.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.admin.UserInfo} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.admin.UserInfo.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        userId: jspb.Message.getFieldWithDefault(msg, 1, ''),
        email: jspb.Message.getFieldWithDefault(msg, 2, ''),
        employeeNumber: jspb.Message.getFieldWithDefault(msg, 3, ''),
        name: jspb.Message.getFieldWithDefault(msg, 4, ''),
        department:
          (f = msg.getDepartment()) &&
          proto.admin.IdNumberName.toObject(includeInstance, f),
        position:
          (f = msg.getPosition()) &&
          proto.admin.IdNumberName.toObject(includeInstance, f),
        job:
          (f = msg.getJob()) &&
          proto.admin.IdNumberName.toObject(includeInstance, f),
        phoneNumber: jspb.Message.getFieldWithDefault(msg, 8, 0),
        extensionNumber: jspb.Message.getFieldWithDefault(msg, 9, 0),
        state: jspb.Message.getFieldWithDefault(msg, 10, 0),
        createdAt: jspb.Message.getFieldWithDefault(msg, 11, ''),
        authList: jspb.Message.toObjectList(
          msg.getAuthList(),
          proto.admin.UserInfoAuth.toObject,
          includeInstance,
        ),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admin.UserInfo}
 */
proto.admin.UserInfo.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admin.UserInfo();
  return proto.admin.UserInfo.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admin.UserInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admin.UserInfo}
 */
proto.admin.UserInfo.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setUserId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setEmail(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setEmployeeNumber(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      case 5:
        var value = new proto.admin.IdNumberName();
        reader.readMessage(
          value,
          proto.admin.IdNumberName.deserializeBinaryFromReader,
        );
        msg.setDepartment(value);
        break;
      case 6:
        var value = new proto.admin.IdNumberName();
        reader.readMessage(
          value,
          proto.admin.IdNumberName.deserializeBinaryFromReader,
        );
        msg.setPosition(value);
        break;
      case 7:
        var value = new proto.admin.IdNumberName();
        reader.readMessage(
          value,
          proto.admin.IdNumberName.deserializeBinaryFromReader,
        );
        msg.setJob(value);
        break;
      case 8:
        var value = /** @type {number} */ (reader.readInt64());
        msg.setPhoneNumber(value);
        break;
      case 9:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setExtensionNumber(value);
        break;
      case 10:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setState(value);
        break;
      case 11:
        var value = /** @type {string} */ (reader.readString());
        msg.setCreatedAt(value);
        break;
      case 12:
        var value = new proto.admin.UserInfoAuth();
        reader.readMessage(
          value,
          proto.admin.UserInfoAuth.deserializeBinaryFromReader,
        );
        msg.addAuth(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admin.UserInfo.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.admin.UserInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admin.UserInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin.UserInfo.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getEmployeeNumber();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getDepartment();
  if (f != null) {
    writer.writeMessage(5, f, proto.admin.IdNumberName.serializeBinaryToWriter);
  }
  f = message.getPosition();
  if (f != null) {
    writer.writeMessage(6, f, proto.admin.IdNumberName.serializeBinaryToWriter);
  }
  f = message.getJob();
  if (f != null) {
    writer.writeMessage(7, f, proto.admin.IdNumberName.serializeBinaryToWriter);
  }
  f = message.getPhoneNumber();
  if (f !== 0) {
    writer.writeInt64(8, f);
  }
  f = message.getExtensionNumber();
  if (f !== 0) {
    writer.writeInt32(9, f);
  }
  f = message.getState();
  if (f !== 0) {
    writer.writeInt32(10, f);
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(11, f);
  }
  f = message.getAuthList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      12,
      f,
      proto.admin.UserInfoAuth.serializeBinaryToWriter,
    );
  }
};

/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.admin.UserInfo.prototype.getUserId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.UserInfo} returns this
 */
proto.admin.UserInfo.prototype.setUserId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string email = 2;
 * @return {string}
 */
proto.admin.UserInfo.prototype.getEmail = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.UserInfo} returns this
 */
proto.admin.UserInfo.prototype.setEmail = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string employee_number = 3;
 * @return {string}
 */
proto.admin.UserInfo.prototype.getEmployeeNumber = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.UserInfo} returns this
 */
proto.admin.UserInfo.prototype.setEmployeeNumber = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string name = 4;
 * @return {string}
 */
proto.admin.UserInfo.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.UserInfo} returns this
 */
proto.admin.UserInfo.prototype.setName = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional IdNumberName department = 5;
 * @return {?proto.admin.IdNumberName}
 */
proto.admin.UserInfo.prototype.getDepartment = function () {
  return /** @type{?proto.admin.IdNumberName} */ (
    jspb.Message.getWrapperField(this, proto.admin.IdNumberName, 5)
  );
};

/**
 * @param {?proto.admin.IdNumberName|undefined} value
 * @return {!proto.admin.UserInfo} returns this
 */
proto.admin.UserInfo.prototype.setDepartment = function (value) {
  return jspb.Message.setWrapperField(this, 5, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.admin.UserInfo} returns this
 */
proto.admin.UserInfo.prototype.clearDepartment = function () {
  return this.setDepartment(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admin.UserInfo.prototype.hasDepartment = function () {
  return jspb.Message.getField(this, 5) != null;
};

/**
 * optional IdNumberName position = 6;
 * @return {?proto.admin.IdNumberName}
 */
proto.admin.UserInfo.prototype.getPosition = function () {
  return /** @type{?proto.admin.IdNumberName} */ (
    jspb.Message.getWrapperField(this, proto.admin.IdNumberName, 6)
  );
};

/**
 * @param {?proto.admin.IdNumberName|undefined} value
 * @return {!proto.admin.UserInfo} returns this
 */
proto.admin.UserInfo.prototype.setPosition = function (value) {
  return jspb.Message.setWrapperField(this, 6, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.admin.UserInfo} returns this
 */
proto.admin.UserInfo.prototype.clearPosition = function () {
  return this.setPosition(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admin.UserInfo.prototype.hasPosition = function () {
  return jspb.Message.getField(this, 6) != null;
};

/**
 * optional IdNumberName job = 7;
 * @return {?proto.admin.IdNumberName}
 */
proto.admin.UserInfo.prototype.getJob = function () {
  return /** @type{?proto.admin.IdNumberName} */ (
    jspb.Message.getWrapperField(this, proto.admin.IdNumberName, 7)
  );
};

/**
 * @param {?proto.admin.IdNumberName|undefined} value
 * @return {!proto.admin.UserInfo} returns this
 */
proto.admin.UserInfo.prototype.setJob = function (value) {
  return jspb.Message.setWrapperField(this, 7, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.admin.UserInfo} returns this
 */
proto.admin.UserInfo.prototype.clearJob = function () {
  return this.setJob(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.admin.UserInfo.prototype.hasJob = function () {
  return jspb.Message.getField(this, 7) != null;
};

/**
 * optional int64 phone_number = 8;
 * @return {number}
 */
proto.admin.UserInfo.prototype.getPhoneNumber = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};

/**
 * @param {number} value
 * @return {!proto.admin.UserInfo} returns this
 */
proto.admin.UserInfo.prototype.setPhoneNumber = function (value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};

/**
 * optional int32 extension_number = 9;
 * @return {number}
 */
proto.admin.UserInfo.prototype.getExtensionNumber = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};

/**
 * @param {number} value
 * @return {!proto.admin.UserInfo} returns this
 */
proto.admin.UserInfo.prototype.setExtensionNumber = function (value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};

/**
 * optional int32 state = 10;
 * @return {number}
 */
proto.admin.UserInfo.prototype.getState = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};

/**
 * @param {number} value
 * @return {!proto.admin.UserInfo} returns this
 */
proto.admin.UserInfo.prototype.setState = function (value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};

/**
 * optional string created_at = 11;
 * @return {string}
 */
proto.admin.UserInfo.prototype.getCreatedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.UserInfo} returns this
 */
proto.admin.UserInfo.prototype.setCreatedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};

/**
 * repeated UserInfoAuth auth = 12;
 * @return {!Array<!proto.admin.UserInfoAuth>}
 */
proto.admin.UserInfo.prototype.getAuthList = function () {
  return /** @type{!Array<!proto.admin.UserInfoAuth>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.admin.UserInfoAuth, 12)
  );
};

/**
 * @param {!Array<!proto.admin.UserInfoAuth>} value
 * @return {!proto.admin.UserInfo} returns this
 */
proto.admin.UserInfo.prototype.setAuthList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 12, value);
};

/**
 * @param {!proto.admin.UserInfoAuth=} opt_value
 * @param {number=} opt_index
 * @return {!proto.admin.UserInfoAuth}
 */
proto.admin.UserInfo.prototype.addAuth = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    12,
    opt_value,
    proto.admin.UserInfoAuth,
    opt_index,
  );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.admin.UserInfo} returns this
 */
proto.admin.UserInfo.prototype.clearAuthList = function () {
  return this.setAuthList([]);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.admin.UserInfoAuth.prototype.toObject = function (opt_includeInstance) {
    return proto.admin.UserInfoAuth.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.admin.UserInfoAuth} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.admin.UserInfoAuth.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        permissionCode: jspb.Message.getFieldWithDefault(msg, 1, ''),
        name: jspb.Message.getFieldWithDefault(msg, 2, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admin.UserInfoAuth}
 */
proto.admin.UserInfoAuth.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admin.UserInfoAuth();
  return proto.admin.UserInfoAuth.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admin.UserInfoAuth} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admin.UserInfoAuth}
 */
proto.admin.UserInfoAuth.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setPermissionCode(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admin.UserInfoAuth.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.admin.UserInfoAuth.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admin.UserInfoAuth} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin.UserInfoAuth.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getPermissionCode();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
};

/**
 * optional string permission_code = 1;
 * @return {string}
 */
proto.admin.UserInfoAuth.prototype.getPermissionCode = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.UserInfoAuth} returns this
 */
proto.admin.UserInfoAuth.prototype.setPermissionCode = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string name = 2;
 * @return {string}
 */
proto.admin.UserInfoAuth.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.UserInfoAuth} returns this
 */
proto.admin.UserInfoAuth.prototype.setName = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.admin.IdName.prototype.toObject = function (opt_includeInstance) {
    return proto.admin.IdName.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.admin.IdName} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.admin.IdName.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        id: jspb.Message.getFieldWithDefault(msg, 1, ''),
        name: jspb.Message.getFieldWithDefault(msg, 2, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admin.IdName}
 */
proto.admin.IdName.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admin.IdName();
  return proto.admin.IdName.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admin.IdName} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admin.IdName}
 */
proto.admin.IdName.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admin.IdName.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.admin.IdName.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admin.IdName} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin.IdName.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
};

/**
 * optional string id = 1;
 * @return {string}
 */
proto.admin.IdName.prototype.getId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.IdName} returns this
 */
proto.admin.IdName.prototype.setId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string name = 2;
 * @return {string}
 */
proto.admin.IdName.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.IdName} returns this
 */
proto.admin.IdName.prototype.setName = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.admin.IdNumberName.prototype.toObject = function (opt_includeInstance) {
    return proto.admin.IdNumberName.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.admin.IdNumberName} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.admin.IdNumberName.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        id: jspb.Message.getFieldWithDefault(msg, 1, 0),
        name: jspb.Message.getFieldWithDefault(msg, 2, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admin.IdNumberName}
 */
proto.admin.IdNumberName.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admin.IdNumberName();
  return proto.admin.IdNumberName.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admin.IdNumberName} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admin.IdNumberName}
 */
proto.admin.IdNumberName.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admin.IdNumberName.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.admin.IdNumberName.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admin.IdNumberName} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin.IdNumberName.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(1, f);
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
};

/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.admin.IdNumberName.prototype.getId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.admin.IdNumberName} returns this
 */
proto.admin.IdNumberName.prototype.setId = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional string name = 2;
 * @return {string}
 */
proto.admin.IdNumberName.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.IdNumberName} returns this
 */
proto.admin.IdNumberName.prototype.setName = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.admin.GlobalNavigationMenus.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.admin.GlobalNavigationMenus.toObject(
      opt_includeInstance,
      this,
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.admin.GlobalNavigationMenus} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.admin.GlobalNavigationMenus.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        systemId: jspb.Message.getFieldWithDefault(msg, 1, ''),
        systemName: jspb.Message.getFieldWithDefault(msg, 2, ''),
        menuId: jspb.Message.getFieldWithDefault(msg, 3, ''),
        menuName: jspb.Message.getFieldWithDefault(msg, 4, ''),
        parentMenuId: jspb.Message.getFieldWithDefault(msg, 5, ''),
        url: jspb.Message.getFieldWithDefault(msg, 6, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admin.GlobalNavigationMenus}
 */
proto.admin.GlobalNavigationMenus.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admin.GlobalNavigationMenus();
  return proto.admin.GlobalNavigationMenus.deserializeBinaryFromReader(
    msg,
    reader,
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admin.GlobalNavigationMenus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admin.GlobalNavigationMenus}
 */
proto.admin.GlobalNavigationMenus.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setSystemId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setSystemName(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setMenuId(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setMenuName(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setParentMenuId(value);
        break;
      case 6:
        var value = /** @type {string} */ (reader.readString());
        msg.setUrl(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admin.GlobalNavigationMenus.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.admin.GlobalNavigationMenus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admin.GlobalNavigationMenus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin.GlobalNavigationMenus.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getSystemId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getSystemName();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getMenuId();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getMenuName();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getParentMenuId();
  if (f.length > 0) {
    writer.writeString(5, f);
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(6, f);
  }
};

/**
 * optional string system_id = 1;
 * @return {string}
 */
proto.admin.GlobalNavigationMenus.prototype.getSystemId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.GlobalNavigationMenus} returns this
 */
proto.admin.GlobalNavigationMenus.prototype.setSystemId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string system_name = 2;
 * @return {string}
 */
proto.admin.GlobalNavigationMenus.prototype.getSystemName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.GlobalNavigationMenus} returns this
 */
proto.admin.GlobalNavigationMenus.prototype.setSystemName = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string menu_id = 3;
 * @return {string}
 */
proto.admin.GlobalNavigationMenus.prototype.getMenuId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.GlobalNavigationMenus} returns this
 */
proto.admin.GlobalNavigationMenus.prototype.setMenuId = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string menu_name = 4;
 * @return {string}
 */
proto.admin.GlobalNavigationMenus.prototype.getMenuName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.GlobalNavigationMenus} returns this
 */
proto.admin.GlobalNavigationMenus.prototype.setMenuName = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional string parent_menu_id = 5;
 * @return {string}
 */
proto.admin.GlobalNavigationMenus.prototype.getParentMenuId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.GlobalNavigationMenus} returns this
 */
proto.admin.GlobalNavigationMenus.prototype.setParentMenuId = function (value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * optional string url = 6;
 * @return {string}
 */
proto.admin.GlobalNavigationMenus.prototype.getUrl = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.GlobalNavigationMenus} returns this
 */
proto.admin.GlobalNavigationMenus.prototype.setUrl = function (value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};

goog.object.extend(exports, proto.admin);
