/**
 * @fileoverview gRPC-Web generated client stub for admin
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.29.3
// source: department.proto

/* eslint-disable */
// @ts-nocheck

const grpc = {};
grpc.web = require('grpc-web');

var admin$common_pb = require('./admin-common_pb.js');
const proto = {};
proto.admin = require('./department_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.admin.AdminDepartmentServiceClient = function (
  hostname,
  credentials,
  options,
) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');
};

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.admin.AdminDepartmentServicePromiseClient = function (
  hostname,
  credentials,
  options,
) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.admin.GetDepartmentListRequest,
 *   !proto.admin.GetDepartmentListResponse>}
 */
const methodDescriptor_AdminDepartmentService_GetDepartmentList =
  new grpc.web.MethodDescriptor(
    '/admin.AdminDepartmentService/GetDepartmentList',
    grpc.web.MethodType.UNARY,
    proto.admin.GetDepartmentListRequest,
    proto.admin.GetDepartmentListResponse,
    /**
     * @param {!proto.admin.GetDepartmentListRequest} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.admin.GetDepartmentListResponse.deserializeBinary,
  );

/**
 * @param {!proto.admin.GetDepartmentListRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.admin.GetDepartmentListResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.admin.GetDepartmentListResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.admin.AdminDepartmentServiceClient.prototype.getDepartmentList =
  function (request, metadata, callback) {
    return this.client_.rpcCall(
      this.hostname_ + '/admin.AdminDepartmentService/GetDepartmentList',
      request,
      metadata || {},
      methodDescriptor_AdminDepartmentService_GetDepartmentList,
      callback,
    );
  };

/**
 * @param {!proto.admin.GetDepartmentListRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.admin.GetDepartmentListResponse>}
 *     Promise that resolves to the response
 */
proto.admin.AdminDepartmentServicePromiseClient.prototype.getDepartmentList =
  function (request, metadata) {
    return this.client_.unaryCall(
      this.hostname_ + '/admin.AdminDepartmentService/GetDepartmentList',
      request,
      metadata || {},
      methodDescriptor_AdminDepartmentService_GetDepartmentList,
    );
  };

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.admin.CreateDepartmentRequest,
 *   !proto.admin.CreateDepartmentResponse>}
 */
const methodDescriptor_AdminDepartmentService_CreateDepartment =
  new grpc.web.MethodDescriptor(
    '/admin.AdminDepartmentService/CreateDepartment',
    grpc.web.MethodType.UNARY,
    proto.admin.CreateDepartmentRequest,
    proto.admin.CreateDepartmentResponse,
    /**
     * @param {!proto.admin.CreateDepartmentRequest} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.admin.CreateDepartmentResponse.deserializeBinary,
  );

/**
 * @param {!proto.admin.CreateDepartmentRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.admin.CreateDepartmentResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.admin.CreateDepartmentResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.admin.AdminDepartmentServiceClient.prototype.createDepartment = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/admin.AdminDepartmentService/CreateDepartment',
    request,
    metadata || {},
    methodDescriptor_AdminDepartmentService_CreateDepartment,
    callback,
  );
};

/**
 * @param {!proto.admin.CreateDepartmentRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.admin.CreateDepartmentResponse>}
 *     Promise that resolves to the response
 */
proto.admin.AdminDepartmentServicePromiseClient.prototype.createDepartment =
  function (request, metadata) {
    return this.client_.unaryCall(
      this.hostname_ + '/admin.AdminDepartmentService/CreateDepartment',
      request,
      metadata || {},
      methodDescriptor_AdminDepartmentService_CreateDepartment,
    );
  };

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.admin.UpdateDepartmentRequest,
 *   !proto.admin.UpdateDepartmentResponse>}
 */
const methodDescriptor_AdminDepartmentService_UpdateDepartment =
  new grpc.web.MethodDescriptor(
    '/admin.AdminDepartmentService/UpdateDepartment',
    grpc.web.MethodType.UNARY,
    proto.admin.UpdateDepartmentRequest,
    proto.admin.UpdateDepartmentResponse,
    /**
     * @param {!proto.admin.UpdateDepartmentRequest} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.admin.UpdateDepartmentResponse.deserializeBinary,
  );

/**
 * @param {!proto.admin.UpdateDepartmentRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.admin.UpdateDepartmentResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.admin.UpdateDepartmentResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.admin.AdminDepartmentServiceClient.prototype.updateDepartment = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/admin.AdminDepartmentService/UpdateDepartment',
    request,
    metadata || {},
    methodDescriptor_AdminDepartmentService_UpdateDepartment,
    callback,
  );
};

/**
 * @param {!proto.admin.UpdateDepartmentRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.admin.UpdateDepartmentResponse>}
 *     Promise that resolves to the response
 */
proto.admin.AdminDepartmentServicePromiseClient.prototype.updateDepartment =
  function (request, metadata) {
    return this.client_.unaryCall(
      this.hostname_ + '/admin.AdminDepartmentService/UpdateDepartment',
      request,
      metadata || {},
      methodDescriptor_AdminDepartmentService_UpdateDepartment,
    );
  };

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.admin.DeleteDepartmentRequest,
 *   !proto.admin.DeleteDepartmentResponse>}
 */
const methodDescriptor_AdminDepartmentService_DeleteDepartment =
  new grpc.web.MethodDescriptor(
    '/admin.AdminDepartmentService/DeleteDepartment',
    grpc.web.MethodType.UNARY,
    proto.admin.DeleteDepartmentRequest,
    proto.admin.DeleteDepartmentResponse,
    /**
     * @param {!proto.admin.DeleteDepartmentRequest} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.admin.DeleteDepartmentResponse.deserializeBinary,
  );

/**
 * @param {!proto.admin.DeleteDepartmentRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.admin.DeleteDepartmentResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.admin.DeleteDepartmentResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.admin.AdminDepartmentServiceClient.prototype.deleteDepartment = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/admin.AdminDepartmentService/DeleteDepartment',
    request,
    metadata || {},
    methodDescriptor_AdminDepartmentService_DeleteDepartment,
    callback,
  );
};

/**
 * @param {!proto.admin.DeleteDepartmentRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.admin.DeleteDepartmentResponse>}
 *     Promise that resolves to the response
 */
proto.admin.AdminDepartmentServicePromiseClient.prototype.deleteDepartment =
  function (request, metadata) {
    return this.client_.unaryCall(
      this.hostname_ + '/admin.AdminDepartmentService/DeleteDepartment',
      request,
      metadata || {},
      methodDescriptor_AdminDepartmentService_DeleteDepartment,
    );
  };

module.exports = proto.admin;
