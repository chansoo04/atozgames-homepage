/**
 * @fileoverview gRPC-Web generated client stub for admin
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.29.3
// source: job.proto

/* eslint-disable */
// @ts-nocheck

const grpc = {};
grpc.web = require('grpc-web');

var admin$common_pb = require('./admin-common_pb.js');
const proto = {};
proto.admin = require('./job_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.admin.AdminJobServiceClient = function (hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');
};

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.admin.AdminJobServicePromiseClient = function (
  hostname,
  credentials,
  options,
) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.admin.GetJobListRequest,
 *   !proto.admin.GetJobListResponse>}
 */
const methodDescriptor_AdminJobService_GetJobList =
  new grpc.web.MethodDescriptor(
    '/admin.AdminJobService/GetJobList',
    grpc.web.MethodType.UNARY,
    proto.admin.GetJobListRequest,
    proto.admin.GetJobListResponse,
    /**
     * @param {!proto.admin.GetJobListRequest} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.admin.GetJobListResponse.deserializeBinary,
  );

/**
 * @param {!proto.admin.GetJobListRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.admin.GetJobListResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.admin.GetJobListResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.admin.AdminJobServiceClient.prototype.getJobList = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/admin.AdminJobService/GetJobList',
    request,
    metadata || {},
    methodDescriptor_AdminJobService_GetJobList,
    callback,
  );
};

/**
 * @param {!proto.admin.GetJobListRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.admin.GetJobListResponse>}
 *     Promise that resolves to the response
 */
proto.admin.AdminJobServicePromiseClient.prototype.getJobList = function (
  request,
  metadata,
) {
  return this.client_.unaryCall(
    this.hostname_ + '/admin.AdminJobService/GetJobList',
    request,
    metadata || {},
    methodDescriptor_AdminJobService_GetJobList,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.admin.CreateJobRequest,
 *   !proto.admin.CreateJobResponse>}
 */
const methodDescriptor_AdminJobService_CreateJob =
  new grpc.web.MethodDescriptor(
    '/admin.AdminJobService/CreateJob',
    grpc.web.MethodType.UNARY,
    proto.admin.CreateJobRequest,
    proto.admin.CreateJobResponse,
    /**
     * @param {!proto.admin.CreateJobRequest} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.admin.CreateJobResponse.deserializeBinary,
  );

/**
 * @param {!proto.admin.CreateJobRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.admin.CreateJobResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.admin.CreateJobResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.admin.AdminJobServiceClient.prototype.createJob = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/admin.AdminJobService/CreateJob',
    request,
    metadata || {},
    methodDescriptor_AdminJobService_CreateJob,
    callback,
  );
};

/**
 * @param {!proto.admin.CreateJobRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.admin.CreateJobResponse>}
 *     Promise that resolves to the response
 */
proto.admin.AdminJobServicePromiseClient.prototype.createJob = function (
  request,
  metadata,
) {
  return this.client_.unaryCall(
    this.hostname_ + '/admin.AdminJobService/CreateJob',
    request,
    metadata || {},
    methodDescriptor_AdminJobService_CreateJob,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.admin.UpdateJobRequest,
 *   !proto.admin.UpdateJobResponse>}
 */
const methodDescriptor_AdminJobService_UpdateJob =
  new grpc.web.MethodDescriptor(
    '/admin.AdminJobService/UpdateJob',
    grpc.web.MethodType.UNARY,
    proto.admin.UpdateJobRequest,
    proto.admin.UpdateJobResponse,
    /**
     * @param {!proto.admin.UpdateJobRequest} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.admin.UpdateJobResponse.deserializeBinary,
  );

/**
 * @param {!proto.admin.UpdateJobRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.admin.UpdateJobResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.admin.UpdateJobResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.admin.AdminJobServiceClient.prototype.updateJob = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/admin.AdminJobService/UpdateJob',
    request,
    metadata || {},
    methodDescriptor_AdminJobService_UpdateJob,
    callback,
  );
};

/**
 * @param {!proto.admin.UpdateJobRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.admin.UpdateJobResponse>}
 *     Promise that resolves to the response
 */
proto.admin.AdminJobServicePromiseClient.prototype.updateJob = function (
  request,
  metadata,
) {
  return this.client_.unaryCall(
    this.hostname_ + '/admin.AdminJobService/UpdateJob',
    request,
    metadata || {},
    methodDescriptor_AdminJobService_UpdateJob,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.admin.DeleteJobRequest,
 *   !proto.admin.DeleteJobResponse>}
 */
const methodDescriptor_AdminJobService_DeleteJob =
  new grpc.web.MethodDescriptor(
    '/admin.AdminJobService/DeleteJob',
    grpc.web.MethodType.UNARY,
    proto.admin.DeleteJobRequest,
    proto.admin.DeleteJobResponse,
    /**
     * @param {!proto.admin.DeleteJobRequest} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.admin.DeleteJobResponse.deserializeBinary,
  );

/**
 * @param {!proto.admin.DeleteJobRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.admin.DeleteJobResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.admin.DeleteJobResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.admin.AdminJobServiceClient.prototype.deleteJob = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/admin.AdminJobService/DeleteJob',
    request,
    metadata || {},
    methodDescriptor_AdminJobService_DeleteJob,
    callback,
  );
};

/**
 * @param {!proto.admin.DeleteJobRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.admin.DeleteJobResponse>}
 *     Promise that resolves to the response
 */
proto.admin.AdminJobServicePromiseClient.prototype.deleteJob = function (
  request,
  metadata,
) {
  return this.client_.unaryCall(
    this.hostname_ + '/admin.AdminJobService/DeleteJob',
    request,
    metadata || {},
    methodDescriptor_AdminJobService_DeleteJob,
  );
};

module.exports = proto.admin;
