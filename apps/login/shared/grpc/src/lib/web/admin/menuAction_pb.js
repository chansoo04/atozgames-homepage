// source: menuAction.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
  (typeof globalThis !== 'undefined' && globalThis) ||
  (typeof window !== 'undefined' && window) ||
  (typeof global !== 'undefined' && global) ||
  (typeof self !== 'undefined' && self) ||
  function () {
    return this;
  }.call(null) ||
  Function('return this')();

var admin$common_pb = require('./admin-common_pb.js');
goog.object.extend(proto, admin$common_pb);
goog.exportSymbol('proto.admin.CreateMenuActionRequest', null, global);
goog.exportSymbol('proto.admin.CreateMenuActionResponse', null, global);
goog.exportSymbol('proto.admin.DeleteMenuActionRequest', null, global);
goog.exportSymbol('proto.admin.DeleteMenuActionResponse', null, global);
goog.exportSymbol('proto.admin.GetMenuActionListRequest', null, global);
goog.exportSymbol('proto.admin.GetMenuActionListResponse', null, global);
goog.exportSymbol('proto.admin.UpdateMenuActionOrderingRequest', null, global);
goog.exportSymbol('proto.admin.UpdateMenuActionOrderingResponse', null, global);
goog.exportSymbol('proto.admin.UpdateMenuActionRequest', null, global);
goog.exportSymbol('proto.admin.UpdateMenuActionResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admin.GetMenuActionListRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admin.GetMenuActionListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admin.GetMenuActionListRequest.displayName =
    'proto.admin.GetMenuActionListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admin.GetMenuActionListResponse = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.admin.GetMenuActionListResponse.repeatedFields_,
    null,
  );
};
goog.inherits(proto.admin.GetMenuActionListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admin.GetMenuActionListResponse.displayName =
    'proto.admin.GetMenuActionListResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admin.CreateMenuActionRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admin.CreateMenuActionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admin.CreateMenuActionRequest.displayName =
    'proto.admin.CreateMenuActionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admin.CreateMenuActionResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admin.CreateMenuActionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admin.CreateMenuActionResponse.displayName =
    'proto.admin.CreateMenuActionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admin.UpdateMenuActionRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admin.UpdateMenuActionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admin.UpdateMenuActionRequest.displayName =
    'proto.admin.UpdateMenuActionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admin.UpdateMenuActionResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admin.UpdateMenuActionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admin.UpdateMenuActionResponse.displayName =
    'proto.admin.UpdateMenuActionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admin.UpdateMenuActionOrderingRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admin.UpdateMenuActionOrderingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admin.UpdateMenuActionOrderingRequest.displayName =
    'proto.admin.UpdateMenuActionOrderingRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admin.UpdateMenuActionOrderingResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admin.UpdateMenuActionOrderingResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admin.UpdateMenuActionOrderingResponse.displayName =
    'proto.admin.UpdateMenuActionOrderingResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admin.DeleteMenuActionRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admin.DeleteMenuActionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admin.DeleteMenuActionRequest.displayName =
    'proto.admin.DeleteMenuActionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.admin.DeleteMenuActionResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.admin.DeleteMenuActionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.admin.DeleteMenuActionResponse.displayName =
    'proto.admin.DeleteMenuActionResponse';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.admin.GetMenuActionListRequest.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.admin.GetMenuActionListRequest.toObject(
      opt_includeInstance,
      this,
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.admin.GetMenuActionListRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.admin.GetMenuActionListRequest.toObject = function (
    includeInstance,
    msg,
  ) {
    var f,
      obj = {
        page: jspb.Message.getFieldWithDefault(msg, 1, 0),
        countPerPage: jspb.Message.getFieldWithDefault(msg, 2, 0),
        menuId: jspb.Message.getFieldWithDefault(msg, 3, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admin.GetMenuActionListRequest}
 */
proto.admin.GetMenuActionListRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admin.GetMenuActionListRequest();
  return proto.admin.GetMenuActionListRequest.deserializeBinaryFromReader(
    msg,
    reader,
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admin.GetMenuActionListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admin.GetMenuActionListRequest}
 */
proto.admin.GetMenuActionListRequest.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setPage(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setCountPerPage(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setMenuId(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admin.GetMenuActionListRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.admin.GetMenuActionListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admin.GetMenuActionListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin.GetMenuActionListRequest.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(1, f);
  }
  f = message.getCountPerPage();
  if (f !== 0) {
    writer.writeInt32(2, f);
  }
  f = message.getMenuId();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
};

/**
 * optional int32 page = 1;
 * @return {number}
 */
proto.admin.GetMenuActionListRequest.prototype.getPage = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.admin.GetMenuActionListRequest} returns this
 */
proto.admin.GetMenuActionListRequest.prototype.setPage = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional int32 count_per_page = 2;
 * @return {number}
 */
proto.admin.GetMenuActionListRequest.prototype.getCountPerPage = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/**
 * @param {number} value
 * @return {!proto.admin.GetMenuActionListRequest} returns this
 */
proto.admin.GetMenuActionListRequest.prototype.setCountPerPage = function (
  value,
) {
  return jspb.Message.setProto3IntField(this, 2, value);
};

/**
 * optional string menu_id = 3;
 * @return {string}
 */
proto.admin.GetMenuActionListRequest.prototype.getMenuId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.GetMenuActionListRequest} returns this
 */
proto.admin.GetMenuActionListRequest.prototype.setMenuId = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.admin.GetMenuActionListResponse.repeatedFields_ = [3];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.admin.GetMenuActionListResponse.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.admin.GetMenuActionListResponse.toObject(
      opt_includeInstance,
      this,
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.admin.GetMenuActionListResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.admin.GetMenuActionListResponse.toObject = function (
    includeInstance,
    msg,
  ) {
    var f,
      obj = {
        success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
        errorMessage: jspb.Message.getFieldWithDefault(msg, 2, ''),
        menuActionListList: jspb.Message.toObjectList(
          msg.getMenuActionListList(),
          admin$common_pb.MenuAction.toObject,
          includeInstance,
        ),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admin.GetMenuActionListResponse}
 */
proto.admin.GetMenuActionListResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admin.GetMenuActionListResponse();
  return proto.admin.GetMenuActionListResponse.deserializeBinaryFromReader(
    msg,
    reader,
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admin.GetMenuActionListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admin.GetMenuActionListResponse}
 */
proto.admin.GetMenuActionListResponse.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setSuccess(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setErrorMessage(value);
        break;
      case 3:
        var value = new admin$common_pb.MenuAction();
        reader.readMessage(
          value,
          admin$common_pb.MenuAction.deserializeBinaryFromReader,
        );
        msg.addMenuActionList(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admin.GetMenuActionListResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.admin.GetMenuActionListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admin.GetMenuActionListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin.GetMenuActionListResponse.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(1, f);
  }
  f = message.getErrorMessage();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getMenuActionListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      admin$common_pb.MenuAction.serializeBinaryToWriter,
    );
  }
};

/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.admin.GetMenuActionListResponse.prototype.getSuccess = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 1, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.admin.GetMenuActionListResponse} returns this
 */
proto.admin.GetMenuActionListResponse.prototype.setSuccess = function (value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};

/**
 * optional string error_message = 2;
 * @return {string}
 */
proto.admin.GetMenuActionListResponse.prototype.getErrorMessage = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.GetMenuActionListResponse} returns this
 */
proto.admin.GetMenuActionListResponse.prototype.setErrorMessage = function (
  value,
) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * repeated MenuAction menu_action_list = 3;
 * @return {!Array<!proto.admin.MenuAction>}
 */
proto.admin.GetMenuActionListResponse.prototype.getMenuActionListList =
  function () {
    return /** @type{!Array<!proto.admin.MenuAction>} */ (
      jspb.Message.getRepeatedWrapperField(this, admin$common_pb.MenuAction, 3)
    );
  };

/**
 * @param {!Array<!proto.admin.MenuAction>} value
 * @return {!proto.admin.GetMenuActionListResponse} returns this
 */
proto.admin.GetMenuActionListResponse.prototype.setMenuActionListList =
  function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 3, value);
  };

/**
 * @param {!proto.admin.MenuAction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.admin.MenuAction}
 */
proto.admin.GetMenuActionListResponse.prototype.addMenuActionList = function (
  opt_value,
  opt_index,
) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    3,
    opt_value,
    proto.admin.MenuAction,
    opt_index,
  );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.admin.GetMenuActionListResponse} returns this
 */
proto.admin.GetMenuActionListResponse.prototype.clearMenuActionListList =
  function () {
    return this.setMenuActionListList([]);
  };

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.admin.CreateMenuActionRequest.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.admin.CreateMenuActionRequest.toObject(
      opt_includeInstance,
      this,
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.admin.CreateMenuActionRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.admin.CreateMenuActionRequest.toObject = function (
    includeInstance,
    msg,
  ) {
    var f,
      obj = {
        menuId: jspb.Message.getFieldWithDefault(msg, 1, ''),
        menuActionId: jspb.Message.getFieldWithDefault(msg, 2, ''),
        name: jspb.Message.getFieldWithDefault(msg, 3, ''),
        url: jspb.Message.getFieldWithDefault(msg, 4, ''),
        isActive: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admin.CreateMenuActionRequest}
 */
proto.admin.CreateMenuActionRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admin.CreateMenuActionRequest();
  return proto.admin.CreateMenuActionRequest.deserializeBinaryFromReader(
    msg,
    reader,
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admin.CreateMenuActionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admin.CreateMenuActionRequest}
 */
proto.admin.CreateMenuActionRequest.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setMenuId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setMenuActionId(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setUrl(value);
        break;
      case 5:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsActive(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admin.CreateMenuActionRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.admin.CreateMenuActionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admin.CreateMenuActionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin.CreateMenuActionRequest.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getMenuId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getMenuActionId();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(5, f);
  }
};

/**
 * optional string menu_id = 1;
 * @return {string}
 */
proto.admin.CreateMenuActionRequest.prototype.getMenuId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.CreateMenuActionRequest} returns this
 */
proto.admin.CreateMenuActionRequest.prototype.setMenuId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string menu_action_id = 2;
 * @return {string}
 */
proto.admin.CreateMenuActionRequest.prototype.getMenuActionId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.CreateMenuActionRequest} returns this
 */
proto.admin.CreateMenuActionRequest.prototype.setMenuActionId = function (
  value,
) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string name = 3;
 * @return {string}
 */
proto.admin.CreateMenuActionRequest.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.CreateMenuActionRequest} returns this
 */
proto.admin.CreateMenuActionRequest.prototype.setName = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string url = 4;
 * @return {string}
 */
proto.admin.CreateMenuActionRequest.prototype.getUrl = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.CreateMenuActionRequest} returns this
 */
proto.admin.CreateMenuActionRequest.prototype.setUrl = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional bool is_active = 5;
 * @return {boolean}
 */
proto.admin.CreateMenuActionRequest.prototype.getIsActive = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 5, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.admin.CreateMenuActionRequest} returns this
 */
proto.admin.CreateMenuActionRequest.prototype.setIsActive = function (value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.admin.CreateMenuActionResponse.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.admin.CreateMenuActionResponse.toObject(
      opt_includeInstance,
      this,
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.admin.CreateMenuActionResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.admin.CreateMenuActionResponse.toObject = function (
    includeInstance,
    msg,
  ) {
    var f,
      obj = {
        success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
        errorMessage: jspb.Message.getFieldWithDefault(msg, 2, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admin.CreateMenuActionResponse}
 */
proto.admin.CreateMenuActionResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admin.CreateMenuActionResponse();
  return proto.admin.CreateMenuActionResponse.deserializeBinaryFromReader(
    msg,
    reader,
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admin.CreateMenuActionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admin.CreateMenuActionResponse}
 */
proto.admin.CreateMenuActionResponse.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setSuccess(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setErrorMessage(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admin.CreateMenuActionResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.admin.CreateMenuActionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admin.CreateMenuActionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin.CreateMenuActionResponse.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(1, f);
  }
  f = message.getErrorMessage();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
};

/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.admin.CreateMenuActionResponse.prototype.getSuccess = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 1, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.admin.CreateMenuActionResponse} returns this
 */
proto.admin.CreateMenuActionResponse.prototype.setSuccess = function (value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};

/**
 * optional string error_message = 2;
 * @return {string}
 */
proto.admin.CreateMenuActionResponse.prototype.getErrorMessage = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.CreateMenuActionResponse} returns this
 */
proto.admin.CreateMenuActionResponse.prototype.setErrorMessage = function (
  value,
) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.admin.UpdateMenuActionRequest.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.admin.UpdateMenuActionRequest.toObject(
      opt_includeInstance,
      this,
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.admin.UpdateMenuActionRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.admin.UpdateMenuActionRequest.toObject = function (
    includeInstance,
    msg,
  ) {
    var f,
      obj = {
        menuId: jspb.Message.getFieldWithDefault(msg, 1, ''),
        menuActionId: jspb.Message.getFieldWithDefault(msg, 2, ''),
        name: jspb.Message.getFieldWithDefault(msg, 3, ''),
        url: jspb.Message.getFieldWithDefault(msg, 4, ''),
        isActive: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admin.UpdateMenuActionRequest}
 */
proto.admin.UpdateMenuActionRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admin.UpdateMenuActionRequest();
  return proto.admin.UpdateMenuActionRequest.deserializeBinaryFromReader(
    msg,
    reader,
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admin.UpdateMenuActionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admin.UpdateMenuActionRequest}
 */
proto.admin.UpdateMenuActionRequest.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setMenuId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setMenuActionId(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setUrl(value);
        break;
      case 5:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsActive(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admin.UpdateMenuActionRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.admin.UpdateMenuActionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admin.UpdateMenuActionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin.UpdateMenuActionRequest.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getMenuId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getMenuActionId();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(5, f);
  }
};

/**
 * optional string menu_id = 1;
 * @return {string}
 */
proto.admin.UpdateMenuActionRequest.prototype.getMenuId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.UpdateMenuActionRequest} returns this
 */
proto.admin.UpdateMenuActionRequest.prototype.setMenuId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string menu_action_id = 2;
 * @return {string}
 */
proto.admin.UpdateMenuActionRequest.prototype.getMenuActionId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.UpdateMenuActionRequest} returns this
 */
proto.admin.UpdateMenuActionRequest.prototype.setMenuActionId = function (
  value,
) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string name = 3;
 * @return {string}
 */
proto.admin.UpdateMenuActionRequest.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.UpdateMenuActionRequest} returns this
 */
proto.admin.UpdateMenuActionRequest.prototype.setName = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string url = 4;
 * @return {string}
 */
proto.admin.UpdateMenuActionRequest.prototype.getUrl = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.UpdateMenuActionRequest} returns this
 */
proto.admin.UpdateMenuActionRequest.prototype.setUrl = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional bool is_active = 5;
 * @return {boolean}
 */
proto.admin.UpdateMenuActionRequest.prototype.getIsActive = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 5, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.admin.UpdateMenuActionRequest} returns this
 */
proto.admin.UpdateMenuActionRequest.prototype.setIsActive = function (value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.admin.UpdateMenuActionResponse.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.admin.UpdateMenuActionResponse.toObject(
      opt_includeInstance,
      this,
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.admin.UpdateMenuActionResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.admin.UpdateMenuActionResponse.toObject = function (
    includeInstance,
    msg,
  ) {
    var f,
      obj = {
        success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
        errorMessage: jspb.Message.getFieldWithDefault(msg, 2, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admin.UpdateMenuActionResponse}
 */
proto.admin.UpdateMenuActionResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admin.UpdateMenuActionResponse();
  return proto.admin.UpdateMenuActionResponse.deserializeBinaryFromReader(
    msg,
    reader,
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admin.UpdateMenuActionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admin.UpdateMenuActionResponse}
 */
proto.admin.UpdateMenuActionResponse.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setSuccess(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setErrorMessage(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admin.UpdateMenuActionResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.admin.UpdateMenuActionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admin.UpdateMenuActionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin.UpdateMenuActionResponse.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(1, f);
  }
  f = message.getErrorMessage();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
};

/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.admin.UpdateMenuActionResponse.prototype.getSuccess = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 1, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.admin.UpdateMenuActionResponse} returns this
 */
proto.admin.UpdateMenuActionResponse.prototype.setSuccess = function (value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};

/**
 * optional string error_message = 2;
 * @return {string}
 */
proto.admin.UpdateMenuActionResponse.prototype.getErrorMessage = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.UpdateMenuActionResponse} returns this
 */
proto.admin.UpdateMenuActionResponse.prototype.setErrorMessage = function (
  value,
) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.admin.UpdateMenuActionOrderingRequest.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.admin.UpdateMenuActionOrderingRequest.toObject(
      opt_includeInstance,
      this,
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.admin.UpdateMenuActionOrderingRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.admin.UpdateMenuActionOrderingRequest.toObject = function (
    includeInstance,
    msg,
  ) {
    var f,
      obj = {
        menuId: jspb.Message.getFieldWithDefault(msg, 1, ''),
        menuActionIdList: jspb.Message.getFieldWithDefault(msg, 2, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admin.UpdateMenuActionOrderingRequest}
 */
proto.admin.UpdateMenuActionOrderingRequest.deserializeBinary = function (
  bytes,
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admin.UpdateMenuActionOrderingRequest();
  return proto.admin.UpdateMenuActionOrderingRequest.deserializeBinaryFromReader(
    msg,
    reader,
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admin.UpdateMenuActionOrderingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admin.UpdateMenuActionOrderingRequest}
 */
proto.admin.UpdateMenuActionOrderingRequest.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = /** @type {string} */ (reader.readString());
          msg.setMenuId(value);
          break;
        case 2:
          var value = /** @type {string} */ (reader.readString());
          msg.setMenuActionIdList(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admin.UpdateMenuActionOrderingRequest.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.admin.UpdateMenuActionOrderingRequest.serializeBinaryToWriter(
      this,
      writer,
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admin.UpdateMenuActionOrderingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin.UpdateMenuActionOrderingRequest.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getMenuId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getMenuActionIdList();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
};

/**
 * optional string menu_id = 1;
 * @return {string}
 */
proto.admin.UpdateMenuActionOrderingRequest.prototype.getMenuId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.UpdateMenuActionOrderingRequest} returns this
 */
proto.admin.UpdateMenuActionOrderingRequest.prototype.setMenuId = function (
  value,
) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string menu_action_id_list = 2;
 * @return {string}
 */
proto.admin.UpdateMenuActionOrderingRequest.prototype.getMenuActionIdList =
  function () {
    return /** @type {string} */ (
      jspb.Message.getFieldWithDefault(this, 2, '')
    );
  };

/**
 * @param {string} value
 * @return {!proto.admin.UpdateMenuActionOrderingRequest} returns this
 */
proto.admin.UpdateMenuActionOrderingRequest.prototype.setMenuActionIdList =
  function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
  };

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.admin.UpdateMenuActionOrderingResponse.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.admin.UpdateMenuActionOrderingResponse.toObject(
      opt_includeInstance,
      this,
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.admin.UpdateMenuActionOrderingResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.admin.UpdateMenuActionOrderingResponse.toObject = function (
    includeInstance,
    msg,
  ) {
    var f,
      obj = {
        success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
        errorMessage: jspb.Message.getFieldWithDefault(msg, 2, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admin.UpdateMenuActionOrderingResponse}
 */
proto.admin.UpdateMenuActionOrderingResponse.deserializeBinary = function (
  bytes,
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admin.UpdateMenuActionOrderingResponse();
  return proto.admin.UpdateMenuActionOrderingResponse.deserializeBinaryFromReader(
    msg,
    reader,
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admin.UpdateMenuActionOrderingResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admin.UpdateMenuActionOrderingResponse}
 */
proto.admin.UpdateMenuActionOrderingResponse.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = /** @type {boolean} */ (reader.readBool());
          msg.setSuccess(value);
          break;
        case 2:
          var value = /** @type {string} */ (reader.readString());
          msg.setErrorMessage(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admin.UpdateMenuActionOrderingResponse.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.admin.UpdateMenuActionOrderingResponse.serializeBinaryToWriter(
      this,
      writer,
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admin.UpdateMenuActionOrderingResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin.UpdateMenuActionOrderingResponse.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined;
    f = message.getSuccess();
    if (f) {
      writer.writeBool(1, f);
    }
    f = message.getErrorMessage();
    if (f.length > 0) {
      writer.writeString(2, f);
    }
  };

/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.admin.UpdateMenuActionOrderingResponse.prototype.getSuccess =
  function () {
    return /** @type {boolean} */ (
      jspb.Message.getBooleanFieldWithDefault(this, 1, false)
    );
  };

/**
 * @param {boolean} value
 * @return {!proto.admin.UpdateMenuActionOrderingResponse} returns this
 */
proto.admin.UpdateMenuActionOrderingResponse.prototype.setSuccess = function (
  value,
) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};

/**
 * optional string error_message = 2;
 * @return {string}
 */
proto.admin.UpdateMenuActionOrderingResponse.prototype.getErrorMessage =
  function () {
    return /** @type {string} */ (
      jspb.Message.getFieldWithDefault(this, 2, '')
    );
  };

/**
 * @param {string} value
 * @return {!proto.admin.UpdateMenuActionOrderingResponse} returns this
 */
proto.admin.UpdateMenuActionOrderingResponse.prototype.setErrorMessage =
  function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
  };

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.admin.DeleteMenuActionRequest.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.admin.DeleteMenuActionRequest.toObject(
      opt_includeInstance,
      this,
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.admin.DeleteMenuActionRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.admin.DeleteMenuActionRequest.toObject = function (
    includeInstance,
    msg,
  ) {
    var f,
      obj = {
        menuId: jspb.Message.getFieldWithDefault(msg, 1, ''),
        menuActionId: jspb.Message.getFieldWithDefault(msg, 2, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admin.DeleteMenuActionRequest}
 */
proto.admin.DeleteMenuActionRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admin.DeleteMenuActionRequest();
  return proto.admin.DeleteMenuActionRequest.deserializeBinaryFromReader(
    msg,
    reader,
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admin.DeleteMenuActionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admin.DeleteMenuActionRequest}
 */
proto.admin.DeleteMenuActionRequest.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setMenuId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setMenuActionId(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admin.DeleteMenuActionRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.admin.DeleteMenuActionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admin.DeleteMenuActionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin.DeleteMenuActionRequest.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getMenuId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getMenuActionId();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
};

/**
 * optional string menu_id = 1;
 * @return {string}
 */
proto.admin.DeleteMenuActionRequest.prototype.getMenuId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.DeleteMenuActionRequest} returns this
 */
proto.admin.DeleteMenuActionRequest.prototype.setMenuId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string menu_action_id = 2;
 * @return {string}
 */
proto.admin.DeleteMenuActionRequest.prototype.getMenuActionId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.DeleteMenuActionRequest} returns this
 */
proto.admin.DeleteMenuActionRequest.prototype.setMenuActionId = function (
  value,
) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.admin.DeleteMenuActionResponse.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.admin.DeleteMenuActionResponse.toObject(
      opt_includeInstance,
      this,
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.admin.DeleteMenuActionResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.admin.DeleteMenuActionResponse.toObject = function (
    includeInstance,
    msg,
  ) {
    var f,
      obj = {
        success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
        errorMessage: jspb.Message.getFieldWithDefault(msg, 2, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.admin.DeleteMenuActionResponse}
 */
proto.admin.DeleteMenuActionResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.admin.DeleteMenuActionResponse();
  return proto.admin.DeleteMenuActionResponse.deserializeBinaryFromReader(
    msg,
    reader,
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.admin.DeleteMenuActionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.admin.DeleteMenuActionResponse}
 */
proto.admin.DeleteMenuActionResponse.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setSuccess(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setErrorMessage(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.admin.DeleteMenuActionResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.admin.DeleteMenuActionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.admin.DeleteMenuActionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.admin.DeleteMenuActionResponse.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(1, f);
  }
  f = message.getErrorMessage();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
};

/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.admin.DeleteMenuActionResponse.prototype.getSuccess = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 1, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.admin.DeleteMenuActionResponse} returns this
 */
proto.admin.DeleteMenuActionResponse.prototype.setSuccess = function (value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};

/**
 * optional string error_message = 2;
 * @return {string}
 */
proto.admin.DeleteMenuActionResponse.prototype.getErrorMessage = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.admin.DeleteMenuActionResponse} returns this
 */
proto.admin.DeleteMenuActionResponse.prototype.setErrorMessage = function (
  value,
) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

goog.object.extend(exports, proto.admin);
