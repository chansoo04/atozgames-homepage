/**
 * @fileoverview gRPC-Web generated client stub for admin
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.29.3
// source: position.proto

/* eslint-disable */
// @ts-nocheck

const grpc = {};
grpc.web = require('grpc-web');

var admin$common_pb = require('./admin-common_pb.js');
const proto = {};
proto.admin = require('./position_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.admin.AdminPositionServiceClient = function (
  hostname,
  credentials,
  options,
) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');
};

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.admin.AdminPositionServicePromiseClient = function (
  hostname,
  credentials,
  options,
) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.admin.GetPositionListRequest,
 *   !proto.admin.GetPositionListResponse>}
 */
const methodDescriptor_AdminPositionService_GetPositionList =
  new grpc.web.MethodDescriptor(
    '/admin.AdminPositionService/GetPositionList',
    grpc.web.MethodType.UNARY,
    proto.admin.GetPositionListRequest,
    proto.admin.GetPositionListResponse,
    /**
     * @param {!proto.admin.GetPositionListRequest} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.admin.GetPositionListResponse.deserializeBinary,
  );

/**
 * @param {!proto.admin.GetPositionListRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.admin.GetPositionListResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.admin.GetPositionListResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.admin.AdminPositionServiceClient.prototype.getPositionList = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/admin.AdminPositionService/GetPositionList',
    request,
    metadata || {},
    methodDescriptor_AdminPositionService_GetPositionList,
    callback,
  );
};

/**
 * @param {!proto.admin.GetPositionListRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.admin.GetPositionListResponse>}
 *     Promise that resolves to the response
 */
proto.admin.AdminPositionServicePromiseClient.prototype.getPositionList =
  function (request, metadata) {
    return this.client_.unaryCall(
      this.hostname_ + '/admin.AdminPositionService/GetPositionList',
      request,
      metadata || {},
      methodDescriptor_AdminPositionService_GetPositionList,
    );
  };

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.admin.CreatePositionRequest,
 *   !proto.admin.CreatePositionResponse>}
 */
const methodDescriptor_AdminPositionService_CreatePosition =
  new grpc.web.MethodDescriptor(
    '/admin.AdminPositionService/CreatePosition',
    grpc.web.MethodType.UNARY,
    proto.admin.CreatePositionRequest,
    proto.admin.CreatePositionResponse,
    /**
     * @param {!proto.admin.CreatePositionRequest} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.admin.CreatePositionResponse.deserializeBinary,
  );

/**
 * @param {!proto.admin.CreatePositionRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.admin.CreatePositionResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.admin.CreatePositionResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.admin.AdminPositionServiceClient.prototype.createPosition = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/admin.AdminPositionService/CreatePosition',
    request,
    metadata || {},
    methodDescriptor_AdminPositionService_CreatePosition,
    callback,
  );
};

/**
 * @param {!proto.admin.CreatePositionRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.admin.CreatePositionResponse>}
 *     Promise that resolves to the response
 */
proto.admin.AdminPositionServicePromiseClient.prototype.createPosition =
  function (request, metadata) {
    return this.client_.unaryCall(
      this.hostname_ + '/admin.AdminPositionService/CreatePosition',
      request,
      metadata || {},
      methodDescriptor_AdminPositionService_CreatePosition,
    );
  };

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.admin.UpdatePositionRequest,
 *   !proto.admin.UpdatePositionResponse>}
 */
const methodDescriptor_AdminPositionService_UpdatePosition =
  new grpc.web.MethodDescriptor(
    '/admin.AdminPositionService/UpdatePosition',
    grpc.web.MethodType.UNARY,
    proto.admin.UpdatePositionRequest,
    proto.admin.UpdatePositionResponse,
    /**
     * @param {!proto.admin.UpdatePositionRequest} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.admin.UpdatePositionResponse.deserializeBinary,
  );

/**
 * @param {!proto.admin.UpdatePositionRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.admin.UpdatePositionResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.admin.UpdatePositionResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.admin.AdminPositionServiceClient.prototype.updatePosition = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/admin.AdminPositionService/UpdatePosition',
    request,
    metadata || {},
    methodDescriptor_AdminPositionService_UpdatePosition,
    callback,
  );
};

/**
 * @param {!proto.admin.UpdatePositionRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.admin.UpdatePositionResponse>}
 *     Promise that resolves to the response
 */
proto.admin.AdminPositionServicePromiseClient.prototype.updatePosition =
  function (request, metadata) {
    return this.client_.unaryCall(
      this.hostname_ + '/admin.AdminPositionService/UpdatePosition',
      request,
      metadata || {},
      methodDescriptor_AdminPositionService_UpdatePosition,
    );
  };

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.admin.DeletePositionRequest,
 *   !proto.admin.DeletePositionResponse>}
 */
const methodDescriptor_AdminPositionService_DeletePosition =
  new grpc.web.MethodDescriptor(
    '/admin.AdminPositionService/DeletePosition',
    grpc.web.MethodType.UNARY,
    proto.admin.DeletePositionRequest,
    proto.admin.DeletePositionResponse,
    /**
     * @param {!proto.admin.DeletePositionRequest} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.admin.DeletePositionResponse.deserializeBinary,
  );

/**
 * @param {!proto.admin.DeletePositionRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.admin.DeletePositionResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.admin.DeletePositionResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.admin.AdminPositionServiceClient.prototype.deletePosition = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/admin.AdminPositionService/DeletePosition',
    request,
    metadata || {},
    methodDescriptor_AdminPositionService_DeletePosition,
    callback,
  );
};

/**
 * @param {!proto.admin.DeletePositionRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.admin.DeletePositionResponse>}
 *     Promise that resolves to the response
 */
proto.admin.AdminPositionServicePromiseClient.prototype.deletePosition =
  function (request, metadata) {
    return this.client_.unaryCall(
      this.hostname_ + '/admin.AdminPositionService/DeletePosition',
      request,
      metadata || {},
      methodDescriptor_AdminPositionService_DeletePosition,
    );
  };

module.exports = proto.admin;
