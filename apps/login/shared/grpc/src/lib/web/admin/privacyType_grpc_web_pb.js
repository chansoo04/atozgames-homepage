/**
 * @fileoverview gRPC-Web generated client stub for admin
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.29.3
// source: privacyType.proto

/* eslint-disable */
// @ts-nocheck

const grpc = {};
grpc.web = require('grpc-web');

var admin$common_pb = require('./admin-common_pb.js');
const proto = {};
proto.admin = require('./privacyType_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.admin.AdminPrivacyTypeServiceClient = function (
  hostname,
  credentials,
  options,
) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');
};

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.admin.AdminPrivacyTypeServicePromiseClient = function (
  hostname,
  credentials,
  options,
) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.admin.GetPrivacyTypeListRequest,
 *   !proto.admin.GetPrivacyTypeListResponse>}
 */
const methodDescriptor_AdminPrivacyTypeService_GetPrivacyTypeList =
  new grpc.web.MethodDescriptor(
    '/admin.AdminPrivacyTypeService/GetPrivacyTypeList',
    grpc.web.MethodType.UNARY,
    proto.admin.GetPrivacyTypeListRequest,
    proto.admin.GetPrivacyTypeListResponse,
    /**
     * @param {!proto.admin.GetPrivacyTypeListRequest} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.admin.GetPrivacyTypeListResponse.deserializeBinary,
  );

/**
 * @param {!proto.admin.GetPrivacyTypeListRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.admin.GetPrivacyTypeListResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.admin.GetPrivacyTypeListResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.admin.AdminPrivacyTypeServiceClient.prototype.getPrivacyTypeList =
  function (request, metadata, callback) {
    return this.client_.rpcCall(
      this.hostname_ + '/admin.AdminPrivacyTypeService/GetPrivacyTypeList',
      request,
      metadata || {},
      methodDescriptor_AdminPrivacyTypeService_GetPrivacyTypeList,
      callback,
    );
  };

/**
 * @param {!proto.admin.GetPrivacyTypeListRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.admin.GetPrivacyTypeListResponse>}
 *     Promise that resolves to the response
 */
proto.admin.AdminPrivacyTypeServicePromiseClient.prototype.getPrivacyTypeList =
  function (request, metadata) {
    return this.client_.unaryCall(
      this.hostname_ + '/admin.AdminPrivacyTypeService/GetPrivacyTypeList',
      request,
      metadata || {},
      methodDescriptor_AdminPrivacyTypeService_GetPrivacyTypeList,
    );
  };

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.admin.CreatePrivacyTypeRequest,
 *   !proto.admin.CreatePrivacyTypeResponse>}
 */
const methodDescriptor_AdminPrivacyTypeService_CreatePrivacyType =
  new grpc.web.MethodDescriptor(
    '/admin.AdminPrivacyTypeService/CreatePrivacyType',
    grpc.web.MethodType.UNARY,
    proto.admin.CreatePrivacyTypeRequest,
    proto.admin.CreatePrivacyTypeResponse,
    /**
     * @param {!proto.admin.CreatePrivacyTypeRequest} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.admin.CreatePrivacyTypeResponse.deserializeBinary,
  );

/**
 * @param {!proto.admin.CreatePrivacyTypeRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.admin.CreatePrivacyTypeResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.admin.CreatePrivacyTypeResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.admin.AdminPrivacyTypeServiceClient.prototype.createPrivacyType =
  function (request, metadata, callback) {
    return this.client_.rpcCall(
      this.hostname_ + '/admin.AdminPrivacyTypeService/CreatePrivacyType',
      request,
      metadata || {},
      methodDescriptor_AdminPrivacyTypeService_CreatePrivacyType,
      callback,
    );
  };

/**
 * @param {!proto.admin.CreatePrivacyTypeRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.admin.CreatePrivacyTypeResponse>}
 *     Promise that resolves to the response
 */
proto.admin.AdminPrivacyTypeServicePromiseClient.prototype.createPrivacyType =
  function (request, metadata) {
    return this.client_.unaryCall(
      this.hostname_ + '/admin.AdminPrivacyTypeService/CreatePrivacyType',
      request,
      metadata || {},
      methodDescriptor_AdminPrivacyTypeService_CreatePrivacyType,
    );
  };

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.admin.UpdatePrivacyTypeRequest,
 *   !proto.admin.UpdatePrivacyTypeResponse>}
 */
const methodDescriptor_AdminPrivacyTypeService_UpdatePrivacyType =
  new grpc.web.MethodDescriptor(
    '/admin.AdminPrivacyTypeService/UpdatePrivacyType',
    grpc.web.MethodType.UNARY,
    proto.admin.UpdatePrivacyTypeRequest,
    proto.admin.UpdatePrivacyTypeResponse,
    /**
     * @param {!proto.admin.UpdatePrivacyTypeRequest} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.admin.UpdatePrivacyTypeResponse.deserializeBinary,
  );

/**
 * @param {!proto.admin.UpdatePrivacyTypeRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.admin.UpdatePrivacyTypeResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.admin.UpdatePrivacyTypeResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.admin.AdminPrivacyTypeServiceClient.prototype.updatePrivacyType =
  function (request, metadata, callback) {
    return this.client_.rpcCall(
      this.hostname_ + '/admin.AdminPrivacyTypeService/UpdatePrivacyType',
      request,
      metadata || {},
      methodDescriptor_AdminPrivacyTypeService_UpdatePrivacyType,
      callback,
    );
  };

/**
 * @param {!proto.admin.UpdatePrivacyTypeRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.admin.UpdatePrivacyTypeResponse>}
 *     Promise that resolves to the response
 */
proto.admin.AdminPrivacyTypeServicePromiseClient.prototype.updatePrivacyType =
  function (request, metadata) {
    return this.client_.unaryCall(
      this.hostname_ + '/admin.AdminPrivacyTypeService/UpdatePrivacyType',
      request,
      metadata || {},
      methodDescriptor_AdminPrivacyTypeService_UpdatePrivacyType,
    );
  };

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.admin.DeletePrivacyTypeRequest,
 *   !proto.admin.DeletePrivacyTypeResponse>}
 */
const methodDescriptor_AdminPrivacyTypeService_DeletePrivacyType =
  new grpc.web.MethodDescriptor(
    '/admin.AdminPrivacyTypeService/DeletePrivacyType',
    grpc.web.MethodType.UNARY,
    proto.admin.DeletePrivacyTypeRequest,
    proto.admin.DeletePrivacyTypeResponse,
    /**
     * @param {!proto.admin.DeletePrivacyTypeRequest} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.admin.DeletePrivacyTypeResponse.deserializeBinary,
  );

/**
 * @param {!proto.admin.DeletePrivacyTypeRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.admin.DeletePrivacyTypeResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.admin.DeletePrivacyTypeResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.admin.AdminPrivacyTypeServiceClient.prototype.deletePrivacyType =
  function (request, metadata, callback) {
    return this.client_.rpcCall(
      this.hostname_ + '/admin.AdminPrivacyTypeService/DeletePrivacyType',
      request,
      metadata || {},
      methodDescriptor_AdminPrivacyTypeService_DeletePrivacyType,
      callback,
    );
  };

/**
 * @param {!proto.admin.DeletePrivacyTypeRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.admin.DeletePrivacyTypeResponse>}
 *     Promise that resolves to the response
 */
proto.admin.AdminPrivacyTypeServicePromiseClient.prototype.deletePrivacyType =
  function (request, metadata) {
    return this.client_.unaryCall(
      this.hostname_ + '/admin.AdminPrivacyTypeService/DeletePrivacyType',
      request,
      metadata || {},
      methodDescriptor_AdminPrivacyTypeService_DeletePrivacyType,
    );
  };

module.exports = proto.admin;
