/**
 * @fileoverview gRPC-Web generated client stub for admin
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.29.3
// source: system.proto

/* eslint-disable */
// @ts-nocheck

const grpc = {};
grpc.web = require('grpc-web');

var admin$common_pb = require('./admin-common_pb.js');
const proto = {};
proto.admin = require('./system_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.admin.AdminSystemServiceClient = function (
  hostname,
  credentials,
  options,
) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');
};

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.admin.AdminSystemServicePromiseClient = function (
  hostname,
  credentials,
  options,
) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.admin.GetSystemListRequest,
 *   !proto.admin.GetSystemListResponse>}
 */
const methodDescriptor_AdminSystemService_GetSystemList =
  new grpc.web.MethodDescriptor(
    '/admin.AdminSystemService/GetSystemList',
    grpc.web.MethodType.UNARY,
    proto.admin.GetSystemListRequest,
    proto.admin.GetSystemListResponse,
    /**
     * @param {!proto.admin.GetSystemListRequest} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.admin.GetSystemListResponse.deserializeBinary,
  );

/**
 * @param {!proto.admin.GetSystemListRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.admin.GetSystemListResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.admin.GetSystemListResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.admin.AdminSystemServiceClient.prototype.getSystemList = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/admin.AdminSystemService/GetSystemList',
    request,
    metadata || {},
    methodDescriptor_AdminSystemService_GetSystemList,
    callback,
  );
};

/**
 * @param {!proto.admin.GetSystemListRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.admin.GetSystemListResponse>}
 *     Promise that resolves to the response
 */
proto.admin.AdminSystemServicePromiseClient.prototype.getSystemList = function (
  request,
  metadata,
) {
  return this.client_.unaryCall(
    this.hostname_ + '/admin.AdminSystemService/GetSystemList',
    request,
    metadata || {},
    methodDescriptor_AdminSystemService_GetSystemList,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.admin.CreateSystemRequest,
 *   !proto.admin.CreateSystemResponse>}
 */
const methodDescriptor_AdminSystemService_CreateSystem =
  new grpc.web.MethodDescriptor(
    '/admin.AdminSystemService/CreateSystem',
    grpc.web.MethodType.UNARY,
    proto.admin.CreateSystemRequest,
    proto.admin.CreateSystemResponse,
    /**
     * @param {!proto.admin.CreateSystemRequest} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.admin.CreateSystemResponse.deserializeBinary,
  );

/**
 * @param {!proto.admin.CreateSystemRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.admin.CreateSystemResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.admin.CreateSystemResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.admin.AdminSystemServiceClient.prototype.createSystem = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/admin.AdminSystemService/CreateSystem',
    request,
    metadata || {},
    methodDescriptor_AdminSystemService_CreateSystem,
    callback,
  );
};

/**
 * @param {!proto.admin.CreateSystemRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.admin.CreateSystemResponse>}
 *     Promise that resolves to the response
 */
proto.admin.AdminSystemServicePromiseClient.prototype.createSystem = function (
  request,
  metadata,
) {
  return this.client_.unaryCall(
    this.hostname_ + '/admin.AdminSystemService/CreateSystem',
    request,
    metadata || {},
    methodDescriptor_AdminSystemService_CreateSystem,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.admin.UpdateSystemRequest,
 *   !proto.admin.UpdateSystemResponse>}
 */
const methodDescriptor_AdminSystemService_UpdateSystem =
  new grpc.web.MethodDescriptor(
    '/admin.AdminSystemService/UpdateSystem',
    grpc.web.MethodType.UNARY,
    proto.admin.UpdateSystemRequest,
    proto.admin.UpdateSystemResponse,
    /**
     * @param {!proto.admin.UpdateSystemRequest} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.admin.UpdateSystemResponse.deserializeBinary,
  );

/**
 * @param {!proto.admin.UpdateSystemRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.admin.UpdateSystemResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.admin.UpdateSystemResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.admin.AdminSystemServiceClient.prototype.updateSystem = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/admin.AdminSystemService/UpdateSystem',
    request,
    metadata || {},
    methodDescriptor_AdminSystemService_UpdateSystem,
    callback,
  );
};

/**
 * @param {!proto.admin.UpdateSystemRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.admin.UpdateSystemResponse>}
 *     Promise that resolves to the response
 */
proto.admin.AdminSystemServicePromiseClient.prototype.updateSystem = function (
  request,
  metadata,
) {
  return this.client_.unaryCall(
    this.hostname_ + '/admin.AdminSystemService/UpdateSystem',
    request,
    metadata || {},
    methodDescriptor_AdminSystemService_UpdateSystem,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.admin.DeleteSystemRequest,
 *   !proto.admin.DeleteSystemResponse>}
 */
const methodDescriptor_AdminSystemService_DeleteSystem =
  new grpc.web.MethodDescriptor(
    '/admin.AdminSystemService/DeleteSystem',
    grpc.web.MethodType.UNARY,
    proto.admin.DeleteSystemRequest,
    proto.admin.DeleteSystemResponse,
    /**
     * @param {!proto.admin.DeleteSystemRequest} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.admin.DeleteSystemResponse.deserializeBinary,
  );

/**
 * @param {!proto.admin.DeleteSystemRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.admin.DeleteSystemResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.admin.DeleteSystemResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.admin.AdminSystemServiceClient.prototype.deleteSystem = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/admin.AdminSystemService/DeleteSystem',
    request,
    metadata || {},
    methodDescriptor_AdminSystemService_DeleteSystem,
    callback,
  );
};

/**
 * @param {!proto.admin.DeleteSystemRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.admin.DeleteSystemResponse>}
 *     Promise that resolves to the response
 */
proto.admin.AdminSystemServicePromiseClient.prototype.deleteSystem = function (
  request,
  metadata,
) {
  return this.client_.unaryCall(
    this.hostname_ + '/admin.AdminSystemService/DeleteSystem',
    request,
    metadata || {},
    methodDescriptor_AdminSystemService_DeleteSystem,
  );
};

module.exports = proto.admin;
