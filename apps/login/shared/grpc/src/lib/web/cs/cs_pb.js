// source: cs.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
  (typeof globalThis !== 'undefined' && globalThis) ||
  (typeof window !== 'undefined' && window) ||
  (typeof global !== 'undefined' && global) ||
  (typeof self !== 'undefined' && self) ||
  function () {
    return this;
  }.call(null) ||
  Function('return this')();

goog.exportSymbol('proto.cs.CustomerQuestion', null, global);
goog.exportSymbol('proto.cs.CustomerQuestionRepliesResponse', null, global);
goog.exportSymbol('proto.cs.CustomerQuestionReply', null, global);
goog.exportSymbol('proto.cs.CustomerQuestionReplyRequest', null, global);
goog.exportSymbol('proto.cs.CustomerQuestionReplyResponse', null, global);
goog.exportSymbol('proto.cs.CustomerQuestionRequest', null, global);
goog.exportSymbol('proto.cs.CustomerQuestionResponse', null, global);
goog.exportSymbol('proto.cs.CustomerQuestionsRequest', null, global);
goog.exportSymbol('proto.cs.CustomerQuestionsResponse', null, global);
goog.exportSymbol('proto.cs.DefaultResponse', null, global);
goog.exportSymbol('proto.cs.QuestionState', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs.CustomerQuestion = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.cs.CustomerQuestion.repeatedFields_,
    null,
  );
};
goog.inherits(proto.cs.CustomerQuestion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs.CustomerQuestion.displayName = 'proto.cs.CustomerQuestion';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs.CustomerQuestionReply = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs.CustomerQuestionReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs.CustomerQuestionReply.displayName = 'proto.cs.CustomerQuestionReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs.CustomerQuestionRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs.CustomerQuestionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs.CustomerQuestionRequest.displayName =
    'proto.cs.CustomerQuestionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs.CustomerQuestionResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs.CustomerQuestionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs.CustomerQuestionResponse.displayName =
    'proto.cs.CustomerQuestionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs.CustomerQuestionsRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs.CustomerQuestionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs.CustomerQuestionsRequest.displayName =
    'proto.cs.CustomerQuestionsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs.CustomerQuestionsResponse = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.cs.CustomerQuestionsResponse.repeatedFields_,
    null,
  );
};
goog.inherits(proto.cs.CustomerQuestionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs.CustomerQuestionsResponse.displayName =
    'proto.cs.CustomerQuestionsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs.CustomerQuestionReplyRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs.CustomerQuestionReplyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs.CustomerQuestionReplyRequest.displayName =
    'proto.cs.CustomerQuestionReplyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs.CustomerQuestionReplyResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs.CustomerQuestionReplyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs.CustomerQuestionReplyResponse.displayName =
    'proto.cs.CustomerQuestionReplyResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs.CustomerQuestionRepliesResponse = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.cs.CustomerQuestionRepliesResponse.repeatedFields_,
    null,
  );
};
goog.inherits(proto.cs.CustomerQuestionRepliesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs.CustomerQuestionRepliesResponse.displayName =
    'proto.cs.CustomerQuestionRepliesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cs.DefaultResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cs.DefaultResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cs.DefaultResponse.displayName = 'proto.cs.DefaultResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cs.CustomerQuestion.repeatedFields_ = [12];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.cs.CustomerQuestion.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.cs.CustomerQuestion.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.cs.CustomerQuestion} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.cs.CustomerQuestion.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        id: jspb.Message.getFieldWithDefault(msg, 1, 0),
        accountId: jspb.Message.getFieldWithDefault(msg, 2, ''),
        title: jspb.Message.getFieldWithDefault(msg, 3, ''),
        content: jspb.Message.getFieldWithDefault(msg, 4, ''),
        append: jspb.Message.getFieldWithDefault(msg, 5, ''),
        state: jspb.Message.getFieldWithDefault(msg, 6, 0),
        answerAt: jspb.Message.getFieldWithDefault(msg, 7, ''),
        replyAt: jspb.Message.getFieldWithDefault(msg, 8, ''),
        isActive: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
        createdAt: jspb.Message.getFieldWithDefault(msg, 10, ''),
        updatedAt: jspb.Message.getFieldWithDefault(msg, 11, ''),
        customerQuestionReplyList: jspb.Message.toObjectList(
          msg.getCustomerQuestionReplyList(),
          proto.cs.CustomerQuestionReply.toObject,
          includeInstance,
        ),
        replyCount: jspb.Message.getFieldWithDefault(msg, 13, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs.CustomerQuestion}
 */
proto.cs.CustomerQuestion.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs.CustomerQuestion();
  return proto.cs.CustomerQuestion.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs.CustomerQuestion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs.CustomerQuestion}
 */
proto.cs.CustomerQuestion.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setAccountId(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setTitle(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setContent(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setAppend(value);
        break;
      case 6:
        var value = /** @type {!proto.cs.QuestionState} */ (reader.readEnum());
        msg.setState(value);
        break;
      case 7:
        var value = /** @type {string} */ (reader.readString());
        msg.setAnswerAt(value);
        break;
      case 8:
        var value = /** @type {string} */ (reader.readString());
        msg.setReplyAt(value);
        break;
      case 9:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsActive(value);
        break;
      case 10:
        var value = /** @type {string} */ (reader.readString());
        msg.setCreatedAt(value);
        break;
      case 11:
        var value = /** @type {string} */ (reader.readString());
        msg.setUpdatedAt(value);
        break;
      case 12:
        var value = new proto.cs.CustomerQuestionReply();
        reader.readMessage(
          value,
          proto.cs.CustomerQuestionReply.deserializeBinaryFromReader,
        );
        msg.addCustomerQuestionReply(value);
        break;
      case 13:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setReplyCount(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs.CustomerQuestion.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.cs.CustomerQuestion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs.CustomerQuestion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs.CustomerQuestion.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(1, f);
  }
  f = message.getAccountId();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getAppend();
  if (f.length > 0) {
    writer.writeString(5, f);
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(6, f);
  }
  f = message.getAnswerAt();
  if (f.length > 0) {
    writer.writeString(7, f);
  }
  f = message.getReplyAt();
  if (f.length > 0) {
    writer.writeString(8, f);
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(9, f);
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(10, f);
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(11, f);
  }
  f = message.getCustomerQuestionReplyList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      12,
      f,
      proto.cs.CustomerQuestionReply.serializeBinaryToWriter,
    );
  }
  f = message.getReplyCount();
  if (f !== 0) {
    writer.writeInt32(13, f);
  }
};

/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.cs.CustomerQuestion.prototype.getId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.cs.CustomerQuestion} returns this
 */
proto.cs.CustomerQuestion.prototype.setId = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional string account_id = 2;
 * @return {string}
 */
proto.cs.CustomerQuestion.prototype.getAccountId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.cs.CustomerQuestion} returns this
 */
proto.cs.CustomerQuestion.prototype.setAccountId = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string title = 3;
 * @return {string}
 */
proto.cs.CustomerQuestion.prototype.getTitle = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.cs.CustomerQuestion} returns this
 */
proto.cs.CustomerQuestion.prototype.setTitle = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string content = 4;
 * @return {string}
 */
proto.cs.CustomerQuestion.prototype.getContent = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.cs.CustomerQuestion} returns this
 */
proto.cs.CustomerQuestion.prototype.setContent = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional string append = 5;
 * @return {string}
 */
proto.cs.CustomerQuestion.prototype.getAppend = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''));
};

/**
 * @param {string} value
 * @return {!proto.cs.CustomerQuestion} returns this
 */
proto.cs.CustomerQuestion.prototype.setAppend = function (value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * optional QuestionState state = 6;
 * @return {!proto.cs.QuestionState}
 */
proto.cs.CustomerQuestion.prototype.getState = function () {
  return /** @type {!proto.cs.QuestionState} */ (
    jspb.Message.getFieldWithDefault(this, 6, 0)
  );
};

/**
 * @param {!proto.cs.QuestionState} value
 * @return {!proto.cs.CustomerQuestion} returns this
 */
proto.cs.CustomerQuestion.prototype.setState = function (value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};

/**
 * optional string answer_at = 7;
 * @return {string}
 */
proto.cs.CustomerQuestion.prototype.getAnswerAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ''));
};

/**
 * @param {string} value
 * @return {!proto.cs.CustomerQuestion} returns this
 */
proto.cs.CustomerQuestion.prototype.setAnswerAt = function (value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};

/**
 * optional string reply_at = 8;
 * @return {string}
 */
proto.cs.CustomerQuestion.prototype.getReplyAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ''));
};

/**
 * @param {string} value
 * @return {!proto.cs.CustomerQuestion} returns this
 */
proto.cs.CustomerQuestion.prototype.setReplyAt = function (value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};

/**
 * optional bool is_active = 9;
 * @return {boolean}
 */
proto.cs.CustomerQuestion.prototype.getIsActive = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 9, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.cs.CustomerQuestion} returns this
 */
proto.cs.CustomerQuestion.prototype.setIsActive = function (value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};

/**
 * optional string created_at = 10;
 * @return {string}
 */
proto.cs.CustomerQuestion.prototype.getCreatedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ''));
};

/**
 * @param {string} value
 * @return {!proto.cs.CustomerQuestion} returns this
 */
proto.cs.CustomerQuestion.prototype.setCreatedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};

/**
 * optional string updated_at = 11;
 * @return {string}
 */
proto.cs.CustomerQuestion.prototype.getUpdatedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ''));
};

/**
 * @param {string} value
 * @return {!proto.cs.CustomerQuestion} returns this
 */
proto.cs.CustomerQuestion.prototype.setUpdatedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};

/**
 * repeated CustomerQuestionReply customer_question_reply = 12;
 * @return {!Array<!proto.cs.CustomerQuestionReply>}
 */
proto.cs.CustomerQuestion.prototype.getCustomerQuestionReplyList = function () {
  return /** @type{!Array<!proto.cs.CustomerQuestionReply>} */ (
    jspb.Message.getRepeatedWrapperField(
      this,
      proto.cs.CustomerQuestionReply,
      12,
    )
  );
};

/**
 * @param {!Array<!proto.cs.CustomerQuestionReply>} value
 * @return {!proto.cs.CustomerQuestion} returns this
 */
proto.cs.CustomerQuestion.prototype.setCustomerQuestionReplyList = function (
  value,
) {
  return jspb.Message.setRepeatedWrapperField(this, 12, value);
};

/**
 * @param {!proto.cs.CustomerQuestionReply=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cs.CustomerQuestionReply}
 */
proto.cs.CustomerQuestion.prototype.addCustomerQuestionReply = function (
  opt_value,
  opt_index,
) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    12,
    opt_value,
    proto.cs.CustomerQuestionReply,
    opt_index,
  );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cs.CustomerQuestion} returns this
 */
proto.cs.CustomerQuestion.prototype.clearCustomerQuestionReplyList =
  function () {
    return this.setCustomerQuestionReplyList([]);
  };

/**
 * optional int32 reply_count = 13;
 * @return {number}
 */
proto.cs.CustomerQuestion.prototype.getReplyCount = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};

/**
 * @param {number} value
 * @return {!proto.cs.CustomerQuestion} returns this
 */
proto.cs.CustomerQuestion.prototype.setReplyCount = function (value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.cs.CustomerQuestionReply.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.cs.CustomerQuestionReply.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.cs.CustomerQuestionReply} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.cs.CustomerQuestionReply.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        id: jspb.Message.getFieldWithDefault(msg, 1, 0),
        questionId: jspb.Message.getFieldWithDefault(msg, 2, 0),
        accountId: jspb.Message.getFieldWithDefault(msg, 3, ''),
        adminId: jspb.Message.getFieldWithDefault(msg, 4, ''),
        reply: jspb.Message.getFieldWithDefault(msg, 5, ''),
        append: jspb.Message.getFieldWithDefault(msg, 6, ''),
        isActive: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
        createdAt: jspb.Message.getFieldWithDefault(msg, 8, ''),
        updatedAt: jspb.Message.getFieldWithDefault(msg, 9, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs.CustomerQuestionReply}
 */
proto.cs.CustomerQuestionReply.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs.CustomerQuestionReply();
  return proto.cs.CustomerQuestionReply.deserializeBinaryFromReader(
    msg,
    reader,
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs.CustomerQuestionReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs.CustomerQuestionReply}
 */
proto.cs.CustomerQuestionReply.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setId(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setQuestionId(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setAccountId(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setAdminId(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setReply(value);
        break;
      case 6:
        var value = /** @type {string} */ (reader.readString());
        msg.setAppend(value);
        break;
      case 7:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsActive(value);
        break;
      case 8:
        var value = /** @type {string} */ (reader.readString());
        msg.setCreatedAt(value);
        break;
      case 9:
        var value = /** @type {string} */ (reader.readString());
        msg.setUpdatedAt(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs.CustomerQuestionReply.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.cs.CustomerQuestionReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs.CustomerQuestionReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs.CustomerQuestionReply.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(1, f);
  }
  f = message.getQuestionId();
  if (f !== 0) {
    writer.writeInt32(2, f);
  }
  f = message.getAccountId();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getAdminId();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getReply();
  if (f.length > 0) {
    writer.writeString(5, f);
  }
  f = message.getAppend();
  if (f.length > 0) {
    writer.writeString(6, f);
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(7, f);
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(8, f);
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(9, f);
  }
};

/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.cs.CustomerQuestionReply.prototype.getId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.cs.CustomerQuestionReply} returns this
 */
proto.cs.CustomerQuestionReply.prototype.setId = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional int32 question_id = 2;
 * @return {number}
 */
proto.cs.CustomerQuestionReply.prototype.getQuestionId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/**
 * @param {number} value
 * @return {!proto.cs.CustomerQuestionReply} returns this
 */
proto.cs.CustomerQuestionReply.prototype.setQuestionId = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};

/**
 * optional string account_id = 3;
 * @return {string}
 */
proto.cs.CustomerQuestionReply.prototype.getAccountId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.cs.CustomerQuestionReply} returns this
 */
proto.cs.CustomerQuestionReply.prototype.setAccountId = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string admin_id = 4;
 * @return {string}
 */
proto.cs.CustomerQuestionReply.prototype.getAdminId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.cs.CustomerQuestionReply} returns this
 */
proto.cs.CustomerQuestionReply.prototype.setAdminId = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional string reply = 5;
 * @return {string}
 */
proto.cs.CustomerQuestionReply.prototype.getReply = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''));
};

/**
 * @param {string} value
 * @return {!proto.cs.CustomerQuestionReply} returns this
 */
proto.cs.CustomerQuestionReply.prototype.setReply = function (value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * optional string append = 6;
 * @return {string}
 */
proto.cs.CustomerQuestionReply.prototype.getAppend = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ''));
};

/**
 * @param {string} value
 * @return {!proto.cs.CustomerQuestionReply} returns this
 */
proto.cs.CustomerQuestionReply.prototype.setAppend = function (value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};

/**
 * optional bool is_active = 7;
 * @return {boolean}
 */
proto.cs.CustomerQuestionReply.prototype.getIsActive = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 7, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.cs.CustomerQuestionReply} returns this
 */
proto.cs.CustomerQuestionReply.prototype.setIsActive = function (value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};

/**
 * optional string created_at = 8;
 * @return {string}
 */
proto.cs.CustomerQuestionReply.prototype.getCreatedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ''));
};

/**
 * @param {string} value
 * @return {!proto.cs.CustomerQuestionReply} returns this
 */
proto.cs.CustomerQuestionReply.prototype.setCreatedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};

/**
 * optional string updated_at = 9;
 * @return {string}
 */
proto.cs.CustomerQuestionReply.prototype.getUpdatedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ''));
};

/**
 * @param {string} value
 * @return {!proto.cs.CustomerQuestionReply} returns this
 */
proto.cs.CustomerQuestionReply.prototype.setUpdatedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.cs.CustomerQuestionRequest.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.cs.CustomerQuestionRequest.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.cs.CustomerQuestionRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.cs.CustomerQuestionRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        csId: jspb.Message.getFieldWithDefault(msg, 1, 0),
        accountId: jspb.Message.getFieldWithDefault(msg, 2, ''),
        title: jspb.Message.getFieldWithDefault(msg, 3, ''),
        content: jspb.Message.getFieldWithDefault(msg, 4, ''),
        append: jspb.Message.getFieldWithDefault(msg, 5, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs.CustomerQuestionRequest}
 */
proto.cs.CustomerQuestionRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs.CustomerQuestionRequest();
  return proto.cs.CustomerQuestionRequest.deserializeBinaryFromReader(
    msg,
    reader,
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs.CustomerQuestionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs.CustomerQuestionRequest}
 */
proto.cs.CustomerQuestionRequest.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setCsId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setAccountId(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setTitle(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setContent(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setAppend(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs.CustomerQuestionRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.cs.CustomerQuestionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs.CustomerQuestionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs.CustomerQuestionRequest.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getCsId();
  if (f !== 0) {
    writer.writeInt32(1, f);
  }
  f = message.getAccountId();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getAppend();
  if (f.length > 0) {
    writer.writeString(5, f);
  }
};

/**
 * optional int32 cs_id = 1;
 * @return {number}
 */
proto.cs.CustomerQuestionRequest.prototype.getCsId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.cs.CustomerQuestionRequest} returns this
 */
proto.cs.CustomerQuestionRequest.prototype.setCsId = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional string account_id = 2;
 * @return {string}
 */
proto.cs.CustomerQuestionRequest.prototype.getAccountId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.cs.CustomerQuestionRequest} returns this
 */
proto.cs.CustomerQuestionRequest.prototype.setAccountId = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string title = 3;
 * @return {string}
 */
proto.cs.CustomerQuestionRequest.prototype.getTitle = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.cs.CustomerQuestionRequest} returns this
 */
proto.cs.CustomerQuestionRequest.prototype.setTitle = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string content = 4;
 * @return {string}
 */
proto.cs.CustomerQuestionRequest.prototype.getContent = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.cs.CustomerQuestionRequest} returns this
 */
proto.cs.CustomerQuestionRequest.prototype.setContent = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional string append = 5;
 * @return {string}
 */
proto.cs.CustomerQuestionRequest.prototype.getAppend = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''));
};

/**
 * @param {string} value
 * @return {!proto.cs.CustomerQuestionRequest} returns this
 */
proto.cs.CustomerQuestionRequest.prototype.setAppend = function (value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.cs.CustomerQuestionResponse.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.cs.CustomerQuestionResponse.toObject(
      opt_includeInstance,
      this,
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.cs.CustomerQuestionResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.cs.CustomerQuestionResponse.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
        errorMessage: jspb.Message.getFieldWithDefault(msg, 2, ''),
        customerQuestion:
          (f = msg.getCustomerQuestion()) &&
          proto.cs.CustomerQuestion.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs.CustomerQuestionResponse}
 */
proto.cs.CustomerQuestionResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs.CustomerQuestionResponse();
  return proto.cs.CustomerQuestionResponse.deserializeBinaryFromReader(
    msg,
    reader,
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs.CustomerQuestionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs.CustomerQuestionResponse}
 */
proto.cs.CustomerQuestionResponse.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setSuccess(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setErrorMessage(value);
        break;
      case 3:
        var value = new proto.cs.CustomerQuestion();
        reader.readMessage(
          value,
          proto.cs.CustomerQuestion.deserializeBinaryFromReader,
        );
        msg.setCustomerQuestion(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs.CustomerQuestionResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.cs.CustomerQuestionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs.CustomerQuestionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs.CustomerQuestionResponse.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(1, f);
  }
  f = message.getErrorMessage();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getCustomerQuestion();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.cs.CustomerQuestion.serializeBinaryToWriter,
    );
  }
};

/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.cs.CustomerQuestionResponse.prototype.getSuccess = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 1, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.cs.CustomerQuestionResponse} returns this
 */
proto.cs.CustomerQuestionResponse.prototype.setSuccess = function (value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};

/**
 * optional string error_message = 2;
 * @return {string}
 */
proto.cs.CustomerQuestionResponse.prototype.getErrorMessage = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.cs.CustomerQuestionResponse} returns this
 */
proto.cs.CustomerQuestionResponse.prototype.setErrorMessage = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional CustomerQuestion customer_question = 3;
 * @return {?proto.cs.CustomerQuestion}
 */
proto.cs.CustomerQuestionResponse.prototype.getCustomerQuestion = function () {
  return /** @type{?proto.cs.CustomerQuestion} */ (
    jspb.Message.getWrapperField(this, proto.cs.CustomerQuestion, 3)
  );
};

/**
 * @param {?proto.cs.CustomerQuestion|undefined} value
 * @return {!proto.cs.CustomerQuestionResponse} returns this
 */
proto.cs.CustomerQuestionResponse.prototype.setCustomerQuestion = function (
  value,
) {
  return jspb.Message.setWrapperField(this, 3, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.cs.CustomerQuestionResponse} returns this
 */
proto.cs.CustomerQuestionResponse.prototype.clearCustomerQuestion =
  function () {
    return this.setCustomerQuestion(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs.CustomerQuestionResponse.prototype.hasCustomerQuestion = function () {
  return jspb.Message.getField(this, 3) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.cs.CustomerQuestionsRequest.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.cs.CustomerQuestionsRequest.toObject(
      opt_includeInstance,
      this,
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.cs.CustomerQuestionsRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.cs.CustomerQuestionsRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        accountId: jspb.Message.getFieldWithDefault(msg, 1, ''),
        page: jspb.Message.getFieldWithDefault(msg, 2, 0),
        countPerPage: jspb.Message.getFieldWithDefault(msg, 3, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs.CustomerQuestionsRequest}
 */
proto.cs.CustomerQuestionsRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs.CustomerQuestionsRequest();
  return proto.cs.CustomerQuestionsRequest.deserializeBinaryFromReader(
    msg,
    reader,
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs.CustomerQuestionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs.CustomerQuestionsRequest}
 */
proto.cs.CustomerQuestionsRequest.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setAccountId(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setPage(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setCountPerPage(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs.CustomerQuestionsRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.cs.CustomerQuestionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs.CustomerQuestionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs.CustomerQuestionsRequest.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getAccountId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(2, f);
  }
  f = message.getCountPerPage();
  if (f !== 0) {
    writer.writeInt32(3, f);
  }
};

/**
 * optional string account_id = 1;
 * @return {string}
 */
proto.cs.CustomerQuestionsRequest.prototype.getAccountId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.cs.CustomerQuestionsRequest} returns this
 */
proto.cs.CustomerQuestionsRequest.prototype.setAccountId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional int32 page = 2;
 * @return {number}
 */
proto.cs.CustomerQuestionsRequest.prototype.getPage = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/**
 * @param {number} value
 * @return {!proto.cs.CustomerQuestionsRequest} returns this
 */
proto.cs.CustomerQuestionsRequest.prototype.setPage = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};

/**
 * optional int32 count_per_page = 3;
 * @return {number}
 */
proto.cs.CustomerQuestionsRequest.prototype.getCountPerPage = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};

/**
 * @param {number} value
 * @return {!proto.cs.CustomerQuestionsRequest} returns this
 */
proto.cs.CustomerQuestionsRequest.prototype.setCountPerPage = function (value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cs.CustomerQuestionsResponse.repeatedFields_ = [3];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.cs.CustomerQuestionsResponse.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.cs.CustomerQuestionsResponse.toObject(
      opt_includeInstance,
      this,
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.cs.CustomerQuestionsResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.cs.CustomerQuestionsResponse.toObject = function (
    includeInstance,
    msg,
  ) {
    var f,
      obj = {
        success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
        errorMessage: jspb.Message.getFieldWithDefault(msg, 2, ''),
        customerQuestionsList: jspb.Message.toObjectList(
          msg.getCustomerQuestionsList(),
          proto.cs.CustomerQuestion.toObject,
          includeInstance,
        ),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs.CustomerQuestionsResponse}
 */
proto.cs.CustomerQuestionsResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs.CustomerQuestionsResponse();
  return proto.cs.CustomerQuestionsResponse.deserializeBinaryFromReader(
    msg,
    reader,
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs.CustomerQuestionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs.CustomerQuestionsResponse}
 */
proto.cs.CustomerQuestionsResponse.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setSuccess(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setErrorMessage(value);
        break;
      case 3:
        var value = new proto.cs.CustomerQuestion();
        reader.readMessage(
          value,
          proto.cs.CustomerQuestion.deserializeBinaryFromReader,
        );
        msg.addCustomerQuestions(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs.CustomerQuestionsResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.cs.CustomerQuestionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs.CustomerQuestionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs.CustomerQuestionsResponse.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(1, f);
  }
  f = message.getErrorMessage();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getCustomerQuestionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.cs.CustomerQuestion.serializeBinaryToWriter,
    );
  }
};

/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.cs.CustomerQuestionsResponse.prototype.getSuccess = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 1, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.cs.CustomerQuestionsResponse} returns this
 */
proto.cs.CustomerQuestionsResponse.prototype.setSuccess = function (value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};

/**
 * optional string error_message = 2;
 * @return {string}
 */
proto.cs.CustomerQuestionsResponse.prototype.getErrorMessage = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.cs.CustomerQuestionsResponse} returns this
 */
proto.cs.CustomerQuestionsResponse.prototype.setErrorMessage = function (
  value,
) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * repeated CustomerQuestion customer_questions = 3;
 * @return {!Array<!proto.cs.CustomerQuestion>}
 */
proto.cs.CustomerQuestionsResponse.prototype.getCustomerQuestionsList =
  function () {
    return /** @type{!Array<!proto.cs.CustomerQuestion>} */ (
      jspb.Message.getRepeatedWrapperField(this, proto.cs.CustomerQuestion, 3)
    );
  };

/**
 * @param {!Array<!proto.cs.CustomerQuestion>} value
 * @return {!proto.cs.CustomerQuestionsResponse} returns this
 */
proto.cs.CustomerQuestionsResponse.prototype.setCustomerQuestionsList =
  function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 3, value);
  };

/**
 * @param {!proto.cs.CustomerQuestion=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cs.CustomerQuestion}
 */
proto.cs.CustomerQuestionsResponse.prototype.addCustomerQuestions = function (
  opt_value,
  opt_index,
) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    3,
    opt_value,
    proto.cs.CustomerQuestion,
    opt_index,
  );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cs.CustomerQuestionsResponse} returns this
 */
proto.cs.CustomerQuestionsResponse.prototype.clearCustomerQuestionsList =
  function () {
    return this.setCustomerQuestionsList([]);
  };

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.cs.CustomerQuestionReplyRequest.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.cs.CustomerQuestionReplyRequest.toObject(
      opt_includeInstance,
      this,
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.cs.CustomerQuestionReplyRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.cs.CustomerQuestionReplyRequest.toObject = function (
    includeInstance,
    msg,
  ) {
    var f,
      obj = {
        replyId: jspb.Message.getFieldWithDefault(msg, 1, 0),
        csId: jspb.Message.getFieldWithDefault(msg, 2, 0),
        accountId: jspb.Message.getFieldWithDefault(msg, 3, ''),
        adminId: jspb.Message.getFieldWithDefault(msg, 4, ''),
        reply: jspb.Message.getFieldWithDefault(msg, 5, ''),
        append: jspb.Message.getFieldWithDefault(msg, 6, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs.CustomerQuestionReplyRequest}
 */
proto.cs.CustomerQuestionReplyRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs.CustomerQuestionReplyRequest();
  return proto.cs.CustomerQuestionReplyRequest.deserializeBinaryFromReader(
    msg,
    reader,
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs.CustomerQuestionReplyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs.CustomerQuestionReplyRequest}
 */
proto.cs.CustomerQuestionReplyRequest.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setReplyId(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setCsId(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setAccountId(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setAdminId(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setReply(value);
        break;
      case 6:
        var value = /** @type {string} */ (reader.readString());
        msg.setAppend(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs.CustomerQuestionReplyRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.cs.CustomerQuestionReplyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs.CustomerQuestionReplyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs.CustomerQuestionReplyRequest.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getReplyId();
  if (f !== 0) {
    writer.writeInt32(1, f);
  }
  f = message.getCsId();
  if (f !== 0) {
    writer.writeInt32(2, f);
  }
  f = message.getAccountId();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getAdminId();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getReply();
  if (f.length > 0) {
    writer.writeString(5, f);
  }
  f = message.getAppend();
  if (f.length > 0) {
    writer.writeString(6, f);
  }
};

/**
 * optional int32 reply_id = 1;
 * @return {number}
 */
proto.cs.CustomerQuestionReplyRequest.prototype.getReplyId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.cs.CustomerQuestionReplyRequest} returns this
 */
proto.cs.CustomerQuestionReplyRequest.prototype.setReplyId = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional int32 cs_id = 2;
 * @return {number}
 */
proto.cs.CustomerQuestionReplyRequest.prototype.getCsId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/**
 * @param {number} value
 * @return {!proto.cs.CustomerQuestionReplyRequest} returns this
 */
proto.cs.CustomerQuestionReplyRequest.prototype.setCsId = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};

/**
 * optional string account_id = 3;
 * @return {string}
 */
proto.cs.CustomerQuestionReplyRequest.prototype.getAccountId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.cs.CustomerQuestionReplyRequest} returns this
 */
proto.cs.CustomerQuestionReplyRequest.prototype.setAccountId = function (
  value,
) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string admin_id = 4;
 * @return {string}
 */
proto.cs.CustomerQuestionReplyRequest.prototype.getAdminId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.cs.CustomerQuestionReplyRequest} returns this
 */
proto.cs.CustomerQuestionReplyRequest.prototype.setAdminId = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional string reply = 5;
 * @return {string}
 */
proto.cs.CustomerQuestionReplyRequest.prototype.getReply = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''));
};

/**
 * @param {string} value
 * @return {!proto.cs.CustomerQuestionReplyRequest} returns this
 */
proto.cs.CustomerQuestionReplyRequest.prototype.setReply = function (value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * optional string append = 6;
 * @return {string}
 */
proto.cs.CustomerQuestionReplyRequest.prototype.getAppend = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ''));
};

/**
 * @param {string} value
 * @return {!proto.cs.CustomerQuestionReplyRequest} returns this
 */
proto.cs.CustomerQuestionReplyRequest.prototype.setAppend = function (value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.cs.CustomerQuestionReplyResponse.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.cs.CustomerQuestionReplyResponse.toObject(
      opt_includeInstance,
      this,
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.cs.CustomerQuestionReplyResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.cs.CustomerQuestionReplyResponse.toObject = function (
    includeInstance,
    msg,
  ) {
    var f,
      obj = {
        success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
        errorMessage: jspb.Message.getFieldWithDefault(msg, 2, ''),
        customerQuestionReply:
          (f = msg.getCustomerQuestionReply()) &&
          proto.cs.CustomerQuestionReply.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs.CustomerQuestionReplyResponse}
 */
proto.cs.CustomerQuestionReplyResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs.CustomerQuestionReplyResponse();
  return proto.cs.CustomerQuestionReplyResponse.deserializeBinaryFromReader(
    msg,
    reader,
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs.CustomerQuestionReplyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs.CustomerQuestionReplyResponse}
 */
proto.cs.CustomerQuestionReplyResponse.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setSuccess(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setErrorMessage(value);
        break;
      case 3:
        var value = new proto.cs.CustomerQuestionReply();
        reader.readMessage(
          value,
          proto.cs.CustomerQuestionReply.deserializeBinaryFromReader,
        );
        msg.setCustomerQuestionReply(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs.CustomerQuestionReplyResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.cs.CustomerQuestionReplyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs.CustomerQuestionReplyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs.CustomerQuestionReplyResponse.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(1, f);
  }
  f = message.getErrorMessage();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getCustomerQuestionReply();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.cs.CustomerQuestionReply.serializeBinaryToWriter,
    );
  }
};

/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.cs.CustomerQuestionReplyResponse.prototype.getSuccess = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 1, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.cs.CustomerQuestionReplyResponse} returns this
 */
proto.cs.CustomerQuestionReplyResponse.prototype.setSuccess = function (value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};

/**
 * optional string error_message = 2;
 * @return {string}
 */
proto.cs.CustomerQuestionReplyResponse.prototype.getErrorMessage = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.cs.CustomerQuestionReplyResponse} returns this
 */
proto.cs.CustomerQuestionReplyResponse.prototype.setErrorMessage = function (
  value,
) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional CustomerQuestionReply customer_question_reply = 3;
 * @return {?proto.cs.CustomerQuestionReply}
 */
proto.cs.CustomerQuestionReplyResponse.prototype.getCustomerQuestionReply =
  function () {
    return /** @type{?proto.cs.CustomerQuestionReply} */ (
      jspb.Message.getWrapperField(this, proto.cs.CustomerQuestionReply, 3)
    );
  };

/**
 * @param {?proto.cs.CustomerQuestionReply|undefined} value
 * @return {!proto.cs.CustomerQuestionReplyResponse} returns this
 */
proto.cs.CustomerQuestionReplyResponse.prototype.setCustomerQuestionReply =
  function (value) {
    return jspb.Message.setWrapperField(this, 3, value);
  };

/**
 * Clears the message field making it undefined.
 * @return {!proto.cs.CustomerQuestionReplyResponse} returns this
 */
proto.cs.CustomerQuestionReplyResponse.prototype.clearCustomerQuestionReply =
  function () {
    return this.setCustomerQuestionReply(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cs.CustomerQuestionReplyResponse.prototype.hasCustomerQuestionReply =
  function () {
    return jspb.Message.getField(this, 3) != null;
  };

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cs.CustomerQuestionRepliesResponse.repeatedFields_ = [3];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.cs.CustomerQuestionRepliesResponse.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.cs.CustomerQuestionRepliesResponse.toObject(
      opt_includeInstance,
      this,
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.cs.CustomerQuestionRepliesResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.cs.CustomerQuestionRepliesResponse.toObject = function (
    includeInstance,
    msg,
  ) {
    var f,
      obj = {
        success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
        errorMessage: jspb.Message.getFieldWithDefault(msg, 2, ''),
        customerQuestionRepliesList: jspb.Message.toObjectList(
          msg.getCustomerQuestionRepliesList(),
          proto.cs.CustomerQuestionReply.toObject,
          includeInstance,
        ),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs.CustomerQuestionRepliesResponse}
 */
proto.cs.CustomerQuestionRepliesResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs.CustomerQuestionRepliesResponse();
  return proto.cs.CustomerQuestionRepliesResponse.deserializeBinaryFromReader(
    msg,
    reader,
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs.CustomerQuestionRepliesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs.CustomerQuestionRepliesResponse}
 */
proto.cs.CustomerQuestionRepliesResponse.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = /** @type {boolean} */ (reader.readBool());
          msg.setSuccess(value);
          break;
        case 2:
          var value = /** @type {string} */ (reader.readString());
          msg.setErrorMessage(value);
          break;
        case 3:
          var value = new proto.cs.CustomerQuestionReply();
          reader.readMessage(
            value,
            proto.cs.CustomerQuestionReply.deserializeBinaryFromReader,
          );
          msg.addCustomerQuestionReplies(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs.CustomerQuestionRepliesResponse.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.cs.CustomerQuestionRepliesResponse.serializeBinaryToWriter(
      this,
      writer,
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs.CustomerQuestionRepliesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs.CustomerQuestionRepliesResponse.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(1, f);
  }
  f = message.getErrorMessage();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getCustomerQuestionRepliesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.cs.CustomerQuestionReply.serializeBinaryToWriter,
    );
  }
};

/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.cs.CustomerQuestionRepliesResponse.prototype.getSuccess = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 1, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.cs.CustomerQuestionRepliesResponse} returns this
 */
proto.cs.CustomerQuestionRepliesResponse.prototype.setSuccess = function (
  value,
) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};

/**
 * optional string error_message = 2;
 * @return {string}
 */
proto.cs.CustomerQuestionRepliesResponse.prototype.getErrorMessage =
  function () {
    return /** @type {string} */ (
      jspb.Message.getFieldWithDefault(this, 2, '')
    );
  };

/**
 * @param {string} value
 * @return {!proto.cs.CustomerQuestionRepliesResponse} returns this
 */
proto.cs.CustomerQuestionRepliesResponse.prototype.setErrorMessage = function (
  value,
) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * repeated CustomerQuestionReply customer_question_replies = 3;
 * @return {!Array<!proto.cs.CustomerQuestionReply>}
 */
proto.cs.CustomerQuestionRepliesResponse.prototype.getCustomerQuestionRepliesList =
  function () {
    return /** @type{!Array<!proto.cs.CustomerQuestionReply>} */ (
      jspb.Message.getRepeatedWrapperField(
        this,
        proto.cs.CustomerQuestionReply,
        3,
      )
    );
  };

/**
 * @param {!Array<!proto.cs.CustomerQuestionReply>} value
 * @return {!proto.cs.CustomerQuestionRepliesResponse} returns this
 */
proto.cs.CustomerQuestionRepliesResponse.prototype.setCustomerQuestionRepliesList =
  function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 3, value);
  };

/**
 * @param {!proto.cs.CustomerQuestionReply=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cs.CustomerQuestionReply}
 */
proto.cs.CustomerQuestionRepliesResponse.prototype.addCustomerQuestionReplies =
  function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(
      this,
      3,
      opt_value,
      proto.cs.CustomerQuestionReply,
      opt_index,
    );
  };

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cs.CustomerQuestionRepliesResponse} returns this
 */
proto.cs.CustomerQuestionRepliesResponse.prototype.clearCustomerQuestionRepliesList =
  function () {
    return this.setCustomerQuestionRepliesList([]);
  };

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.cs.DefaultResponse.prototype.toObject = function (opt_includeInstance) {
    return proto.cs.DefaultResponse.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.cs.DefaultResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.cs.DefaultResponse.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
        errorMessage: jspb.Message.getFieldWithDefault(msg, 2, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cs.DefaultResponse}
 */
proto.cs.DefaultResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cs.DefaultResponse();
  return proto.cs.DefaultResponse.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cs.DefaultResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cs.DefaultResponse}
 */
proto.cs.DefaultResponse.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setSuccess(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setErrorMessage(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cs.DefaultResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.cs.DefaultResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cs.DefaultResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cs.DefaultResponse.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(1, f);
  }
  f = message.getErrorMessage();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
};

/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.cs.DefaultResponse.prototype.getSuccess = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 1, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.cs.DefaultResponse} returns this
 */
proto.cs.DefaultResponse.prototype.setSuccess = function (value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};

/**
 * optional string error_message = 2;
 * @return {string}
 */
proto.cs.DefaultResponse.prototype.getErrorMessage = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.cs.DefaultResponse} returns this
 */
proto.cs.DefaultResponse.prototype.setErrorMessage = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * @enum {number}
 */
proto.cs.QuestionState = {
  QUESTION_STATE_NONE: 0,
  QUESTION_STATE_OPEN: 1,
  QUESTION_STATE_NEW_REPLY: 2,
  QUESTION_STATE_CLOSED: 3,
};

goog.object.extend(exports, proto.cs);
