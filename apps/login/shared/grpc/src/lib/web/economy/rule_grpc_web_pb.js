/**
 * @fileoverview gRPC-Web generated client stub for economy
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.29.3
// source: rule.proto

/* eslint-disable */
// @ts-nocheck

const grpc = {};
grpc.web = require('grpc-web');

const proto = {};
proto.economy = require('./rule_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.economy.RuleServiceClient = function (hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');
};

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.economy.RuleServicePromiseClient = function (
  hostname,
  credentials,
  options,
) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.economy.Empty,
 *   !proto.economy.GamesResponse>}
 */
const methodDescriptor_RuleService_GetGame = new grpc.web.MethodDescriptor(
  '/economy.RuleService/GetGame',
  grpc.web.MethodType.UNARY,
  proto.economy.Empty,
  proto.economy.GamesResponse,
  /**
   * @param {!proto.economy.Empty} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.economy.GamesResponse.deserializeBinary,
);

/**
 * @param {!proto.economy.Empty} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.economy.GamesResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.economy.GamesResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.economy.RuleServiceClient.prototype.getGame = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/economy.RuleService/GetGame',
    request,
    metadata || {},
    methodDescriptor_RuleService_GetGame,
    callback,
  );
};

/**
 * @param {!proto.economy.Empty} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.economy.GamesResponse>}
 *     Promise that resolves to the response
 */
proto.economy.RuleServicePromiseClient.prototype.getGame = function (
  request,
  metadata,
) {
  return this.client_.unaryCall(
    this.hostname_ + '/economy.RuleService/GetGame',
    request,
    metadata || {},
    methodDescriptor_RuleService_GetGame,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.economy.ConfigRequest,
 *   !proto.economy.ConfigResponse>}
 */
const methodDescriptor_RuleService_CreateConfig = new grpc.web.MethodDescriptor(
  '/economy.RuleService/CreateConfig',
  grpc.web.MethodType.UNARY,
  proto.economy.ConfigRequest,
  proto.economy.ConfigResponse,
  /**
   * @param {!proto.economy.ConfigRequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.economy.ConfigResponse.deserializeBinary,
);

/**
 * @param {!proto.economy.ConfigRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.economy.ConfigResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.economy.ConfigResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.economy.RuleServiceClient.prototype.createConfig = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/economy.RuleService/CreateConfig',
    request,
    metadata || {},
    methodDescriptor_RuleService_CreateConfig,
    callback,
  );
};

/**
 * @param {!proto.economy.ConfigRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.economy.ConfigResponse>}
 *     Promise that resolves to the response
 */
proto.economy.RuleServicePromiseClient.prototype.createConfig = function (
  request,
  metadata,
) {
  return this.client_.unaryCall(
    this.hostname_ + '/economy.RuleService/CreateConfig',
    request,
    metadata || {},
    methodDescriptor_RuleService_CreateConfig,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.economy.Empty,
 *   !proto.economy.ConfigsResponse>}
 */
const methodDescriptor_RuleService_GetConfig = new grpc.web.MethodDescriptor(
  '/economy.RuleService/GetConfig',
  grpc.web.MethodType.UNARY,
  proto.economy.Empty,
  proto.economy.ConfigsResponse,
  /**
   * @param {!proto.economy.Empty} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.economy.ConfigsResponse.deserializeBinary,
);

/**
 * @param {!proto.economy.Empty} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.economy.ConfigsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.economy.ConfigsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.economy.RuleServiceClient.prototype.getConfig = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/economy.RuleService/GetConfig',
    request,
    metadata || {},
    methodDescriptor_RuleService_GetConfig,
    callback,
  );
};

/**
 * @param {!proto.economy.Empty} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.economy.ConfigsResponse>}
 *     Promise that resolves to the response
 */
proto.economy.RuleServicePromiseClient.prototype.getConfig = function (
  request,
  metadata,
) {
  return this.client_.unaryCall(
    this.hostname_ + '/economy.RuleService/GetConfig',
    request,
    metadata || {},
    methodDescriptor_RuleService_GetConfig,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.economy.ConfigRequest,
 *   !proto.economy.ConfigResponse>}
 */
const methodDescriptor_RuleService_UpdateConfig = new grpc.web.MethodDescriptor(
  '/economy.RuleService/UpdateConfig',
  grpc.web.MethodType.UNARY,
  proto.economy.ConfigRequest,
  proto.economy.ConfigResponse,
  /**
   * @param {!proto.economy.ConfigRequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.economy.ConfigResponse.deserializeBinary,
);

/**
 * @param {!proto.economy.ConfigRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.economy.ConfigResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.economy.ConfigResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.economy.RuleServiceClient.prototype.updateConfig = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/economy.RuleService/UpdateConfig',
    request,
    metadata || {},
    methodDescriptor_RuleService_UpdateConfig,
    callback,
  );
};

/**
 * @param {!proto.economy.ConfigRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.economy.ConfigResponse>}
 *     Promise that resolves to the response
 */
proto.economy.RuleServicePromiseClient.prototype.updateConfig = function (
  request,
  metadata,
) {
  return this.client_.unaryCall(
    this.hostname_ + '/economy.RuleService/UpdateConfig',
    request,
    metadata || {},
    methodDescriptor_RuleService_UpdateConfig,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.economy.MoneyTableRequest,
 *   !proto.economy.MoneyTableResponse>}
 */
const methodDescriptor_RuleService_CreateMoneyTable =
  new grpc.web.MethodDescriptor(
    '/economy.RuleService/CreateMoneyTable',
    grpc.web.MethodType.UNARY,
    proto.economy.MoneyTableRequest,
    proto.economy.MoneyTableResponse,
    /**
     * @param {!proto.economy.MoneyTableRequest} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.economy.MoneyTableResponse.deserializeBinary,
  );

/**
 * @param {!proto.economy.MoneyTableRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.economy.MoneyTableResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.economy.MoneyTableResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.economy.RuleServiceClient.prototype.createMoneyTable = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/economy.RuleService/CreateMoneyTable',
    request,
    metadata || {},
    methodDescriptor_RuleService_CreateMoneyTable,
    callback,
  );
};

/**
 * @param {!proto.economy.MoneyTableRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.economy.MoneyTableResponse>}
 *     Promise that resolves to the response
 */
proto.economy.RuleServicePromiseClient.prototype.createMoneyTable = function (
  request,
  metadata,
) {
  return this.client_.unaryCall(
    this.hostname_ + '/economy.RuleService/CreateMoneyTable',
    request,
    metadata || {},
    methodDescriptor_RuleService_CreateMoneyTable,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.economy.Empty,
 *   !proto.economy.MoneyTablesResponse>}
 */
const methodDescriptor_RuleService_GetMoneyTable =
  new grpc.web.MethodDescriptor(
    '/economy.RuleService/GetMoneyTable',
    grpc.web.MethodType.UNARY,
    proto.economy.Empty,
    proto.economy.MoneyTablesResponse,
    /**
     * @param {!proto.economy.Empty} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.economy.MoneyTablesResponse.deserializeBinary,
  );

/**
 * @param {!proto.economy.Empty} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.economy.MoneyTablesResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.economy.MoneyTablesResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.economy.RuleServiceClient.prototype.getMoneyTable = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/economy.RuleService/GetMoneyTable',
    request,
    metadata || {},
    methodDescriptor_RuleService_GetMoneyTable,
    callback,
  );
};

/**
 * @param {!proto.economy.Empty} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.economy.MoneyTablesResponse>}
 *     Promise that resolves to the response
 */
proto.economy.RuleServicePromiseClient.prototype.getMoneyTable = function (
  request,
  metadata,
) {
  return this.client_.unaryCall(
    this.hostname_ + '/economy.RuleService/GetMoneyTable',
    request,
    metadata || {},
    methodDescriptor_RuleService_GetMoneyTable,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.economy.MoneyTableRequest,
 *   !proto.economy.MoneyTableResponse>}
 */
const methodDescriptor_RuleService_UpdateMoneyTable =
  new grpc.web.MethodDescriptor(
    '/economy.RuleService/UpdateMoneyTable',
    grpc.web.MethodType.UNARY,
    proto.economy.MoneyTableRequest,
    proto.economy.MoneyTableResponse,
    /**
     * @param {!proto.economy.MoneyTableRequest} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.economy.MoneyTableResponse.deserializeBinary,
  );

/**
 * @param {!proto.economy.MoneyTableRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.economy.MoneyTableResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.economy.MoneyTableResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.economy.RuleServiceClient.prototype.updateMoneyTable = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/economy.RuleService/UpdateMoneyTable',
    request,
    metadata || {},
    methodDescriptor_RuleService_UpdateMoneyTable,
    callback,
  );
};

/**
 * @param {!proto.economy.MoneyTableRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.economy.MoneyTableResponse>}
 *     Promise that resolves to the response
 */
proto.economy.RuleServicePromiseClient.prototype.updateMoneyTable = function (
  request,
  metadata,
) {
  return this.client_.unaryCall(
    this.hostname_ + '/economy.RuleService/UpdateMoneyTable',
    request,
    metadata || {},
    methodDescriptor_RuleService_UpdateMoneyTable,
  );
};

module.exports = proto.economy;
