/**
 * @fileoverview gRPC-Web generated client stub for gm
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.29.3
// source: wordCheck.proto

/* eslint-disable */
// @ts-nocheck

const grpc = {};
grpc.web = require('grpc-web');

const proto = {};
proto.gm = require('./wordCheck_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.gm.WordCheckServiceClient = function (hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');
};

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.gm.WordCheckServicePromiseClient = function (
  hostname,
  credentials,
  options,
) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.gm.WordRequest,
 *   !proto.gm.WordResponse>}
 */
const methodDescriptor_WordCheckService_IsBanNickName =
  new grpc.web.MethodDescriptor(
    '/gm.WordCheckService/IsBanNickName',
    grpc.web.MethodType.UNARY,
    proto.gm.WordRequest,
    proto.gm.WordResponse,
    /**
     * @param {!proto.gm.WordRequest} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.gm.WordResponse.deserializeBinary,
  );

/**
 * @param {!proto.gm.WordRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.gm.WordResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.gm.WordResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.gm.WordCheckServiceClient.prototype.isBanNickName = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/gm.WordCheckService/IsBanNickName',
    request,
    metadata || {},
    methodDescriptor_WordCheckService_IsBanNickName,
    callback,
  );
};

/**
 * @param {!proto.gm.WordRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.gm.WordResponse>}
 *     Promise that resolves to the response
 */
proto.gm.WordCheckServicePromiseClient.prototype.isBanNickName = function (
  request,
  metadata,
) {
  return this.client_.unaryCall(
    this.hostname_ + '/gm.WordCheckService/IsBanNickName',
    request,
    metadata || {},
    methodDescriptor_WordCheckService_IsBanNickName,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.gm.GetWordListRequest,
 *   !proto.gm.GetWordListResponse>}
 */
const methodDescriptor_WordCheckService_GetNickNameBanList =
  new grpc.web.MethodDescriptor(
    '/gm.WordCheckService/GetNickNameBanList',
    grpc.web.MethodType.UNARY,
    proto.gm.GetWordListRequest,
    proto.gm.GetWordListResponse,
    /**
     * @param {!proto.gm.GetWordListRequest} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.gm.GetWordListResponse.deserializeBinary,
  );

/**
 * @param {!proto.gm.GetWordListRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.gm.GetWordListResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.gm.GetWordListResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.gm.WordCheckServiceClient.prototype.getNickNameBanList = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/gm.WordCheckService/GetNickNameBanList',
    request,
    metadata || {},
    methodDescriptor_WordCheckService_GetNickNameBanList,
    callback,
  );
};

/**
 * @param {!proto.gm.GetWordListRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.gm.GetWordListResponse>}
 *     Promise that resolves to the response
 */
proto.gm.WordCheckServicePromiseClient.prototype.getNickNameBanList = function (
  request,
  metadata,
) {
  return this.client_.unaryCall(
    this.hostname_ + '/gm.WordCheckService/GetNickNameBanList',
    request,
    metadata || {},
    methodDescriptor_WordCheckService_GetNickNameBanList,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.gm.AddWordListRequest,
 *   !proto.gm.DefaultResponse>}
 */
const methodDescriptor_WordCheckService_AddNickNameBanList =
  new grpc.web.MethodDescriptor(
    '/gm.WordCheckService/AddNickNameBanList',
    grpc.web.MethodType.UNARY,
    proto.gm.AddWordListRequest,
    proto.gm.DefaultResponse,
    /**
     * @param {!proto.gm.AddWordListRequest} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.gm.DefaultResponse.deserializeBinary,
  );

/**
 * @param {!proto.gm.AddWordListRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.gm.DefaultResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.gm.DefaultResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.gm.WordCheckServiceClient.prototype.addNickNameBanList = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/gm.WordCheckService/AddNickNameBanList',
    request,
    metadata || {},
    methodDescriptor_WordCheckService_AddNickNameBanList,
    callback,
  );
};

/**
 * @param {!proto.gm.AddWordListRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.gm.DefaultResponse>}
 *     Promise that resolves to the response
 */
proto.gm.WordCheckServicePromiseClient.prototype.addNickNameBanList = function (
  request,
  metadata,
) {
  return this.client_.unaryCall(
    this.hostname_ + '/gm.WordCheckService/AddNickNameBanList',
    request,
    metadata || {},
    methodDescriptor_WordCheckService_AddNickNameBanList,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.gm.UpdateWordListRequest,
 *   !proto.gm.DefaultResponse>}
 */
const methodDescriptor_WordCheckService_UpdateNickNameBanList =
  new grpc.web.MethodDescriptor(
    '/gm.WordCheckService/UpdateNickNameBanList',
    grpc.web.MethodType.UNARY,
    proto.gm.UpdateWordListRequest,
    proto.gm.DefaultResponse,
    /**
     * @param {!proto.gm.UpdateWordListRequest} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.gm.DefaultResponse.deserializeBinary,
  );

/**
 * @param {!proto.gm.UpdateWordListRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.gm.DefaultResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.gm.DefaultResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.gm.WordCheckServiceClient.prototype.updateNickNameBanList = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/gm.WordCheckService/UpdateNickNameBanList',
    request,
    metadata || {},
    methodDescriptor_WordCheckService_UpdateNickNameBanList,
    callback,
  );
};

/**
 * @param {!proto.gm.UpdateWordListRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.gm.DefaultResponse>}
 *     Promise that resolves to the response
 */
proto.gm.WordCheckServicePromiseClient.prototype.updateNickNameBanList =
  function (request, metadata) {
    return this.client_.unaryCall(
      this.hostname_ + '/gm.WordCheckService/UpdateNickNameBanList',
      request,
      metadata || {},
      methodDescriptor_WordCheckService_UpdateNickNameBanList,
    );
  };

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.gm.RemoveWordListRequest,
 *   !proto.gm.DefaultResponse>}
 */
const methodDescriptor_WordCheckService_RemoveNickNameBanList =
  new grpc.web.MethodDescriptor(
    '/gm.WordCheckService/RemoveNickNameBanList',
    grpc.web.MethodType.UNARY,
    proto.gm.RemoveWordListRequest,
    proto.gm.DefaultResponse,
    /**
     * @param {!proto.gm.RemoveWordListRequest} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.gm.DefaultResponse.deserializeBinary,
  );

/**
 * @param {!proto.gm.RemoveWordListRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.gm.DefaultResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.gm.DefaultResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.gm.WordCheckServiceClient.prototype.removeNickNameBanList = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/gm.WordCheckService/RemoveNickNameBanList',
    request,
    metadata || {},
    methodDescriptor_WordCheckService_RemoveNickNameBanList,
    callback,
  );
};

/**
 * @param {!proto.gm.RemoveWordListRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.gm.DefaultResponse>}
 *     Promise that resolves to the response
 */
proto.gm.WordCheckServicePromiseClient.prototype.removeNickNameBanList =
  function (request, metadata) {
    return this.client_.unaryCall(
      this.hostname_ + '/gm.WordCheckService/RemoveNickNameBanList',
      request,
      metadata || {},
      methodDescriptor_WordCheckService_RemoveNickNameBanList,
    );
  };

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.gm.GetWordListRequest,
 *   !proto.gm.GetWordListResponse>}
 */
const methodDescriptor_WordCheckService_GetNickNameAllowList =
  new grpc.web.MethodDescriptor(
    '/gm.WordCheckService/GetNickNameAllowList',
    grpc.web.MethodType.UNARY,
    proto.gm.GetWordListRequest,
    proto.gm.GetWordListResponse,
    /**
     * @param {!proto.gm.GetWordListRequest} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.gm.GetWordListResponse.deserializeBinary,
  );

/**
 * @param {!proto.gm.GetWordListRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.gm.GetWordListResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.gm.GetWordListResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.gm.WordCheckServiceClient.prototype.getNickNameAllowList = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/gm.WordCheckService/GetNickNameAllowList',
    request,
    metadata || {},
    methodDescriptor_WordCheckService_GetNickNameAllowList,
    callback,
  );
};

/**
 * @param {!proto.gm.GetWordListRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.gm.GetWordListResponse>}
 *     Promise that resolves to the response
 */
proto.gm.WordCheckServicePromiseClient.prototype.getNickNameAllowList =
  function (request, metadata) {
    return this.client_.unaryCall(
      this.hostname_ + '/gm.WordCheckService/GetNickNameAllowList',
      request,
      metadata || {},
      methodDescriptor_WordCheckService_GetNickNameAllowList,
    );
  };

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.gm.AddWordListRequest,
 *   !proto.gm.DefaultResponse>}
 */
const methodDescriptor_WordCheckService_AddNickNameAllowList =
  new grpc.web.MethodDescriptor(
    '/gm.WordCheckService/AddNickNameAllowList',
    grpc.web.MethodType.UNARY,
    proto.gm.AddWordListRequest,
    proto.gm.DefaultResponse,
    /**
     * @param {!proto.gm.AddWordListRequest} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.gm.DefaultResponse.deserializeBinary,
  );

/**
 * @param {!proto.gm.AddWordListRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.gm.DefaultResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.gm.DefaultResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.gm.WordCheckServiceClient.prototype.addNickNameAllowList = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/gm.WordCheckService/AddNickNameAllowList',
    request,
    metadata || {},
    methodDescriptor_WordCheckService_AddNickNameAllowList,
    callback,
  );
};

/**
 * @param {!proto.gm.AddWordListRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.gm.DefaultResponse>}
 *     Promise that resolves to the response
 */
proto.gm.WordCheckServicePromiseClient.prototype.addNickNameAllowList =
  function (request, metadata) {
    return this.client_.unaryCall(
      this.hostname_ + '/gm.WordCheckService/AddNickNameAllowList',
      request,
      metadata || {},
      methodDescriptor_WordCheckService_AddNickNameAllowList,
    );
  };

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.gm.UpdateWordListRequest,
 *   !proto.gm.DefaultResponse>}
 */
const methodDescriptor_WordCheckService_UpdateNickNameAllowList =
  new grpc.web.MethodDescriptor(
    '/gm.WordCheckService/UpdateNickNameAllowList',
    grpc.web.MethodType.UNARY,
    proto.gm.UpdateWordListRequest,
    proto.gm.DefaultResponse,
    /**
     * @param {!proto.gm.UpdateWordListRequest} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.gm.DefaultResponse.deserializeBinary,
  );

/**
 * @param {!proto.gm.UpdateWordListRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.gm.DefaultResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.gm.DefaultResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.gm.WordCheckServiceClient.prototype.updateNickNameAllowList = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/gm.WordCheckService/UpdateNickNameAllowList',
    request,
    metadata || {},
    methodDescriptor_WordCheckService_UpdateNickNameAllowList,
    callback,
  );
};

/**
 * @param {!proto.gm.UpdateWordListRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.gm.DefaultResponse>}
 *     Promise that resolves to the response
 */
proto.gm.WordCheckServicePromiseClient.prototype.updateNickNameAllowList =
  function (request, metadata) {
    return this.client_.unaryCall(
      this.hostname_ + '/gm.WordCheckService/UpdateNickNameAllowList',
      request,
      metadata || {},
      methodDescriptor_WordCheckService_UpdateNickNameAllowList,
    );
  };

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.gm.RemoveWordListRequest,
 *   !proto.gm.DefaultResponse>}
 */
const methodDescriptor_WordCheckService_RemoveNickNameAllowList =
  new grpc.web.MethodDescriptor(
    '/gm.WordCheckService/RemoveNickNameAllowList',
    grpc.web.MethodType.UNARY,
    proto.gm.RemoveWordListRequest,
    proto.gm.DefaultResponse,
    /**
     * @param {!proto.gm.RemoveWordListRequest} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.gm.DefaultResponse.deserializeBinary,
  );

/**
 * @param {!proto.gm.RemoveWordListRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.gm.DefaultResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.gm.DefaultResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.gm.WordCheckServiceClient.prototype.removeNickNameAllowList = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/gm.WordCheckService/RemoveNickNameAllowList',
    request,
    metadata || {},
    methodDescriptor_WordCheckService_RemoveNickNameAllowList,
    callback,
  );
};

/**
 * @param {!proto.gm.RemoveWordListRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.gm.DefaultResponse>}
 *     Promise that resolves to the response
 */
proto.gm.WordCheckServicePromiseClient.prototype.removeNickNameAllowList =
  function (request, metadata) {
    return this.client_.unaryCall(
      this.hostname_ + '/gm.WordCheckService/RemoveNickNameAllowList',
      request,
      metadata || {},
      methodDescriptor_WordCheckService_RemoveNickNameAllowList,
    );
  };

module.exports = proto.gm;
