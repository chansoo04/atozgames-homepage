// source: item-common.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
  (typeof globalThis !== 'undefined' && globalThis) ||
  (typeof window !== 'undefined' && window) ||
  (typeof global !== 'undefined' && global) ||
  (typeof self !== 'undefined' && self) ||
  function () {
    return this;
  }.call(null) ||
  Function('return this')();

goog.exportSymbol('proto.item.DefaultIntIdRequest', null, global);
goog.exportSymbol('proto.item.DefaultResponse', null, global);
goog.exportSymbol('proto.item.DefaultStringIdRequest', null, global);
goog.exportSymbol('proto.item.EffectApplyType', null, global);
goog.exportSymbol('proto.item.EmptyRequest', null, global);
goog.exportSymbol('proto.item.EmptyResponse', null, global);
goog.exportSymbol('proto.item.InAppPrice', null, global);
goog.exportSymbol('proto.item.InAppReceipt', null, global);
goog.exportSymbol('proto.item.Inventory', null, global);
goog.exportSymbol('proto.item.Item', null, global);
goog.exportSymbol('proto.item.ItemPack', null, global);
goog.exportSymbol('proto.item.ItemPackElement', null, global);
goog.exportSymbol('proto.item.ItemType', null, global);
goog.exportSymbol('proto.item.PostBox', null, global);
goog.exportSymbol('proto.item.PostBoxState', null, global);
goog.exportSymbol('proto.item.PostType', null, global);
goog.exportSymbol('proto.item.PurchaseReceipt', null, global);
goog.exportSymbol('proto.item.SellingState', null, global);
goog.exportSymbol('proto.item.TransactionType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.ItemType = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.item.ItemType, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.item.ItemType.displayName = 'proto.item.ItemType';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.Item = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.item.Item, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.item.Item.displayName = 'proto.item.Item';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.ItemPack = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.item.ItemPack.repeatedFields_,
    null,
  );
};
goog.inherits(proto.item.ItemPack, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.item.ItemPack.displayName = 'proto.item.ItemPack';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.ItemPackElement = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.item.ItemPackElement, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.item.ItemPackElement.displayName = 'proto.item.ItemPackElement';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.InAppPrice = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.item.InAppPrice, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.item.InAppPrice.displayName = 'proto.item.InAppPrice';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.InAppReceipt = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.item.InAppReceipt, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.item.InAppReceipt.displayName = 'proto.item.InAppReceipt';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.PurchaseReceipt = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.item.PurchaseReceipt, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.item.PurchaseReceipt.displayName = 'proto.item.PurchaseReceipt';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.PostBox = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.item.PostBox, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.item.PostBox.displayName = 'proto.item.PostBox';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.Inventory = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.item.Inventory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.item.Inventory.displayName = 'proto.item.Inventory';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.DefaultStringIdRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.item.DefaultStringIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.item.DefaultStringIdRequest.displayName =
    'proto.item.DefaultStringIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.DefaultIntIdRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.item.DefaultIntIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.item.DefaultIntIdRequest.displayName = 'proto.item.DefaultIntIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.DefaultResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.item.DefaultResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.item.DefaultResponse.displayName = 'proto.item.DefaultResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.EmptyRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.item.EmptyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.item.EmptyRequest.displayName = 'proto.item.EmptyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.EmptyResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.item.EmptyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.item.EmptyResponse.displayName = 'proto.item.EmptyResponse';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.item.ItemType.prototype.toObject = function (opt_includeInstance) {
    return proto.item.ItemType.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.item.ItemType} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.item.ItemType.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        itemTypeId: jspb.Message.getFieldWithDefault(msg, 1, ''),
        name: jspb.Message.getFieldWithDefault(msg, 2, ''),
        description: jspb.Message.getFieldWithDefault(msg, 3, ''),
        image: jspb.Message.getFieldWithDefault(msg, 4, ''),
        metadata: jspb.Message.getFieldWithDefault(msg, 5, ''),
        createdAt: jspb.Message.getFieldWithDefault(msg, 6, ''),
        updatedAt: jspb.Message.getFieldWithDefault(msg, 7, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.ItemType}
 */
proto.item.ItemType.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.ItemType();
  return proto.item.ItemType.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.ItemType} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.ItemType}
 */
proto.item.ItemType.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setItemTypeId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setDescription(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setImage(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setMetadata(value);
        break;
      case 6:
        var value = /** @type {string} */ (reader.readString());
        msg.setCreatedAt(value);
        break;
      case 7:
        var value = /** @type {string} */ (reader.readString());
        msg.setUpdatedAt(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.ItemType.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.item.ItemType.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.ItemType} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.ItemType.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getItemTypeId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getImage();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getMetadata();
  if (f.length > 0) {
    writer.writeString(5, f);
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(6, f);
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(7, f);
  }
};

/**
 * optional string item_type_id = 1;
 * @return {string}
 */
proto.item.ItemType.prototype.getItemTypeId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemType} returns this
 */
proto.item.ItemType.prototype.setItemTypeId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string name = 2;
 * @return {string}
 */
proto.item.ItemType.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemType} returns this
 */
proto.item.ItemType.prototype.setName = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string description = 3;
 * @return {string}
 */
proto.item.ItemType.prototype.getDescription = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemType} returns this
 */
proto.item.ItemType.prototype.setDescription = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string image = 4;
 * @return {string}
 */
proto.item.ItemType.prototype.getImage = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemType} returns this
 */
proto.item.ItemType.prototype.setImage = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional string metadata = 5;
 * @return {string}
 */
proto.item.ItemType.prototype.getMetadata = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemType} returns this
 */
proto.item.ItemType.prototype.setMetadata = function (value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * optional string created_at = 6;
 * @return {string}
 */
proto.item.ItemType.prototype.getCreatedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemType} returns this
 */
proto.item.ItemType.prototype.setCreatedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};

/**
 * optional string updated_at = 7;
 * @return {string}
 */
proto.item.ItemType.prototype.getUpdatedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemType} returns this
 */
proto.item.ItemType.prototype.setUpdatedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.item.Item.prototype.toObject = function (opt_includeInstance) {
    return proto.item.Item.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.item.Item} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.item.Item.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        itemId: jspb.Message.getFieldWithDefault(msg, 1, ''),
        itemTypeId: jspb.Message.getFieldWithDefault(msg, 2, ''),
        name: jspb.Message.getFieldWithDefault(msg, 3, ''),
        description: jspb.Message.getFieldWithDefault(msg, 4, ''),
        imageUrl: jspb.Message.getFieldWithDefault(msg, 5, ''),
        metadata: jspb.Message.getFieldWithDefault(msg, 6, ''),
        price: jspb.Message.getFieldWithDefault(msg, 7, ''),
        currency: jspb.Message.getFieldWithDefault(msg, 8, ''),
        effectDuration: jspb.Message.getFieldWithDefault(msg, 9, 0),
        effectApplyType: jspb.Message.getFieldWithDefault(msg, 10, 0),
        acquireLimitByDay: jspb.Message.getFieldWithDefault(msg, 11, 0),
        acquireLimitByWeek: jspb.Message.getFieldWithDefault(msg, 12, 0),
        acquireLimitByMonth: jspb.Message.getFieldWithDefault(msg, 13, 0),
        useLimitByDay: jspb.Message.getFieldWithDefault(msg, 14, 0),
        useLimitByWeek: jspb.Message.getFieldWithDefault(msg, 15, 0),
        useLimitByMonth: jspb.Message.getFieldWithDefault(msg, 16, 0),
        isConsumable: jspb.Message.getBooleanFieldWithDefault(msg, 17, false),
        isActive: jspb.Message.getBooleanFieldWithDefault(msg, 18, false),
        createdAt: jspb.Message.getFieldWithDefault(msg, 19, ''),
        updatedAt: jspb.Message.getFieldWithDefault(msg, 20, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.Item}
 */
proto.item.Item.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.Item();
  return proto.item.Item.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.Item} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.Item}
 */
proto.item.Item.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setItemId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setItemTypeId(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setDescription(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setImageUrl(value);
        break;
      case 6:
        var value = /** @type {string} */ (reader.readString());
        msg.setMetadata(value);
        break;
      case 7:
        var value = /** @type {string} */ (reader.readString());
        msg.setPrice(value);
        break;
      case 8:
        var value = /** @type {string} */ (reader.readString());
        msg.setCurrency(value);
        break;
      case 9:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setEffectDuration(value);
        break;
      case 10:
        var value = /** @type {!proto.item.EffectApplyType} */ (
          reader.readEnum()
        );
        msg.setEffectApplyType(value);
        break;
      case 11:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setAcquireLimitByDay(value);
        break;
      case 12:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setAcquireLimitByWeek(value);
        break;
      case 13:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setAcquireLimitByMonth(value);
        break;
      case 14:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setUseLimitByDay(value);
        break;
      case 15:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setUseLimitByWeek(value);
        break;
      case 16:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setUseLimitByMonth(value);
        break;
      case 17:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsConsumable(value);
        break;
      case 18:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsActive(value);
        break;
      case 19:
        var value = /** @type {string} */ (reader.readString());
        msg.setCreatedAt(value);
        break;
      case 20:
        var value = /** @type {string} */ (reader.readString());
        msg.setUpdatedAt(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.Item.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.item.Item.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.Item} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.Item.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getItemId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getItemTypeId();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getImageUrl();
  if (f.length > 0) {
    writer.writeString(5, f);
  }
  f = message.getMetadata();
  if (f.length > 0) {
    writer.writeString(6, f);
  }
  f = message.getPrice();
  if (f.length > 0) {
    writer.writeString(7, f);
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(8, f);
  }
  f = message.getEffectDuration();
  if (f !== 0) {
    writer.writeInt32(9, f);
  }
  f = message.getEffectApplyType();
  if (f !== 0.0) {
    writer.writeEnum(10, f);
  }
  f = message.getAcquireLimitByDay();
  if (f !== 0) {
    writer.writeInt32(11, f);
  }
  f = message.getAcquireLimitByWeek();
  if (f !== 0) {
    writer.writeInt32(12, f);
  }
  f = message.getAcquireLimitByMonth();
  if (f !== 0) {
    writer.writeInt32(13, f);
  }
  f = message.getUseLimitByDay();
  if (f !== 0) {
    writer.writeInt32(14, f);
  }
  f = message.getUseLimitByWeek();
  if (f !== 0) {
    writer.writeInt32(15, f);
  }
  f = message.getUseLimitByMonth();
  if (f !== 0) {
    writer.writeInt32(16, f);
  }
  f = message.getIsConsumable();
  if (f) {
    writer.writeBool(17, f);
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(18, f);
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(19, f);
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(20, f);
  }
};

/**
 * optional string item_id = 1;
 * @return {string}
 */
proto.item.Item.prototype.getItemId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.Item} returns this
 */
proto.item.Item.prototype.setItemId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string item_type_id = 2;
 * @return {string}
 */
proto.item.Item.prototype.getItemTypeId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.Item} returns this
 */
proto.item.Item.prototype.setItemTypeId = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string name = 3;
 * @return {string}
 */
proto.item.Item.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.Item} returns this
 */
proto.item.Item.prototype.setName = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string description = 4;
 * @return {string}
 */
proto.item.Item.prototype.getDescription = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.Item} returns this
 */
proto.item.Item.prototype.setDescription = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional string image_url = 5;
 * @return {string}
 */
proto.item.Item.prototype.getImageUrl = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.Item} returns this
 */
proto.item.Item.prototype.setImageUrl = function (value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * optional string metadata = 6;
 * @return {string}
 */
proto.item.Item.prototype.getMetadata = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.Item} returns this
 */
proto.item.Item.prototype.setMetadata = function (value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};

/**
 * optional string price = 7;
 * @return {string}
 */
proto.item.Item.prototype.getPrice = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.Item} returns this
 */
proto.item.Item.prototype.setPrice = function (value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};

/**
 * optional string currency = 8;
 * @return {string}
 */
proto.item.Item.prototype.getCurrency = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.Item} returns this
 */
proto.item.Item.prototype.setCurrency = function (value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};

/**
 * optional int32 effect_duration = 9;
 * @return {number}
 */
proto.item.Item.prototype.getEffectDuration = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.Item} returns this
 */
proto.item.Item.prototype.setEffectDuration = function (value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};

/**
 * optional EffectApplyType effect_apply_type = 10;
 * @return {!proto.item.EffectApplyType}
 */
proto.item.Item.prototype.getEffectApplyType = function () {
  return /** @type {!proto.item.EffectApplyType} */ (
    jspb.Message.getFieldWithDefault(this, 10, 0)
  );
};

/**
 * @param {!proto.item.EffectApplyType} value
 * @return {!proto.item.Item} returns this
 */
proto.item.Item.prototype.setEffectApplyType = function (value) {
  return jspb.Message.setProto3EnumField(this, 10, value);
};

/**
 * optional int32 acquire_limit_by_day = 11;
 * @return {number}
 */
proto.item.Item.prototype.getAcquireLimitByDay = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.Item} returns this
 */
proto.item.Item.prototype.setAcquireLimitByDay = function (value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};

/**
 * optional int32 acquire_limit_by_week = 12;
 * @return {number}
 */
proto.item.Item.prototype.getAcquireLimitByWeek = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.Item} returns this
 */
proto.item.Item.prototype.setAcquireLimitByWeek = function (value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};

/**
 * optional int32 acquire_limit_by_month = 13;
 * @return {number}
 */
proto.item.Item.prototype.getAcquireLimitByMonth = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.Item} returns this
 */
proto.item.Item.prototype.setAcquireLimitByMonth = function (value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};

/**
 * optional int32 use_limit_by_day = 14;
 * @return {number}
 */
proto.item.Item.prototype.getUseLimitByDay = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.Item} returns this
 */
proto.item.Item.prototype.setUseLimitByDay = function (value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};

/**
 * optional int32 use_limit_by_week = 15;
 * @return {number}
 */
proto.item.Item.prototype.getUseLimitByWeek = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.Item} returns this
 */
proto.item.Item.prototype.setUseLimitByWeek = function (value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};

/**
 * optional int32 use_limit_by_month = 16;
 * @return {number}
 */
proto.item.Item.prototype.getUseLimitByMonth = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.Item} returns this
 */
proto.item.Item.prototype.setUseLimitByMonth = function (value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};

/**
 * optional bool is_consumable = 17;
 * @return {boolean}
 */
proto.item.Item.prototype.getIsConsumable = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 17, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.item.Item} returns this
 */
proto.item.Item.prototype.setIsConsumable = function (value) {
  return jspb.Message.setProto3BooleanField(this, 17, value);
};

/**
 * optional bool is_active = 18;
 * @return {boolean}
 */
proto.item.Item.prototype.getIsActive = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 18, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.item.Item} returns this
 */
proto.item.Item.prototype.setIsActive = function (value) {
  return jspb.Message.setProto3BooleanField(this, 18, value);
};

/**
 * optional string created_at = 19;
 * @return {string}
 */
proto.item.Item.prototype.getCreatedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.Item} returns this
 */
proto.item.Item.prototype.setCreatedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};

/**
 * optional string updated_at = 20;
 * @return {string}
 */
proto.item.Item.prototype.getUpdatedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.Item} returns this
 */
proto.item.Item.prototype.setUpdatedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.item.ItemPack.repeatedFields_ = [22];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.item.ItemPack.prototype.toObject = function (opt_includeInstance) {
    return proto.item.ItemPack.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.item.ItemPack} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.item.ItemPack.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        itemPackId: jspb.Message.getFieldWithDefault(msg, 1, ''),
        name: jspb.Message.getFieldWithDefault(msg, 2, ''),
        description: jspb.Message.getFieldWithDefault(msg, 3, ''),
        imageUrl: jspb.Message.getFieldWithDefault(msg, 4, ''),
        metadata: jspb.Message.getFieldWithDefault(msg, 5, ''),
        inAppPriceId: jspb.Message.getFieldWithDefault(msg, 6, 0),
        currency: jspb.Message.getFieldWithDefault(msg, 7, ''),
        price: jspb.Message.getFieldWithDefault(msg, 8, ''),
        totalPrice: jspb.Message.getFieldWithDefault(msg, 9, ''),
        discount: jspb.Message.getFieldWithDefault(msg, 10, 0),
        gainPercent: jspb.Message.getFieldWithDefault(msg, 11, 0),
        sellingState: jspb.Message.getFieldWithDefault(msg, 12, 0),
        sellingStartAt: jspb.Message.getFieldWithDefault(msg, 13, ''),
        sellingDuration: jspb.Message.getFieldWithDefault(msg, 14, 0),
        sellingEndAt: jspb.Message.getFieldWithDefault(msg, 15, ''),
        buyLimitByDay: jspb.Message.getFieldWithDefault(msg, 16, 0),
        buyLimitByWeek: jspb.Message.getFieldWithDefault(msg, 17, 0),
        buyLimitByMonth: jspb.Message.getFieldWithDefault(msg, 18, 0),
        isRefundable: jspb.Message.getBooleanFieldWithDefault(msg, 19, false),
        isActive: jspb.Message.getBooleanFieldWithDefault(msg, 20, false),
        createdAt: jspb.Message.getFieldWithDefault(msg, 21, ''),
        elementsList: jspb.Message.toObjectList(
          msg.getElementsList(),
          proto.item.ItemPackElement.toObject,
          includeInstance,
        ),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.ItemPack}
 */
proto.item.ItemPack.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.ItemPack();
  return proto.item.ItemPack.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.ItemPack} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.ItemPack}
 */
proto.item.ItemPack.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setItemPackId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setDescription(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setImageUrl(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setMetadata(value);
        break;
      case 6:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setInAppPriceId(value);
        break;
      case 7:
        var value = /** @type {string} */ (reader.readString());
        msg.setCurrency(value);
        break;
      case 8:
        var value = /** @type {string} */ (reader.readString());
        msg.setPrice(value);
        break;
      case 9:
        var value = /** @type {string} */ (reader.readString());
        msg.setTotalPrice(value);
        break;
      case 10:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setDiscount(value);
        break;
      case 11:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setGainPercent(value);
        break;
      case 12:
        var value = /** @type {!proto.item.SellingState} */ (reader.readEnum());
        msg.setSellingState(value);
        break;
      case 13:
        var value = /** @type {string} */ (reader.readString());
        msg.setSellingStartAt(value);
        break;
      case 14:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setSellingDuration(value);
        break;
      case 15:
        var value = /** @type {string} */ (reader.readString());
        msg.setSellingEndAt(value);
        break;
      case 16:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setBuyLimitByDay(value);
        break;
      case 17:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setBuyLimitByWeek(value);
        break;
      case 18:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setBuyLimitByMonth(value);
        break;
      case 19:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsRefundable(value);
        break;
      case 20:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsActive(value);
        break;
      case 21:
        var value = /** @type {string} */ (reader.readString());
        msg.setCreatedAt(value);
        break;
      case 22:
        var value = new proto.item.ItemPackElement();
        reader.readMessage(
          value,
          proto.item.ItemPackElement.deserializeBinaryFromReader,
        );
        msg.addElements(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.ItemPack.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.item.ItemPack.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.ItemPack} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.ItemPack.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getItemPackId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getImageUrl();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getMetadata();
  if (f.length > 0) {
    writer.writeString(5, f);
  }
  f = message.getInAppPriceId();
  if (f !== 0) {
    writer.writeInt32(6, f);
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(7, f);
  }
  f = message.getPrice();
  if (f.length > 0) {
    writer.writeString(8, f);
  }
  f = message.getTotalPrice();
  if (f.length > 0) {
    writer.writeString(9, f);
  }
  f = message.getDiscount();
  if (f !== 0) {
    writer.writeInt32(10, f);
  }
  f = message.getGainPercent();
  if (f !== 0) {
    writer.writeInt32(11, f);
  }
  f = message.getSellingState();
  if (f !== 0.0) {
    writer.writeEnum(12, f);
  }
  f = message.getSellingStartAt();
  if (f.length > 0) {
    writer.writeString(13, f);
  }
  f = message.getSellingDuration();
  if (f !== 0) {
    writer.writeInt32(14, f);
  }
  f = message.getSellingEndAt();
  if (f.length > 0) {
    writer.writeString(15, f);
  }
  f = message.getBuyLimitByDay();
  if (f !== 0) {
    writer.writeInt32(16, f);
  }
  f = message.getBuyLimitByWeek();
  if (f !== 0) {
    writer.writeInt32(17, f);
  }
  f = message.getBuyLimitByMonth();
  if (f !== 0) {
    writer.writeInt32(18, f);
  }
  f = message.getIsRefundable();
  if (f) {
    writer.writeBool(19, f);
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(20, f);
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(21, f);
  }
  f = message.getElementsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      22,
      f,
      proto.item.ItemPackElement.serializeBinaryToWriter,
    );
  }
};

/**
 * optional string item_pack_id = 1;
 * @return {string}
 */
proto.item.ItemPack.prototype.getItemPackId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemPack} returns this
 */
proto.item.ItemPack.prototype.setItemPackId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string name = 2;
 * @return {string}
 */
proto.item.ItemPack.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemPack} returns this
 */
proto.item.ItemPack.prototype.setName = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string description = 3;
 * @return {string}
 */
proto.item.ItemPack.prototype.getDescription = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemPack} returns this
 */
proto.item.ItemPack.prototype.setDescription = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string image_url = 4;
 * @return {string}
 */
proto.item.ItemPack.prototype.getImageUrl = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemPack} returns this
 */
proto.item.ItemPack.prototype.setImageUrl = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional string metadata = 5;
 * @return {string}
 */
proto.item.ItemPack.prototype.getMetadata = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemPack} returns this
 */
proto.item.ItemPack.prototype.setMetadata = function (value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * optional int32 in_app_price_id = 6;
 * @return {number}
 */
proto.item.ItemPack.prototype.getInAppPriceId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.ItemPack} returns this
 */
proto.item.ItemPack.prototype.setInAppPriceId = function (value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};

/**
 * optional string currency = 7;
 * @return {string}
 */
proto.item.ItemPack.prototype.getCurrency = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemPack} returns this
 */
proto.item.ItemPack.prototype.setCurrency = function (value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};

/**
 * optional string price = 8;
 * @return {string}
 */
proto.item.ItemPack.prototype.getPrice = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemPack} returns this
 */
proto.item.ItemPack.prototype.setPrice = function (value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};

/**
 * optional string total_price = 9;
 * @return {string}
 */
proto.item.ItemPack.prototype.getTotalPrice = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemPack} returns this
 */
proto.item.ItemPack.prototype.setTotalPrice = function (value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};

/**
 * optional int32 discount = 10;
 * @return {number}
 */
proto.item.ItemPack.prototype.getDiscount = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.ItemPack} returns this
 */
proto.item.ItemPack.prototype.setDiscount = function (value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};

/**
 * optional int32 gain_percent = 11;
 * @return {number}
 */
proto.item.ItemPack.prototype.getGainPercent = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.ItemPack} returns this
 */
proto.item.ItemPack.prototype.setGainPercent = function (value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};

/**
 * optional SellingState selling_state = 12;
 * @return {!proto.item.SellingState}
 */
proto.item.ItemPack.prototype.getSellingState = function () {
  return /** @type {!proto.item.SellingState} */ (
    jspb.Message.getFieldWithDefault(this, 12, 0)
  );
};

/**
 * @param {!proto.item.SellingState} value
 * @return {!proto.item.ItemPack} returns this
 */
proto.item.ItemPack.prototype.setSellingState = function (value) {
  return jspb.Message.setProto3EnumField(this, 12, value);
};

/**
 * optional string selling_start_at = 13;
 * @return {string}
 */
proto.item.ItemPack.prototype.getSellingStartAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemPack} returns this
 */
proto.item.ItemPack.prototype.setSellingStartAt = function (value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};

/**
 * optional int32 selling_duration = 14;
 * @return {number}
 */
proto.item.ItemPack.prototype.getSellingDuration = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.ItemPack} returns this
 */
proto.item.ItemPack.prototype.setSellingDuration = function (value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};

/**
 * optional string selling_end_at = 15;
 * @return {string}
 */
proto.item.ItemPack.prototype.getSellingEndAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemPack} returns this
 */
proto.item.ItemPack.prototype.setSellingEndAt = function (value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};

/**
 * optional int32 buy_limit_by_day = 16;
 * @return {number}
 */
proto.item.ItemPack.prototype.getBuyLimitByDay = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.ItemPack} returns this
 */
proto.item.ItemPack.prototype.setBuyLimitByDay = function (value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};

/**
 * optional int32 buy_limit_by_week = 17;
 * @return {number}
 */
proto.item.ItemPack.prototype.getBuyLimitByWeek = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.ItemPack} returns this
 */
proto.item.ItemPack.prototype.setBuyLimitByWeek = function (value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};

/**
 * optional int32 buy_limit_by_month = 18;
 * @return {number}
 */
proto.item.ItemPack.prototype.getBuyLimitByMonth = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.ItemPack} returns this
 */
proto.item.ItemPack.prototype.setBuyLimitByMonth = function (value) {
  return jspb.Message.setProto3IntField(this, 18, value);
};

/**
 * optional bool is_refundable = 19;
 * @return {boolean}
 */
proto.item.ItemPack.prototype.getIsRefundable = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 19, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.item.ItemPack} returns this
 */
proto.item.ItemPack.prototype.setIsRefundable = function (value) {
  return jspb.Message.setProto3BooleanField(this, 19, value);
};

/**
 * optional bool is_active = 20;
 * @return {boolean}
 */
proto.item.ItemPack.prototype.getIsActive = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 20, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.item.ItemPack} returns this
 */
proto.item.ItemPack.prototype.setIsActive = function (value) {
  return jspb.Message.setProto3BooleanField(this, 20, value);
};

/**
 * optional string created_at = 21;
 * @return {string}
 */
proto.item.ItemPack.prototype.getCreatedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemPack} returns this
 */
proto.item.ItemPack.prototype.setCreatedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};

/**
 * repeated ItemPackElement elements = 22;
 * @return {!Array<!proto.item.ItemPackElement>}
 */
proto.item.ItemPack.prototype.getElementsList = function () {
  return /** @type{!Array<!proto.item.ItemPackElement>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.item.ItemPackElement, 22)
  );
};

/**
 * @param {!Array<!proto.item.ItemPackElement>} value
 * @return {!proto.item.ItemPack} returns this
 */
proto.item.ItemPack.prototype.setElementsList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 22, value);
};

/**
 * @param {!proto.item.ItemPackElement=} opt_value
 * @param {number=} opt_index
 * @return {!proto.item.ItemPackElement}
 */
proto.item.ItemPack.prototype.addElements = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    22,
    opt_value,
    proto.item.ItemPackElement,
    opt_index,
  );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.item.ItemPack} returns this
 */
proto.item.ItemPack.prototype.clearElementsList = function () {
  return this.setElementsList([]);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.item.ItemPackElement.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.item.ItemPackElement.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.item.ItemPackElement} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.item.ItemPackElement.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        itemPackElementId: jspb.Message.getFieldWithDefault(msg, 1, 0),
        itemPackId: jspb.Message.getFieldWithDefault(msg, 2, ''),
        childPackId: jspb.Message.getFieldWithDefault(msg, 3, ''),
        itemId: jspb.Message.getFieldWithDefault(msg, 4, ''),
        amount: jspb.Message.getFieldWithDefault(msg, 5, ''),
        order: jspb.Message.getFieldWithDefault(msg, 6, 0),
        createdAt: jspb.Message.getFieldWithDefault(msg, 7, ''),
        updatedAt: jspb.Message.getFieldWithDefault(msg, 8, ''),
        item:
          (f = msg.getItem()) && proto.item.Item.toObject(includeInstance, f),
        childPack:
          (f = msg.getChildPack()) &&
          proto.item.ItemPack.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.ItemPackElement}
 */
proto.item.ItemPackElement.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.ItemPackElement();
  return proto.item.ItemPackElement.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.ItemPackElement} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.ItemPackElement}
 */
proto.item.ItemPackElement.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setItemPackElementId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setItemPackId(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setChildPackId(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setItemId(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setAmount(value);
        break;
      case 6:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setOrder(value);
        break;
      case 7:
        var value = /** @type {string} */ (reader.readString());
        msg.setCreatedAt(value);
        break;
      case 8:
        var value = /** @type {string} */ (reader.readString());
        msg.setUpdatedAt(value);
        break;
      case 9:
        var value = new proto.item.Item();
        reader.readMessage(value, proto.item.Item.deserializeBinaryFromReader);
        msg.setItem(value);
        break;
      case 10:
        var value = new proto.item.ItemPack();
        reader.readMessage(
          value,
          proto.item.ItemPack.deserializeBinaryFromReader,
        );
        msg.setChildPack(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.ItemPackElement.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.item.ItemPackElement.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.ItemPackElement} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.ItemPackElement.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getItemPackElementId();
  if (f !== 0) {
    writer.writeInt32(1, f);
  }
  f = message.getItemPackId();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getChildPackId();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getItemId();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getAmount();
  if (f.length > 0) {
    writer.writeString(5, f);
  }
  f = message.getOrder();
  if (f !== 0) {
    writer.writeInt32(6, f);
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(7, f);
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(8, f);
  }
  f = message.getItem();
  if (f != null) {
    writer.writeMessage(9, f, proto.item.Item.serializeBinaryToWriter);
  }
  f = message.getChildPack();
  if (f != null) {
    writer.writeMessage(10, f, proto.item.ItemPack.serializeBinaryToWriter);
  }
};

/**
 * optional int32 item_pack_element_id = 1;
 * @return {number}
 */
proto.item.ItemPackElement.prototype.getItemPackElementId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.ItemPackElement} returns this
 */
proto.item.ItemPackElement.prototype.setItemPackElementId = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional string item_pack_id = 2;
 * @return {string}
 */
proto.item.ItemPackElement.prototype.getItemPackId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemPackElement} returns this
 */
proto.item.ItemPackElement.prototype.setItemPackId = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string child_pack_id = 3;
 * @return {string}
 */
proto.item.ItemPackElement.prototype.getChildPackId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemPackElement} returns this
 */
proto.item.ItemPackElement.prototype.setChildPackId = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string item_id = 4;
 * @return {string}
 */
proto.item.ItemPackElement.prototype.getItemId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemPackElement} returns this
 */
proto.item.ItemPackElement.prototype.setItemId = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional string amount = 5;
 * @return {string}
 */
proto.item.ItemPackElement.prototype.getAmount = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemPackElement} returns this
 */
proto.item.ItemPackElement.prototype.setAmount = function (value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * optional int32 order = 6;
 * @return {number}
 */
proto.item.ItemPackElement.prototype.getOrder = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.ItemPackElement} returns this
 */
proto.item.ItemPackElement.prototype.setOrder = function (value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};

/**
 * optional string created_at = 7;
 * @return {string}
 */
proto.item.ItemPackElement.prototype.getCreatedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemPackElement} returns this
 */
proto.item.ItemPackElement.prototype.setCreatedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};

/**
 * optional string updated_at = 8;
 * @return {string}
 */
proto.item.ItemPackElement.prototype.getUpdatedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemPackElement} returns this
 */
proto.item.ItemPackElement.prototype.setUpdatedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};

/**
 * optional Item item = 9;
 * @return {?proto.item.Item}
 */
proto.item.ItemPackElement.prototype.getItem = function () {
  return /** @type{?proto.item.Item} */ (
    jspb.Message.getWrapperField(this, proto.item.Item, 9)
  );
};

/**
 * @param {?proto.item.Item|undefined} value
 * @return {!proto.item.ItemPackElement} returns this
 */
proto.item.ItemPackElement.prototype.setItem = function (value) {
  return jspb.Message.setWrapperField(this, 9, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.item.ItemPackElement} returns this
 */
proto.item.ItemPackElement.prototype.clearItem = function () {
  return this.setItem(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.item.ItemPackElement.prototype.hasItem = function () {
  return jspb.Message.getField(this, 9) != null;
};

/**
 * optional ItemPack child_pack = 10;
 * @return {?proto.item.ItemPack}
 */
proto.item.ItemPackElement.prototype.getChildPack = function () {
  return /** @type{?proto.item.ItemPack} */ (
    jspb.Message.getWrapperField(this, proto.item.ItemPack, 10)
  );
};

/**
 * @param {?proto.item.ItemPack|undefined} value
 * @return {!proto.item.ItemPackElement} returns this
 */
proto.item.ItemPackElement.prototype.setChildPack = function (value) {
  return jspb.Message.setWrapperField(this, 10, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.item.ItemPackElement} returns this
 */
proto.item.ItemPackElement.prototype.clearChildPack = function () {
  return this.setChildPack(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.item.ItemPackElement.prototype.hasChildPack = function () {
  return jspb.Message.getField(this, 10) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.item.InAppPrice.prototype.toObject = function (opt_includeInstance) {
    return proto.item.InAppPrice.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.item.InAppPrice} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.item.InAppPrice.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        inAppPriceId: jspb.Message.getFieldWithDefault(msg, 1, 0),
        platform: jspb.Message.getFieldWithDefault(msg, 2, ''),
        name: jspb.Message.getFieldWithDefault(msg, 3, ''),
        description: jspb.Message.getFieldWithDefault(msg, 4, ''),
        currency: jspb.Message.getFieldWithDefault(msg, 5, ''),
        price: jspb.Message.getFieldWithDefault(msg, 6, 0),
        isActive: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
        createdAt: jspb.Message.getFieldWithDefault(msg, 8, ''),
        updatedAt: jspb.Message.getFieldWithDefault(msg, 9, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.InAppPrice}
 */
proto.item.InAppPrice.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.InAppPrice();
  return proto.item.InAppPrice.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.InAppPrice} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.InAppPrice}
 */
proto.item.InAppPrice.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setInAppPriceId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setPlatform(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setDescription(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setCurrency(value);
        break;
      case 6:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setPrice(value);
        break;
      case 7:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsActive(value);
        break;
      case 8:
        var value = /** @type {string} */ (reader.readString());
        msg.setCreatedAt(value);
        break;
      case 9:
        var value = /** @type {string} */ (reader.readString());
        msg.setUpdatedAt(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.InAppPrice.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.item.InAppPrice.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.InAppPrice} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.InAppPrice.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getInAppPriceId();
  if (f !== 0) {
    writer.writeInt32(1, f);
  }
  f = message.getPlatform();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(5, f);
  }
  f = message.getPrice();
  if (f !== 0) {
    writer.writeInt32(6, f);
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(7, f);
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(8, f);
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(9, f);
  }
};

/**
 * optional int32 in_app_price_id = 1;
 * @return {number}
 */
proto.item.InAppPrice.prototype.getInAppPriceId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.InAppPrice} returns this
 */
proto.item.InAppPrice.prototype.setInAppPriceId = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional string platform = 2;
 * @return {string}
 */
proto.item.InAppPrice.prototype.getPlatform = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.InAppPrice} returns this
 */
proto.item.InAppPrice.prototype.setPlatform = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string name = 3;
 * @return {string}
 */
proto.item.InAppPrice.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.InAppPrice} returns this
 */
proto.item.InAppPrice.prototype.setName = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string description = 4;
 * @return {string}
 */
proto.item.InAppPrice.prototype.getDescription = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.InAppPrice} returns this
 */
proto.item.InAppPrice.prototype.setDescription = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional string currency = 5;
 * @return {string}
 */
proto.item.InAppPrice.prototype.getCurrency = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.InAppPrice} returns this
 */
proto.item.InAppPrice.prototype.setCurrency = function (value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * optional int32 price = 6;
 * @return {number}
 */
proto.item.InAppPrice.prototype.getPrice = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.InAppPrice} returns this
 */
proto.item.InAppPrice.prototype.setPrice = function (value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};

/**
 * optional bool is_active = 7;
 * @return {boolean}
 */
proto.item.InAppPrice.prototype.getIsActive = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 7, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.item.InAppPrice} returns this
 */
proto.item.InAppPrice.prototype.setIsActive = function (value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};

/**
 * optional string created_at = 8;
 * @return {string}
 */
proto.item.InAppPrice.prototype.getCreatedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.InAppPrice} returns this
 */
proto.item.InAppPrice.prototype.setCreatedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};

/**
 * optional string updated_at = 9;
 * @return {string}
 */
proto.item.InAppPrice.prototype.getUpdatedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.InAppPrice} returns this
 */
proto.item.InAppPrice.prototype.setUpdatedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.item.InAppReceipt.prototype.toObject = function (opt_includeInstance) {
    return proto.item.InAppReceipt.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.item.InAppReceipt} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.item.InAppReceipt.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        inAppReceiptId: jspb.Message.getFieldWithDefault(msg, 1, ''),
        userId: jspb.Message.getFieldWithDefault(msg, 2, ''),
        accountId: jspb.Message.getFieldWithDefault(msg, 3, ''),
        platform: jspb.Message.getFieldWithDefault(msg, 4, ''),
        inAppPriceId: jspb.Message.getFieldWithDefault(msg, 5, 0),
        currency: jspb.Message.getFieldWithDefault(msg, 6, ''),
        price: jspb.Message.getFieldWithDefault(msg, 7, ''),
        itemPackId: jspb.Message.getFieldWithDefault(msg, 8, ''),
        rawReceipt: jspb.Message.getFieldWithDefault(msg, 9, ''),
        txGroupId: jspb.Message.getFieldWithDefault(msg, 10, ''),
        isCompleted: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
        purchasedAt: jspb.Message.getFieldWithDefault(msg, 12, ''),
        isCanceled: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
        canceledAt: jspb.Message.getFieldWithDefault(msg, 14, ''),
        canceledReason: jspb.Message.getFieldWithDefault(msg, 15, ''),
        isRefunded: jspb.Message.getBooleanFieldWithDefault(msg, 16, false),
        refundedAt: jspb.Message.getFieldWithDefault(msg, 17, ''),
        refundedReason: jspb.Message.getFieldWithDefault(msg, 18, ''),
        createdAt: jspb.Message.getFieldWithDefault(msg, 19, ''),
        updatedAt: jspb.Message.getFieldWithDefault(msg, 20, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.InAppReceipt}
 */
proto.item.InAppReceipt.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.InAppReceipt();
  return proto.item.InAppReceipt.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.InAppReceipt} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.InAppReceipt}
 */
proto.item.InAppReceipt.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setInAppReceiptId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setUserId(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setAccountId(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setPlatform(value);
        break;
      case 5:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setInAppPriceId(value);
        break;
      case 6:
        var value = /** @type {string} */ (reader.readString());
        msg.setCurrency(value);
        break;
      case 7:
        var value = /** @type {string} */ (reader.readString());
        msg.setPrice(value);
        break;
      case 8:
        var value = /** @type {string} */ (reader.readString());
        msg.setItemPackId(value);
        break;
      case 9:
        var value = /** @type {string} */ (reader.readString());
        msg.setRawReceipt(value);
        break;
      case 10:
        var value = /** @type {string} */ (reader.readString());
        msg.setTxGroupId(value);
        break;
      case 11:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsCompleted(value);
        break;
      case 12:
        var value = /** @type {string} */ (reader.readString());
        msg.setPurchasedAt(value);
        break;
      case 13:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsCanceled(value);
        break;
      case 14:
        var value = /** @type {string} */ (reader.readString());
        msg.setCanceledAt(value);
        break;
      case 15:
        var value = /** @type {string} */ (reader.readString());
        msg.setCanceledReason(value);
        break;
      case 16:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsRefunded(value);
        break;
      case 17:
        var value = /** @type {string} */ (reader.readString());
        msg.setRefundedAt(value);
        break;
      case 18:
        var value = /** @type {string} */ (reader.readString());
        msg.setRefundedReason(value);
        break;
      case 19:
        var value = /** @type {string} */ (reader.readString());
        msg.setCreatedAt(value);
        break;
      case 20:
        var value = /** @type {string} */ (reader.readString());
        msg.setUpdatedAt(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.InAppReceipt.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.item.InAppReceipt.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.InAppReceipt} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.InAppReceipt.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getInAppReceiptId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getAccountId();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getPlatform();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getInAppPriceId();
  if (f !== 0) {
    writer.writeInt32(5, f);
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(6, f);
  }
  f = message.getPrice();
  if (f.length > 0) {
    writer.writeString(7, f);
  }
  f = message.getItemPackId();
  if (f.length > 0) {
    writer.writeString(8, f);
  }
  f = message.getRawReceipt();
  if (f.length > 0) {
    writer.writeString(9, f);
  }
  f = message.getTxGroupId();
  if (f.length > 0) {
    writer.writeString(10, f);
  }
  f = message.getIsCompleted();
  if (f) {
    writer.writeBool(11, f);
  }
  f = message.getPurchasedAt();
  if (f.length > 0) {
    writer.writeString(12, f);
  }
  f = message.getIsCanceled();
  if (f) {
    writer.writeBool(13, f);
  }
  f = message.getCanceledAt();
  if (f.length > 0) {
    writer.writeString(14, f);
  }
  f = message.getCanceledReason();
  if (f.length > 0) {
    writer.writeString(15, f);
  }
  f = message.getIsRefunded();
  if (f) {
    writer.writeBool(16, f);
  }
  f = message.getRefundedAt();
  if (f.length > 0) {
    writer.writeString(17, f);
  }
  f = message.getRefundedReason();
  if (f.length > 0) {
    writer.writeString(18, f);
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(19, f);
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(20, f);
  }
};

/**
 * optional string in_app_receipt_id = 1;
 * @return {string}
 */
proto.item.InAppReceipt.prototype.getInAppReceiptId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.InAppReceipt} returns this
 */
proto.item.InAppReceipt.prototype.setInAppReceiptId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.item.InAppReceipt.prototype.getUserId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.InAppReceipt} returns this
 */
proto.item.InAppReceipt.prototype.setUserId = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string account_id = 3;
 * @return {string}
 */
proto.item.InAppReceipt.prototype.getAccountId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.InAppReceipt} returns this
 */
proto.item.InAppReceipt.prototype.setAccountId = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string platform = 4;
 * @return {string}
 */
proto.item.InAppReceipt.prototype.getPlatform = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.InAppReceipt} returns this
 */
proto.item.InAppReceipt.prototype.setPlatform = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional int32 in_app_price_id = 5;
 * @return {number}
 */
proto.item.InAppReceipt.prototype.getInAppPriceId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.InAppReceipt} returns this
 */
proto.item.InAppReceipt.prototype.setInAppPriceId = function (value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};

/**
 * optional string currency = 6;
 * @return {string}
 */
proto.item.InAppReceipt.prototype.getCurrency = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.InAppReceipt} returns this
 */
proto.item.InAppReceipt.prototype.setCurrency = function (value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};

/**
 * optional string price = 7;
 * @return {string}
 */
proto.item.InAppReceipt.prototype.getPrice = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.InAppReceipt} returns this
 */
proto.item.InAppReceipt.prototype.setPrice = function (value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};

/**
 * optional string item_pack_id = 8;
 * @return {string}
 */
proto.item.InAppReceipt.prototype.getItemPackId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.InAppReceipt} returns this
 */
proto.item.InAppReceipt.prototype.setItemPackId = function (value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};

/**
 * optional string raw_receipt = 9;
 * @return {string}
 */
proto.item.InAppReceipt.prototype.getRawReceipt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.InAppReceipt} returns this
 */
proto.item.InAppReceipt.prototype.setRawReceipt = function (value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};

/**
 * optional string tx_group_id = 10;
 * @return {string}
 */
proto.item.InAppReceipt.prototype.getTxGroupId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.InAppReceipt} returns this
 */
proto.item.InAppReceipt.prototype.setTxGroupId = function (value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};

/**
 * optional bool is_completed = 11;
 * @return {boolean}
 */
proto.item.InAppReceipt.prototype.getIsCompleted = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 11, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.item.InAppReceipt} returns this
 */
proto.item.InAppReceipt.prototype.setIsCompleted = function (value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};

/**
 * optional string purchased_at = 12;
 * @return {string}
 */
proto.item.InAppReceipt.prototype.getPurchasedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.InAppReceipt} returns this
 */
proto.item.InAppReceipt.prototype.setPurchasedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};

/**
 * optional bool is_canceled = 13;
 * @return {boolean}
 */
proto.item.InAppReceipt.prototype.getIsCanceled = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 13, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.item.InAppReceipt} returns this
 */
proto.item.InAppReceipt.prototype.setIsCanceled = function (value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};

/**
 * optional string canceled_at = 14;
 * @return {string}
 */
proto.item.InAppReceipt.prototype.getCanceledAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.InAppReceipt} returns this
 */
proto.item.InAppReceipt.prototype.setCanceledAt = function (value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};

/**
 * optional string canceled_reason = 15;
 * @return {string}
 */
proto.item.InAppReceipt.prototype.getCanceledReason = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.InAppReceipt} returns this
 */
proto.item.InAppReceipt.prototype.setCanceledReason = function (value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};

/**
 * optional bool is_refunded = 16;
 * @return {boolean}
 */
proto.item.InAppReceipt.prototype.getIsRefunded = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 16, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.item.InAppReceipt} returns this
 */
proto.item.InAppReceipt.prototype.setIsRefunded = function (value) {
  return jspb.Message.setProto3BooleanField(this, 16, value);
};

/**
 * optional string refunded_at = 17;
 * @return {string}
 */
proto.item.InAppReceipt.prototype.getRefundedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.InAppReceipt} returns this
 */
proto.item.InAppReceipt.prototype.setRefundedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};

/**
 * optional string refunded_reason = 18;
 * @return {string}
 */
proto.item.InAppReceipt.prototype.getRefundedReason = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.InAppReceipt} returns this
 */
proto.item.InAppReceipt.prototype.setRefundedReason = function (value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};

/**
 * optional string created_at = 19;
 * @return {string}
 */
proto.item.InAppReceipt.prototype.getCreatedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.InAppReceipt} returns this
 */
proto.item.InAppReceipt.prototype.setCreatedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};

/**
 * optional string updated_at = 20;
 * @return {string}
 */
proto.item.InAppReceipt.prototype.getUpdatedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.InAppReceipt} returns this
 */
proto.item.InAppReceipt.prototype.setUpdatedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.item.PurchaseReceipt.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.item.PurchaseReceipt.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.item.PurchaseReceipt} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.item.PurchaseReceipt.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        purchaseReceiptId: jspb.Message.getFieldWithDefault(msg, 1, ''),
        userId: jspb.Message.getFieldWithDefault(msg, 2, ''),
        accountId: jspb.Message.getFieldWithDefault(msg, 3, ''),
        platform: jspb.Message.getFieldWithDefault(msg, 4, ''),
        currency: jspb.Message.getFieldWithDefault(msg, 5, ''),
        price: jspb.Message.getFieldWithDefault(msg, 6, 0),
        itemPackId: jspb.Message.getFieldWithDefault(msg, 7, ''),
        txGroupId: jspb.Message.getFieldWithDefault(msg, 8, ''),
        isCompleted: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
        purchasedAt: jspb.Message.getFieldWithDefault(msg, 10, ''),
        isRefunded: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
        refundedAt: jspb.Message.getFieldWithDefault(msg, 12, ''),
        refundedReason: jspb.Message.getFieldWithDefault(msg, 13, ''),
        createdAt: jspb.Message.getFieldWithDefault(msg, 14, ''),
        updatedAt: jspb.Message.getFieldWithDefault(msg, 15, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.PurchaseReceipt}
 */
proto.item.PurchaseReceipt.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.PurchaseReceipt();
  return proto.item.PurchaseReceipt.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.PurchaseReceipt} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.PurchaseReceipt}
 */
proto.item.PurchaseReceipt.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setPurchaseReceiptId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setUserId(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setAccountId(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setPlatform(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setCurrency(value);
        break;
      case 6:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setPrice(value);
        break;
      case 7:
        var value = /** @type {string} */ (reader.readString());
        msg.setItemPackId(value);
        break;
      case 8:
        var value = /** @type {string} */ (reader.readString());
        msg.setTxGroupId(value);
        break;
      case 9:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsCompleted(value);
        break;
      case 10:
        var value = /** @type {string} */ (reader.readString());
        msg.setPurchasedAt(value);
        break;
      case 11:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsRefunded(value);
        break;
      case 12:
        var value = /** @type {string} */ (reader.readString());
        msg.setRefundedAt(value);
        break;
      case 13:
        var value = /** @type {string} */ (reader.readString());
        msg.setRefundedReason(value);
        break;
      case 14:
        var value = /** @type {string} */ (reader.readString());
        msg.setCreatedAt(value);
        break;
      case 15:
        var value = /** @type {string} */ (reader.readString());
        msg.setUpdatedAt(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.PurchaseReceipt.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.item.PurchaseReceipt.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.PurchaseReceipt} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.PurchaseReceipt.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getPurchaseReceiptId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getAccountId();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getPlatform();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(5, f);
  }
  f = message.getPrice();
  if (f !== 0) {
    writer.writeInt32(6, f);
  }
  f = message.getItemPackId();
  if (f.length > 0) {
    writer.writeString(7, f);
  }
  f = message.getTxGroupId();
  if (f.length > 0) {
    writer.writeString(8, f);
  }
  f = message.getIsCompleted();
  if (f) {
    writer.writeBool(9, f);
  }
  f = message.getPurchasedAt();
  if (f.length > 0) {
    writer.writeString(10, f);
  }
  f = message.getIsRefunded();
  if (f) {
    writer.writeBool(11, f);
  }
  f = message.getRefundedAt();
  if (f.length > 0) {
    writer.writeString(12, f);
  }
  f = message.getRefundedReason();
  if (f.length > 0) {
    writer.writeString(13, f);
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(14, f);
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(15, f);
  }
};

/**
 * optional string purchase_receipt_id = 1;
 * @return {string}
 */
proto.item.PurchaseReceipt.prototype.getPurchaseReceiptId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.PurchaseReceipt} returns this
 */
proto.item.PurchaseReceipt.prototype.setPurchaseReceiptId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.item.PurchaseReceipt.prototype.getUserId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.PurchaseReceipt} returns this
 */
proto.item.PurchaseReceipt.prototype.setUserId = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string account_id = 3;
 * @return {string}
 */
proto.item.PurchaseReceipt.prototype.getAccountId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.PurchaseReceipt} returns this
 */
proto.item.PurchaseReceipt.prototype.setAccountId = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string platform = 4;
 * @return {string}
 */
proto.item.PurchaseReceipt.prototype.getPlatform = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.PurchaseReceipt} returns this
 */
proto.item.PurchaseReceipt.prototype.setPlatform = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional string currency = 5;
 * @return {string}
 */
proto.item.PurchaseReceipt.prototype.getCurrency = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.PurchaseReceipt} returns this
 */
proto.item.PurchaseReceipt.prototype.setCurrency = function (value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * optional int32 price = 6;
 * @return {number}
 */
proto.item.PurchaseReceipt.prototype.getPrice = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.PurchaseReceipt} returns this
 */
proto.item.PurchaseReceipt.prototype.setPrice = function (value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};

/**
 * optional string item_pack_id = 7;
 * @return {string}
 */
proto.item.PurchaseReceipt.prototype.getItemPackId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.PurchaseReceipt} returns this
 */
proto.item.PurchaseReceipt.prototype.setItemPackId = function (value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};

/**
 * optional string tx_group_id = 8;
 * @return {string}
 */
proto.item.PurchaseReceipt.prototype.getTxGroupId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.PurchaseReceipt} returns this
 */
proto.item.PurchaseReceipt.prototype.setTxGroupId = function (value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};

/**
 * optional bool is_completed = 9;
 * @return {boolean}
 */
proto.item.PurchaseReceipt.prototype.getIsCompleted = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 9, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.item.PurchaseReceipt} returns this
 */
proto.item.PurchaseReceipt.prototype.setIsCompleted = function (value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};

/**
 * optional string purchased_at = 10;
 * @return {string}
 */
proto.item.PurchaseReceipt.prototype.getPurchasedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.PurchaseReceipt} returns this
 */
proto.item.PurchaseReceipt.prototype.setPurchasedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};

/**
 * optional bool is_refunded = 11;
 * @return {boolean}
 */
proto.item.PurchaseReceipt.prototype.getIsRefunded = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 11, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.item.PurchaseReceipt} returns this
 */
proto.item.PurchaseReceipt.prototype.setIsRefunded = function (value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};

/**
 * optional string refunded_at = 12;
 * @return {string}
 */
proto.item.PurchaseReceipt.prototype.getRefundedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.PurchaseReceipt} returns this
 */
proto.item.PurchaseReceipt.prototype.setRefundedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};

/**
 * optional string refunded_reason = 13;
 * @return {string}
 */
proto.item.PurchaseReceipt.prototype.getRefundedReason = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.PurchaseReceipt} returns this
 */
proto.item.PurchaseReceipt.prototype.setRefundedReason = function (value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};

/**
 * optional string created_at = 14;
 * @return {string}
 */
proto.item.PurchaseReceipt.prototype.getCreatedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.PurchaseReceipt} returns this
 */
proto.item.PurchaseReceipt.prototype.setCreatedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};

/**
 * optional string updated_at = 15;
 * @return {string}
 */
proto.item.PurchaseReceipt.prototype.getUpdatedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.PurchaseReceipt} returns this
 */
proto.item.PurchaseReceipt.prototype.setUpdatedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.item.PostBox.prototype.toObject = function (opt_includeInstance) {
    return proto.item.PostBox.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.item.PostBox} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.item.PostBox.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        postboxId: jspb.Message.getFieldWithDefault(msg, 1, 0),
        accountId: jspb.Message.getFieldWithDefault(msg, 2, ''),
        message: jspb.Message.getFieldWithDefault(msg, 3, ''),
        itemPackId: jspb.Message.getFieldWithDefault(msg, 4, ''),
        itemId: jspb.Message.getFieldWithDefault(msg, 5, ''),
        amount: jspb.Message.getFieldWithDefault(msg, 6, ''),
        cash: jspb.Message.getFieldWithDefault(msg, 7, ''),
        game: jspb.Message.getFieldWithDefault(msg, 8, ''),
        type: jspb.Message.getFieldWithDefault(msg, 9, 0),
        state: jspb.Message.getFieldWithDefault(msg, 10, 0),
        isVisible: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
        limitedAt: jspb.Message.getFieldWithDefault(msg, 12, ''),
        openedAt: jspb.Message.getFieldWithDefault(msg, 13, ''),
        receivedAt: jspb.Message.getFieldWithDefault(msg, 14, ''),
        createdAt: jspb.Message.getFieldWithDefault(msg, 15, ''),
        updatedAt: jspb.Message.getFieldWithDefault(msg, 16, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.PostBox}
 */
proto.item.PostBox.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.PostBox();
  return proto.item.PostBox.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.PostBox} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.PostBox}
 */
proto.item.PostBox.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setPostboxId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setAccountId(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setMessage(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setItemPackId(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setItemId(value);
        break;
      case 6:
        var value = /** @type {string} */ (reader.readString());
        msg.setAmount(value);
        break;
      case 7:
        var value = /** @type {string} */ (reader.readString());
        msg.setCash(value);
        break;
      case 8:
        var value = /** @type {string} */ (reader.readString());
        msg.setGame(value);
        break;
      case 9:
        var value = /** @type {!proto.item.PostType} */ (reader.readEnum());
        msg.setType(value);
        break;
      case 10:
        var value = /** @type {!proto.item.PostBoxState} */ (reader.readEnum());
        msg.setState(value);
        break;
      case 11:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsVisible(value);
        break;
      case 12:
        var value = /** @type {string} */ (reader.readString());
        msg.setLimitedAt(value);
        break;
      case 13:
        var value = /** @type {string} */ (reader.readString());
        msg.setOpenedAt(value);
        break;
      case 14:
        var value = /** @type {string} */ (reader.readString());
        msg.setReceivedAt(value);
        break;
      case 15:
        var value = /** @type {string} */ (reader.readString());
        msg.setCreatedAt(value);
        break;
      case 16:
        var value = /** @type {string} */ (reader.readString());
        msg.setUpdatedAt(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.PostBox.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.item.PostBox.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.PostBox} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.PostBox.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getPostboxId();
  if (f !== 0) {
    writer.writeInt32(1, f);
  }
  f = message.getAccountId();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getItemPackId();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getItemId();
  if (f.length > 0) {
    writer.writeString(5, f);
  }
  f = message.getAmount();
  if (f.length > 0) {
    writer.writeString(6, f);
  }
  f = message.getCash();
  if (f.length > 0) {
    writer.writeString(7, f);
  }
  f = message.getGame();
  if (f.length > 0) {
    writer.writeString(8, f);
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(9, f);
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(10, f);
  }
  f = message.getIsVisible();
  if (f) {
    writer.writeBool(11, f);
  }
  f = message.getLimitedAt();
  if (f.length > 0) {
    writer.writeString(12, f);
  }
  f = message.getOpenedAt();
  if (f.length > 0) {
    writer.writeString(13, f);
  }
  f = message.getReceivedAt();
  if (f.length > 0) {
    writer.writeString(14, f);
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(15, f);
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(16, f);
  }
};

/**
 * optional int32 postbox_id = 1;
 * @return {number}
 */
proto.item.PostBox.prototype.getPostboxId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.PostBox} returns this
 */
proto.item.PostBox.prototype.setPostboxId = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional string account_id = 2;
 * @return {string}
 */
proto.item.PostBox.prototype.getAccountId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.PostBox} returns this
 */
proto.item.PostBox.prototype.setAccountId = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string message = 3;
 * @return {string}
 */
proto.item.PostBox.prototype.getMessage = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.PostBox} returns this
 */
proto.item.PostBox.prototype.setMessage = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string item_pack_id = 4;
 * @return {string}
 */
proto.item.PostBox.prototype.getItemPackId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.PostBox} returns this
 */
proto.item.PostBox.prototype.setItemPackId = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional string item_id = 5;
 * @return {string}
 */
proto.item.PostBox.prototype.getItemId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.PostBox} returns this
 */
proto.item.PostBox.prototype.setItemId = function (value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * optional string amount = 6;
 * @return {string}
 */
proto.item.PostBox.prototype.getAmount = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.PostBox} returns this
 */
proto.item.PostBox.prototype.setAmount = function (value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};

/**
 * optional string cash = 7;
 * @return {string}
 */
proto.item.PostBox.prototype.getCash = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.PostBox} returns this
 */
proto.item.PostBox.prototype.setCash = function (value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};

/**
 * optional string game = 8;
 * @return {string}
 */
proto.item.PostBox.prototype.getGame = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.PostBox} returns this
 */
proto.item.PostBox.prototype.setGame = function (value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};

/**
 * optional PostType type = 9;
 * @return {!proto.item.PostType}
 */
proto.item.PostBox.prototype.getType = function () {
  return /** @type {!proto.item.PostType} */ (
    jspb.Message.getFieldWithDefault(this, 9, 0)
  );
};

/**
 * @param {!proto.item.PostType} value
 * @return {!proto.item.PostBox} returns this
 */
proto.item.PostBox.prototype.setType = function (value) {
  return jspb.Message.setProto3EnumField(this, 9, value);
};

/**
 * optional PostBoxState state = 10;
 * @return {!proto.item.PostBoxState}
 */
proto.item.PostBox.prototype.getState = function () {
  return /** @type {!proto.item.PostBoxState} */ (
    jspb.Message.getFieldWithDefault(this, 10, 0)
  );
};

/**
 * @param {!proto.item.PostBoxState} value
 * @return {!proto.item.PostBox} returns this
 */
proto.item.PostBox.prototype.setState = function (value) {
  return jspb.Message.setProto3EnumField(this, 10, value);
};

/**
 * optional bool is_visible = 11;
 * @return {boolean}
 */
proto.item.PostBox.prototype.getIsVisible = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 11, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.item.PostBox} returns this
 */
proto.item.PostBox.prototype.setIsVisible = function (value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};

/**
 * optional string limited_at = 12;
 * @return {string}
 */
proto.item.PostBox.prototype.getLimitedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.PostBox} returns this
 */
proto.item.PostBox.prototype.setLimitedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};

/**
 * optional string opened_at = 13;
 * @return {string}
 */
proto.item.PostBox.prototype.getOpenedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.PostBox} returns this
 */
proto.item.PostBox.prototype.setOpenedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};

/**
 * optional string received_at = 14;
 * @return {string}
 */
proto.item.PostBox.prototype.getReceivedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.PostBox} returns this
 */
proto.item.PostBox.prototype.setReceivedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};

/**
 * optional string created_at = 15;
 * @return {string}
 */
proto.item.PostBox.prototype.getCreatedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.PostBox} returns this
 */
proto.item.PostBox.prototype.setCreatedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};

/**
 * optional string updated_at = 16;
 * @return {string}
 */
proto.item.PostBox.prototype.getUpdatedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.PostBox} returns this
 */
proto.item.PostBox.prototype.setUpdatedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.item.Inventory.prototype.toObject = function (opt_includeInstance) {
    return proto.item.Inventory.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.item.Inventory} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.item.Inventory.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        inventoryId: jspb.Message.getFieldWithDefault(msg, 1, 0),
        accountId: jspb.Message.getFieldWithDefault(msg, 2, ''),
        itemId: jspb.Message.getFieldWithDefault(msg, 3, ''),
        itemTypeId: jspb.Message.getFieldWithDefault(msg, 4, ''),
        amount: jspb.Message.getFieldWithDefault(msg, 5, 0),
        isEffective: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
        effectStartAt: jspb.Message.getFieldWithDefault(msg, 7, ''),
        effectUpdatedAt: jspb.Message.getFieldWithDefault(msg, 8, ''),
        effectEndAt: jspb.Message.getFieldWithDefault(msg, 9, ''),
        effectTotalTime: jspb.Message.getFieldWithDefault(msg, 10, 0),
        acquireByDay: jspb.Message.getFieldWithDefault(msg, 11, 0),
        acquireByWeek: jspb.Message.getFieldWithDefault(msg, 12, 0),
        acquireByMonth: jspb.Message.getFieldWithDefault(msg, 13, 0),
        acquireTotal: jspb.Message.getFieldWithDefault(msg, 14, 0),
        lastAcquiredAt: jspb.Message.getFieldWithDefault(msg, 15, ''),
        useByDay: jspb.Message.getFieldWithDefault(msg, 16, 0),
        useByWeek: jspb.Message.getFieldWithDefault(msg, 17, 0),
        useByMonth: jspb.Message.getFieldWithDefault(msg, 18, 0),
        useTotal: jspb.Message.getFieldWithDefault(msg, 19, 0),
        lastUsedAt: jspb.Message.getFieldWithDefault(msg, 20, ''),
        createdAt: jspb.Message.getFieldWithDefault(msg, 21, ''),
        updatedAt: jspb.Message.getFieldWithDefault(msg, 22, ''),
        item:
          (f = msg.getItem()) && proto.item.Item.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.Inventory}
 */
proto.item.Inventory.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.Inventory();
  return proto.item.Inventory.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.Inventory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.Inventory}
 */
proto.item.Inventory.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setInventoryId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setAccountId(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setItemId(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setItemTypeId(value);
        break;
      case 5:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setAmount(value);
        break;
      case 6:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsEffective(value);
        break;
      case 7:
        var value = /** @type {string} */ (reader.readString());
        msg.setEffectStartAt(value);
        break;
      case 8:
        var value = /** @type {string} */ (reader.readString());
        msg.setEffectUpdatedAt(value);
        break;
      case 9:
        var value = /** @type {string} */ (reader.readString());
        msg.setEffectEndAt(value);
        break;
      case 10:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setEffectTotalTime(value);
        break;
      case 11:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setAcquireByDay(value);
        break;
      case 12:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setAcquireByWeek(value);
        break;
      case 13:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setAcquireByMonth(value);
        break;
      case 14:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setAcquireTotal(value);
        break;
      case 15:
        var value = /** @type {string} */ (reader.readString());
        msg.setLastAcquiredAt(value);
        break;
      case 16:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setUseByDay(value);
        break;
      case 17:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setUseByWeek(value);
        break;
      case 18:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setUseByMonth(value);
        break;
      case 19:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setUseTotal(value);
        break;
      case 20:
        var value = /** @type {string} */ (reader.readString());
        msg.setLastUsedAt(value);
        break;
      case 21:
        var value = /** @type {string} */ (reader.readString());
        msg.setCreatedAt(value);
        break;
      case 22:
        var value = /** @type {string} */ (reader.readString());
        msg.setUpdatedAt(value);
        break;
      case 23:
        var value = new proto.item.Item();
        reader.readMessage(value, proto.item.Item.deserializeBinaryFromReader);
        msg.setItem(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.Inventory.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.item.Inventory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.Inventory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.Inventory.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getInventoryId();
  if (f !== 0) {
    writer.writeInt32(1, f);
  }
  f = message.getAccountId();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getItemId();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getItemTypeId();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getAmount();
  if (f !== 0) {
    writer.writeInt32(5, f);
  }
  f = message.getIsEffective();
  if (f) {
    writer.writeBool(6, f);
  }
  f = message.getEffectStartAt();
  if (f.length > 0) {
    writer.writeString(7, f);
  }
  f = message.getEffectUpdatedAt();
  if (f.length > 0) {
    writer.writeString(8, f);
  }
  f = message.getEffectEndAt();
  if (f.length > 0) {
    writer.writeString(9, f);
  }
  f = message.getEffectTotalTime();
  if (f !== 0) {
    writer.writeInt32(10, f);
  }
  f = message.getAcquireByDay();
  if (f !== 0) {
    writer.writeInt32(11, f);
  }
  f = message.getAcquireByWeek();
  if (f !== 0) {
    writer.writeInt32(12, f);
  }
  f = message.getAcquireByMonth();
  if (f !== 0) {
    writer.writeInt32(13, f);
  }
  f = message.getAcquireTotal();
  if (f !== 0) {
    writer.writeInt32(14, f);
  }
  f = message.getLastAcquiredAt();
  if (f.length > 0) {
    writer.writeString(15, f);
  }
  f = message.getUseByDay();
  if (f !== 0) {
    writer.writeInt32(16, f);
  }
  f = message.getUseByWeek();
  if (f !== 0) {
    writer.writeInt32(17, f);
  }
  f = message.getUseByMonth();
  if (f !== 0) {
    writer.writeInt32(18, f);
  }
  f = message.getUseTotal();
  if (f !== 0) {
    writer.writeInt32(19, f);
  }
  f = message.getLastUsedAt();
  if (f.length > 0) {
    writer.writeString(20, f);
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(21, f);
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(22, f);
  }
  f = message.getItem();
  if (f != null) {
    writer.writeMessage(23, f, proto.item.Item.serializeBinaryToWriter);
  }
};

/**
 * optional int32 inventory_id = 1;
 * @return {number}
 */
proto.item.Inventory.prototype.getInventoryId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.Inventory} returns this
 */
proto.item.Inventory.prototype.setInventoryId = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional string account_id = 2;
 * @return {string}
 */
proto.item.Inventory.prototype.getAccountId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.Inventory} returns this
 */
proto.item.Inventory.prototype.setAccountId = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string item_id = 3;
 * @return {string}
 */
proto.item.Inventory.prototype.getItemId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.Inventory} returns this
 */
proto.item.Inventory.prototype.setItemId = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string item_type_id = 4;
 * @return {string}
 */
proto.item.Inventory.prototype.getItemTypeId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.Inventory} returns this
 */
proto.item.Inventory.prototype.setItemTypeId = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional int32 amount = 5;
 * @return {number}
 */
proto.item.Inventory.prototype.getAmount = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.Inventory} returns this
 */
proto.item.Inventory.prototype.setAmount = function (value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};

/**
 * optional bool is_effective = 6;
 * @return {boolean}
 */
proto.item.Inventory.prototype.getIsEffective = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 6, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.item.Inventory} returns this
 */
proto.item.Inventory.prototype.setIsEffective = function (value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};

/**
 * optional string effect_start_at = 7;
 * @return {string}
 */
proto.item.Inventory.prototype.getEffectStartAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.Inventory} returns this
 */
proto.item.Inventory.prototype.setEffectStartAt = function (value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};

/**
 * optional string effect_updated_at = 8;
 * @return {string}
 */
proto.item.Inventory.prototype.getEffectUpdatedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.Inventory} returns this
 */
proto.item.Inventory.prototype.setEffectUpdatedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};

/**
 * optional string effect_end_at = 9;
 * @return {string}
 */
proto.item.Inventory.prototype.getEffectEndAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.Inventory} returns this
 */
proto.item.Inventory.prototype.setEffectEndAt = function (value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};

/**
 * optional int32 effect_total_time = 10;
 * @return {number}
 */
proto.item.Inventory.prototype.getEffectTotalTime = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.Inventory} returns this
 */
proto.item.Inventory.prototype.setEffectTotalTime = function (value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};

/**
 * optional int32 acquire_by_day = 11;
 * @return {number}
 */
proto.item.Inventory.prototype.getAcquireByDay = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.Inventory} returns this
 */
proto.item.Inventory.prototype.setAcquireByDay = function (value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};

/**
 * optional int32 acquire_by_week = 12;
 * @return {number}
 */
proto.item.Inventory.prototype.getAcquireByWeek = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.Inventory} returns this
 */
proto.item.Inventory.prototype.setAcquireByWeek = function (value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};

/**
 * optional int32 acquire_by_month = 13;
 * @return {number}
 */
proto.item.Inventory.prototype.getAcquireByMonth = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.Inventory} returns this
 */
proto.item.Inventory.prototype.setAcquireByMonth = function (value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};

/**
 * optional int32 acquire_total = 14;
 * @return {number}
 */
proto.item.Inventory.prototype.getAcquireTotal = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.Inventory} returns this
 */
proto.item.Inventory.prototype.setAcquireTotal = function (value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};

/**
 * optional string last_acquired_at = 15;
 * @return {string}
 */
proto.item.Inventory.prototype.getLastAcquiredAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.Inventory} returns this
 */
proto.item.Inventory.prototype.setLastAcquiredAt = function (value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};

/**
 * optional int32 use_by_day = 16;
 * @return {number}
 */
proto.item.Inventory.prototype.getUseByDay = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.Inventory} returns this
 */
proto.item.Inventory.prototype.setUseByDay = function (value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};

/**
 * optional int32 use_by_week = 17;
 * @return {number}
 */
proto.item.Inventory.prototype.getUseByWeek = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.Inventory} returns this
 */
proto.item.Inventory.prototype.setUseByWeek = function (value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};

/**
 * optional int32 use_by_month = 18;
 * @return {number}
 */
proto.item.Inventory.prototype.getUseByMonth = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.Inventory} returns this
 */
proto.item.Inventory.prototype.setUseByMonth = function (value) {
  return jspb.Message.setProto3IntField(this, 18, value);
};

/**
 * optional int32 use_total = 19;
 * @return {number}
 */
proto.item.Inventory.prototype.getUseTotal = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.Inventory} returns this
 */
proto.item.Inventory.prototype.setUseTotal = function (value) {
  return jspb.Message.setProto3IntField(this, 19, value);
};

/**
 * optional string last_used_at = 20;
 * @return {string}
 */
proto.item.Inventory.prototype.getLastUsedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.Inventory} returns this
 */
proto.item.Inventory.prototype.setLastUsedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};

/**
 * optional string created_at = 21;
 * @return {string}
 */
proto.item.Inventory.prototype.getCreatedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.Inventory} returns this
 */
proto.item.Inventory.prototype.setCreatedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};

/**
 * optional string updated_at = 22;
 * @return {string}
 */
proto.item.Inventory.prototype.getUpdatedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.Inventory} returns this
 */
proto.item.Inventory.prototype.setUpdatedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};

/**
 * optional Item item = 23;
 * @return {?proto.item.Item}
 */
proto.item.Inventory.prototype.getItem = function () {
  return /** @type{?proto.item.Item} */ (
    jspb.Message.getWrapperField(this, proto.item.Item, 23)
  );
};

/**
 * @param {?proto.item.Item|undefined} value
 * @return {!proto.item.Inventory} returns this
 */
proto.item.Inventory.prototype.setItem = function (value) {
  return jspb.Message.setWrapperField(this, 23, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.item.Inventory} returns this
 */
proto.item.Inventory.prototype.clearItem = function () {
  return this.setItem(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.item.Inventory.prototype.hasItem = function () {
  return jspb.Message.getField(this, 23) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.item.DefaultStringIdRequest.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.item.DefaultStringIdRequest.toObject(
      opt_includeInstance,
      this,
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.item.DefaultStringIdRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.item.DefaultStringIdRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        id: jspb.Message.getFieldWithDefault(msg, 1, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.DefaultStringIdRequest}
 */
proto.item.DefaultStringIdRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.DefaultStringIdRequest();
  return proto.item.DefaultStringIdRequest.deserializeBinaryFromReader(
    msg,
    reader,
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.DefaultStringIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.DefaultStringIdRequest}
 */
proto.item.DefaultStringIdRequest.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setId(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.DefaultStringIdRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.item.DefaultStringIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.DefaultStringIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.DefaultStringIdRequest.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
};

/**
 * optional string id = 1;
 * @return {string}
 */
proto.item.DefaultStringIdRequest.prototype.getId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.DefaultStringIdRequest} returns this
 */
proto.item.DefaultStringIdRequest.prototype.setId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.item.DefaultIntIdRequest.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.item.DefaultIntIdRequest.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.item.DefaultIntIdRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.item.DefaultIntIdRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        id: jspb.Message.getFieldWithDefault(msg, 1, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.DefaultIntIdRequest}
 */
proto.item.DefaultIntIdRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.DefaultIntIdRequest();
  return proto.item.DefaultIntIdRequest.deserializeBinaryFromReader(
    msg,
    reader,
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.DefaultIntIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.DefaultIntIdRequest}
 */
proto.item.DefaultIntIdRequest.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setId(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.DefaultIntIdRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.item.DefaultIntIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.DefaultIntIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.DefaultIntIdRequest.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(1, f);
  }
};

/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.item.DefaultIntIdRequest.prototype.getId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.DefaultIntIdRequest} returns this
 */
proto.item.DefaultIntIdRequest.prototype.setId = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.item.DefaultResponse.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.item.DefaultResponse.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.item.DefaultResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.item.DefaultResponse.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
        errorMessage: jspb.Message.getFieldWithDefault(msg, 2, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.DefaultResponse}
 */
proto.item.DefaultResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.DefaultResponse();
  return proto.item.DefaultResponse.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.DefaultResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.DefaultResponse}
 */
proto.item.DefaultResponse.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setSuccess(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setErrorMessage(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.DefaultResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.item.DefaultResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.DefaultResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.DefaultResponse.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(1, f);
  }
  f = message.getErrorMessage();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
};

/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.item.DefaultResponse.prototype.getSuccess = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 1, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.item.DefaultResponse} returns this
 */
proto.item.DefaultResponse.prototype.setSuccess = function (value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};

/**
 * optional string error_message = 2;
 * @return {string}
 */
proto.item.DefaultResponse.prototype.getErrorMessage = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.DefaultResponse} returns this
 */
proto.item.DefaultResponse.prototype.setErrorMessage = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.item.EmptyRequest.prototype.toObject = function (opt_includeInstance) {
    return proto.item.EmptyRequest.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.item.EmptyRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.item.EmptyRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {};

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.EmptyRequest}
 */
proto.item.EmptyRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.EmptyRequest();
  return proto.item.EmptyRequest.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.EmptyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.EmptyRequest}
 */
proto.item.EmptyRequest.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.EmptyRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.item.EmptyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.EmptyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.EmptyRequest.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.item.EmptyResponse.prototype.toObject = function (opt_includeInstance) {
    return proto.item.EmptyResponse.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.item.EmptyResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.item.EmptyResponse.toObject = function (includeInstance, msg) {
    var f,
      obj = {};

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.EmptyResponse}
 */
proto.item.EmptyResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.EmptyResponse();
  return proto.item.EmptyResponse.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.EmptyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.EmptyResponse}
 */
proto.item.EmptyResponse.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.EmptyResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.item.EmptyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.EmptyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.EmptyResponse.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
};

/**
 * @enum {number}
 */
proto.item.EffectApplyType = {
  EFFECT_NONE: 0,
  EFFECT_NOT_EFFECTABLE: 1,
  EFFECT_ON_ACQUIRE: 2,
  EFFECT_ON_USE: 3,
};

/**
 * @enum {number}
 */
proto.item.SellingState = {
  SELL_NONE: 0,
  SELL_ON_SALE: 1,
  SELL_COMING_SOON: 2,
  SELL_PAUSED: 3,
  SELL_END: 4,
};

/**
 * @enum {number}
 */
proto.item.PostType = {
  POST_NONE: 0,
  POST_SYSTEM: 1,
  POST_REWARD: 2,
  POST_REFUND: 3,
  POST_OVERFLOW: 4,
  POST_INAPP_RECEIPT: 5,
  POST_PURCHASE_RECEIPT: 6,
  POST_MESSAGE: 7,
  POST_TRANSFER: 8,
  POST_OTHER: 9,
};

/**
 * @enum {number}
 */
proto.item.PostBoxState = {
  POST_BOX_NONE: 0,
  POST_BOX_NOT_OPEN: 1,
  POST_BOX_NOT_RECEIVED: 2,
  POST_BOX_SOME_RECEIVED: 3,
  POST_BOX_RECEIVED: 4,
  POST_BOX_EXPIRED: 5,
};

/**
 * @enum {number}
 */
proto.item.TransactionType = {
  TX_NONE: 0,
  TX_USE: 1,
  TX_INAPP_PURCHASE: 2,
  TX_STORE_PURCHASE: 3,
  TX_REWARD: 4,
  TX_TRANSFER: 5,
  TX_DESTROY: 6,
  TX_DISCARD: 7,
  TX_OTHER: 8,
};

goog.object.extend(exports, proto.item);
