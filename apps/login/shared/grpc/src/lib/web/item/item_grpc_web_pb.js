/**
 * @fileoverview gRPC-Web generated client stub for item
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.29.3
// source: item.proto

/* eslint-disable */
// @ts-nocheck

const grpc = {};
grpc.web = require('grpc-web');

var item$common_pb = require('./item-common_pb.js');
const proto = {};
proto.item = require('./item_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.item.ItemServiceClient = function (hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');
};

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.item.ItemServicePromiseClient = function (
  hostname,
  credentials,
  options,
) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.item.ItemTypeRequest,
 *   !proto.item.ItemTypeResponse>}
 */
const methodDescriptor_ItemService_CreateItemType =
  new grpc.web.MethodDescriptor(
    '/item.ItemService/CreateItemType',
    grpc.web.MethodType.UNARY,
    proto.item.ItemTypeRequest,
    proto.item.ItemTypeResponse,
    /**
     * @param {!proto.item.ItemTypeRequest} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.item.ItemTypeResponse.deserializeBinary,
  );

/**
 * @param {!proto.item.ItemTypeRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.item.ItemTypeResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.item.ItemTypeResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.item.ItemServiceClient.prototype.createItemType = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/item.ItemService/CreateItemType',
    request,
    metadata || {},
    methodDescriptor_ItemService_CreateItemType,
    callback,
  );
};

/**
 * @param {!proto.item.ItemTypeRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.item.ItemTypeResponse>}
 *     Promise that resolves to the response
 */
proto.item.ItemServicePromiseClient.prototype.createItemType = function (
  request,
  metadata,
) {
  return this.client_.unaryCall(
    this.hostname_ + '/item.ItemService/CreateItemType',
    request,
    metadata || {},
    methodDescriptor_ItemService_CreateItemType,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.item.EmptyRequest,
 *   !proto.item.GetItemTypeResponse>}
 */
const methodDescriptor_ItemService_GetItemTypes = new grpc.web.MethodDescriptor(
  '/item.ItemService/GetItemTypes',
  grpc.web.MethodType.UNARY,
  item$common_pb.EmptyRequest,
  proto.item.GetItemTypeResponse,
  /**
   * @param {!proto.item.EmptyRequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.item.GetItemTypeResponse.deserializeBinary,
);

/**
 * @param {!proto.item.EmptyRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.item.GetItemTypeResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.item.GetItemTypeResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.item.ItemServiceClient.prototype.getItemTypes = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/item.ItemService/GetItemTypes',
    request,
    metadata || {},
    methodDescriptor_ItemService_GetItemTypes,
    callback,
  );
};

/**
 * @param {!proto.item.EmptyRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.item.GetItemTypeResponse>}
 *     Promise that resolves to the response
 */
proto.item.ItemServicePromiseClient.prototype.getItemTypes = function (
  request,
  metadata,
) {
  return this.client_.unaryCall(
    this.hostname_ + '/item.ItemService/GetItemTypes',
    request,
    metadata || {},
    methodDescriptor_ItemService_GetItemTypes,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.item.ItemTypeRequest,
 *   !proto.item.ItemTypeResponse>}
 */
const methodDescriptor_ItemService_UpdateItemType =
  new grpc.web.MethodDescriptor(
    '/item.ItemService/UpdateItemType',
    grpc.web.MethodType.UNARY,
    proto.item.ItemTypeRequest,
    proto.item.ItemTypeResponse,
    /**
     * @param {!proto.item.ItemTypeRequest} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.item.ItemTypeResponse.deserializeBinary,
  );

/**
 * @param {!proto.item.ItemTypeRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.item.ItemTypeResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.item.ItemTypeResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.item.ItemServiceClient.prototype.updateItemType = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/item.ItemService/UpdateItemType',
    request,
    metadata || {},
    methodDescriptor_ItemService_UpdateItemType,
    callback,
  );
};

/**
 * @param {!proto.item.ItemTypeRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.item.ItemTypeResponse>}
 *     Promise that resolves to the response
 */
proto.item.ItemServicePromiseClient.prototype.updateItemType = function (
  request,
  metadata,
) {
  return this.client_.unaryCall(
    this.hostname_ + '/item.ItemService/UpdateItemType',
    request,
    metadata || {},
    methodDescriptor_ItemService_UpdateItemType,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.item.DefaultStringIdRequest,
 *   !proto.item.DefaultResponse>}
 */
const methodDescriptor_ItemService_DeactiveItemType =
  new grpc.web.MethodDescriptor(
    '/item.ItemService/DeactiveItemType',
    grpc.web.MethodType.UNARY,
    item$common_pb.DefaultStringIdRequest,
    item$common_pb.DefaultResponse,
    /**
     * @param {!proto.item.DefaultStringIdRequest} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    item$common_pb.DefaultResponse.deserializeBinary,
  );

/**
 * @param {!proto.item.DefaultStringIdRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.item.DefaultResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.item.DefaultResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.item.ItemServiceClient.prototype.deactiveItemType = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/item.ItemService/DeactiveItemType',
    request,
    metadata || {},
    methodDescriptor_ItemService_DeactiveItemType,
    callback,
  );
};

/**
 * @param {!proto.item.DefaultStringIdRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.item.DefaultResponse>}
 *     Promise that resolves to the response
 */
proto.item.ItemServicePromiseClient.prototype.deactiveItemType = function (
  request,
  metadata,
) {
  return this.client_.unaryCall(
    this.hostname_ + '/item.ItemService/DeactiveItemType',
    request,
    metadata || {},
    methodDescriptor_ItemService_DeactiveItemType,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.item.ItemRequest,
 *   !proto.item.ItemResponse>}
 */
const methodDescriptor_ItemService_CreateItem = new grpc.web.MethodDescriptor(
  '/item.ItemService/CreateItem',
  grpc.web.MethodType.UNARY,
  proto.item.ItemRequest,
  proto.item.ItemResponse,
  /**
   * @param {!proto.item.ItemRequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.item.ItemResponse.deserializeBinary,
);

/**
 * @param {!proto.item.ItemRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.item.ItemResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.item.ItemResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.item.ItemServiceClient.prototype.createItem = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/item.ItemService/CreateItem',
    request,
    metadata || {},
    methodDescriptor_ItemService_CreateItem,
    callback,
  );
};

/**
 * @param {!proto.item.ItemRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.item.ItemResponse>}
 *     Promise that resolves to the response
 */
proto.item.ItemServicePromiseClient.prototype.createItem = function (
  request,
  metadata,
) {
  return this.client_.unaryCall(
    this.hostname_ + '/item.ItemService/CreateItem',
    request,
    metadata || {},
    methodDescriptor_ItemService_CreateItem,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.item.DefaultStringIdRequest,
 *   !proto.item.ItemResponse>}
 */
const methodDescriptor_ItemService_GetItem = new grpc.web.MethodDescriptor(
  '/item.ItemService/GetItem',
  grpc.web.MethodType.UNARY,
  item$common_pb.DefaultStringIdRequest,
  proto.item.ItemResponse,
  /**
   * @param {!proto.item.DefaultStringIdRequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.item.ItemResponse.deserializeBinary,
);

/**
 * @param {!proto.item.DefaultStringIdRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.item.ItemResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.item.ItemResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.item.ItemServiceClient.prototype.getItem = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/item.ItemService/GetItem',
    request,
    metadata || {},
    methodDescriptor_ItemService_GetItem,
    callback,
  );
};

/**
 * @param {!proto.item.DefaultStringIdRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.item.ItemResponse>}
 *     Promise that resolves to the response
 */
proto.item.ItemServicePromiseClient.prototype.getItem = function (
  request,
  metadata,
) {
  return this.client_.unaryCall(
    this.hostname_ + '/item.ItemService/GetItem',
    request,
    metadata || {},
    methodDescriptor_ItemService_GetItem,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.item.ItemRequest,
 *   !proto.item.ItemsResponse>}
 */
const methodDescriptor_ItemService_GetItems = new grpc.web.MethodDescriptor(
  '/item.ItemService/GetItems',
  grpc.web.MethodType.UNARY,
  proto.item.ItemRequest,
  proto.item.ItemsResponse,
  /**
   * @param {!proto.item.ItemRequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.item.ItemsResponse.deserializeBinary,
);

/**
 * @param {!proto.item.ItemRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.item.ItemsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.item.ItemsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.item.ItemServiceClient.prototype.getItems = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/item.ItemService/GetItems',
    request,
    metadata || {},
    methodDescriptor_ItemService_GetItems,
    callback,
  );
};

/**
 * @param {!proto.item.ItemRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.item.ItemsResponse>}
 *     Promise that resolves to the response
 */
proto.item.ItemServicePromiseClient.prototype.getItems = function (
  request,
  metadata,
) {
  return this.client_.unaryCall(
    this.hostname_ + '/item.ItemService/GetItems',
    request,
    metadata || {},
    methodDescriptor_ItemService_GetItems,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.item.ItemsRequest,
 *   !proto.item.ItemsResponse>}
 */
const methodDescriptor_ItemService_GetItemsById = new grpc.web.MethodDescriptor(
  '/item.ItemService/GetItemsById',
  grpc.web.MethodType.UNARY,
  proto.item.ItemsRequest,
  proto.item.ItemsResponse,
  /**
   * @param {!proto.item.ItemsRequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.item.ItemsResponse.deserializeBinary,
);

/**
 * @param {!proto.item.ItemsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.item.ItemsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.item.ItemsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.item.ItemServiceClient.prototype.getItemsById = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/item.ItemService/GetItemsById',
    request,
    metadata || {},
    methodDescriptor_ItemService_GetItemsById,
    callback,
  );
};

/**
 * @param {!proto.item.ItemsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.item.ItemsResponse>}
 *     Promise that resolves to the response
 */
proto.item.ItemServicePromiseClient.prototype.getItemsById = function (
  request,
  metadata,
) {
  return this.client_.unaryCall(
    this.hostname_ + '/item.ItemService/GetItemsById',
    request,
    metadata || {},
    methodDescriptor_ItemService_GetItemsById,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.item.ItemRequest,
 *   !proto.item.ItemResponse>}
 */
const methodDescriptor_ItemService_UpdateItem = new grpc.web.MethodDescriptor(
  '/item.ItemService/UpdateItem',
  grpc.web.MethodType.UNARY,
  proto.item.ItemRequest,
  proto.item.ItemResponse,
  /**
   * @param {!proto.item.ItemRequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.item.ItemResponse.deserializeBinary,
);

/**
 * @param {!proto.item.ItemRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.item.ItemResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.item.ItemResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.item.ItemServiceClient.prototype.updateItem = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/item.ItemService/UpdateItem',
    request,
    metadata || {},
    methodDescriptor_ItemService_UpdateItem,
    callback,
  );
};

/**
 * @param {!proto.item.ItemRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.item.ItemResponse>}
 *     Promise that resolves to the response
 */
proto.item.ItemServicePromiseClient.prototype.updateItem = function (
  request,
  metadata,
) {
  return this.client_.unaryCall(
    this.hostname_ + '/item.ItemService/UpdateItem',
    request,
    metadata || {},
    methodDescriptor_ItemService_UpdateItem,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.item.DefaultStringIdRequest,
 *   !proto.item.DefaultResponse>}
 */
const methodDescriptor_ItemService_DeactiveItem = new grpc.web.MethodDescriptor(
  '/item.ItemService/DeactiveItem',
  grpc.web.MethodType.UNARY,
  item$common_pb.DefaultStringIdRequest,
  item$common_pb.DefaultResponse,
  /**
   * @param {!proto.item.DefaultStringIdRequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  item$common_pb.DefaultResponse.deserializeBinary,
);

/**
 * @param {!proto.item.DefaultStringIdRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.item.DefaultResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.item.DefaultResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.item.ItemServiceClient.prototype.deactiveItem = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/item.ItemService/DeactiveItem',
    request,
    metadata || {},
    methodDescriptor_ItemService_DeactiveItem,
    callback,
  );
};

/**
 * @param {!proto.item.DefaultStringIdRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.item.DefaultResponse>}
 *     Promise that resolves to the response
 */
proto.item.ItemServicePromiseClient.prototype.deactiveItem = function (
  request,
  metadata,
) {
  return this.client_.unaryCall(
    this.hostname_ + '/item.ItemService/DeactiveItem',
    request,
    metadata || {},
    methodDescriptor_ItemService_DeactiveItem,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.item.EmptyRequest,
 *   !proto.item.ItemResponse>}
 */
const methodDescriptor_ItemService_GetDefaultCurrency =
  new grpc.web.MethodDescriptor(
    '/item.ItemService/GetDefaultCurrency',
    grpc.web.MethodType.UNARY,
    item$common_pb.EmptyRequest,
    proto.item.ItemResponse,
    /**
     * @param {!proto.item.EmptyRequest} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.item.ItemResponse.deserializeBinary,
  );

/**
 * @param {!proto.item.EmptyRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.item.ItemResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.item.ItemResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.item.ItemServiceClient.prototype.getDefaultCurrency = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/item.ItemService/GetDefaultCurrency',
    request,
    metadata || {},
    methodDescriptor_ItemService_GetDefaultCurrency,
    callback,
  );
};

/**
 * @param {!proto.item.EmptyRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.item.ItemResponse>}
 *     Promise that resolves to the response
 */
proto.item.ItemServicePromiseClient.prototype.getDefaultCurrency = function (
  request,
  metadata,
) {
  return this.client_.unaryCall(
    this.hostname_ + '/item.ItemService/GetDefaultCurrency',
    request,
    metadata || {},
    methodDescriptor_ItemService_GetDefaultCurrency,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.item.ItemPackRequest,
 *   !proto.item.ItemPackResponse>}
 */
const methodDescriptor_ItemService_CreateItemPack =
  new grpc.web.MethodDescriptor(
    '/item.ItemService/CreateItemPack',
    grpc.web.MethodType.UNARY,
    proto.item.ItemPackRequest,
    proto.item.ItemPackResponse,
    /**
     * @param {!proto.item.ItemPackRequest} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.item.ItemPackResponse.deserializeBinary,
  );

/**
 * @param {!proto.item.ItemPackRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.item.ItemPackResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.item.ItemPackResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.item.ItemServiceClient.prototype.createItemPack = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/item.ItemService/CreateItemPack',
    request,
    metadata || {},
    methodDescriptor_ItemService_CreateItemPack,
    callback,
  );
};

/**
 * @param {!proto.item.ItemPackRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.item.ItemPackResponse>}
 *     Promise that resolves to the response
 */
proto.item.ItemServicePromiseClient.prototype.createItemPack = function (
  request,
  metadata,
) {
  return this.client_.unaryCall(
    this.hostname_ + '/item.ItemService/CreateItemPack',
    request,
    metadata || {},
    methodDescriptor_ItemService_CreateItemPack,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.item.ItemPackElementRequest,
 *   !proto.item.ItemPackElementResponse>}
 */
const methodDescriptor_ItemService_CreateItemPackElement =
  new grpc.web.MethodDescriptor(
    '/item.ItemService/CreateItemPackElement',
    grpc.web.MethodType.UNARY,
    proto.item.ItemPackElementRequest,
    proto.item.ItemPackElementResponse,
    /**
     * @param {!proto.item.ItemPackElementRequest} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.item.ItemPackElementResponse.deserializeBinary,
  );

/**
 * @param {!proto.item.ItemPackElementRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.item.ItemPackElementResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.item.ItemPackElementResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.item.ItemServiceClient.prototype.createItemPackElement = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/item.ItemService/CreateItemPackElement',
    request,
    metadata || {},
    methodDescriptor_ItemService_CreateItemPackElement,
    callback,
  );
};

/**
 * @param {!proto.item.ItemPackElementRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.item.ItemPackElementResponse>}
 *     Promise that resolves to the response
 */
proto.item.ItemServicePromiseClient.prototype.createItemPackElement = function (
  request,
  metadata,
) {
  return this.client_.unaryCall(
    this.hostname_ + '/item.ItemService/CreateItemPackElement',
    request,
    metadata || {},
    methodDescriptor_ItemService_CreateItemPackElement,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.item.DefaultStringIdRequest,
 *   !proto.item.ItemPackResponse>}
 */
const methodDescriptor_ItemService_GetItemPack = new grpc.web.MethodDescriptor(
  '/item.ItemService/GetItemPack',
  grpc.web.MethodType.UNARY,
  item$common_pb.DefaultStringIdRequest,
  proto.item.ItemPackResponse,
  /**
   * @param {!proto.item.DefaultStringIdRequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.item.ItemPackResponse.deserializeBinary,
);

/**
 * @param {!proto.item.DefaultStringIdRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.item.ItemPackResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.item.ItemPackResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.item.ItemServiceClient.prototype.getItemPack = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/item.ItemService/GetItemPack',
    request,
    metadata || {},
    methodDescriptor_ItemService_GetItemPack,
    callback,
  );
};

/**
 * @param {!proto.item.DefaultStringIdRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.item.ItemPackResponse>}
 *     Promise that resolves to the response
 */
proto.item.ItemServicePromiseClient.prototype.getItemPack = function (
  request,
  metadata,
) {
  return this.client_.unaryCall(
    this.hostname_ + '/item.ItemService/GetItemPack',
    request,
    metadata || {},
    methodDescriptor_ItemService_GetItemPack,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.item.ItemPackRequest,
 *   !proto.item.ItemPacksResponse>}
 */
const methodDescriptor_ItemService_GetItemPacks = new grpc.web.MethodDescriptor(
  '/item.ItemService/GetItemPacks',
  grpc.web.MethodType.UNARY,
  proto.item.ItemPackRequest,
  proto.item.ItemPacksResponse,
  /**
   * @param {!proto.item.ItemPackRequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.item.ItemPacksResponse.deserializeBinary,
);

/**
 * @param {!proto.item.ItemPackRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.item.ItemPacksResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.item.ItemPacksResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.item.ItemServiceClient.prototype.getItemPacks = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/item.ItemService/GetItemPacks',
    request,
    metadata || {},
    methodDescriptor_ItemService_GetItemPacks,
    callback,
  );
};

/**
 * @param {!proto.item.ItemPackRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.item.ItemPacksResponse>}
 *     Promise that resolves to the response
 */
proto.item.ItemServicePromiseClient.prototype.getItemPacks = function (
  request,
  metadata,
) {
  return this.client_.unaryCall(
    this.hostname_ + '/item.ItemService/GetItemPacks',
    request,
    metadata || {},
    methodDescriptor_ItemService_GetItemPacks,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.item.GetItemPacksRequest,
 *   !proto.item.ItemPacksResponse>}
 */
const methodDescriptor_ItemService_GetItemPacksById =
  new grpc.web.MethodDescriptor(
    '/item.ItemService/GetItemPacksById',
    grpc.web.MethodType.UNARY,
    proto.item.GetItemPacksRequest,
    proto.item.ItemPacksResponse,
    /**
     * @param {!proto.item.GetItemPacksRequest} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.item.ItemPacksResponse.deserializeBinary,
  );

/**
 * @param {!proto.item.GetItemPacksRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.item.ItemPacksResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.item.ItemPacksResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.item.ItemServiceClient.prototype.getItemPacksById = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/item.ItemService/GetItemPacksById',
    request,
    metadata || {},
    methodDescriptor_ItemService_GetItemPacksById,
    callback,
  );
};

/**
 * @param {!proto.item.GetItemPacksRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.item.ItemPacksResponse>}
 *     Promise that resolves to the response
 */
proto.item.ItemServicePromiseClient.prototype.getItemPacksById = function (
  request,
  metadata,
) {
  return this.client_.unaryCall(
    this.hostname_ + '/item.ItemService/GetItemPacksById',
    request,
    metadata || {},
    methodDescriptor_ItemService_GetItemPacksById,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.item.ItemPackRequest,
 *   !proto.item.ItemPackResponse>}
 */
const methodDescriptor_ItemService_UpdateItemPack =
  new grpc.web.MethodDescriptor(
    '/item.ItemService/UpdateItemPack',
    grpc.web.MethodType.UNARY,
    proto.item.ItemPackRequest,
    proto.item.ItemPackResponse,
    /**
     * @param {!proto.item.ItemPackRequest} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.item.ItemPackResponse.deserializeBinary,
  );

/**
 * @param {!proto.item.ItemPackRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.item.ItemPackResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.item.ItemPackResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.item.ItemServiceClient.prototype.updateItemPack = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/item.ItemService/UpdateItemPack',
    request,
    metadata || {},
    methodDescriptor_ItemService_UpdateItemPack,
    callback,
  );
};

/**
 * @param {!proto.item.ItemPackRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.item.ItemPackResponse>}
 *     Promise that resolves to the response
 */
proto.item.ItemServicePromiseClient.prototype.updateItemPack = function (
  request,
  metadata,
) {
  return this.client_.unaryCall(
    this.hostname_ + '/item.ItemService/UpdateItemPack',
    request,
    metadata || {},
    methodDescriptor_ItemService_UpdateItemPack,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.item.DefaultStringIdRequest,
 *   !proto.item.DefaultResponse>}
 */
const methodDescriptor_ItemService_DeactiveItemPack =
  new grpc.web.MethodDescriptor(
    '/item.ItemService/DeactiveItemPack',
    grpc.web.MethodType.UNARY,
    item$common_pb.DefaultStringIdRequest,
    item$common_pb.DefaultResponse,
    /**
     * @param {!proto.item.DefaultStringIdRequest} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    item$common_pb.DefaultResponse.deserializeBinary,
  );

/**
 * @param {!proto.item.DefaultStringIdRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.item.DefaultResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.item.DefaultResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.item.ItemServiceClient.prototype.deactiveItemPack = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/item.ItemService/DeactiveItemPack',
    request,
    metadata || {},
    methodDescriptor_ItemService_DeactiveItemPack,
    callback,
  );
};

/**
 * @param {!proto.item.DefaultStringIdRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.item.DefaultResponse>}
 *     Promise that resolves to the response
 */
proto.item.ItemServicePromiseClient.prototype.deactiveItemPack = function (
  request,
  metadata,
) {
  return this.client_.unaryCall(
    this.hostname_ + '/item.ItemService/DeactiveItemPack',
    request,
    metadata || {},
    methodDescriptor_ItemService_DeactiveItemPack,
  );
};

module.exports = proto.item;
