// source: item.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
  (typeof globalThis !== 'undefined' && globalThis) ||
  (typeof window !== 'undefined' && window) ||
  (typeof global !== 'undefined' && global) ||
  (typeof self !== 'undefined' && self) ||
  function () {
    return this;
  }.call(null) ||
  Function('return this')();

var item$common_pb = require('./item-common_pb.js');
goog.object.extend(proto, item$common_pb);
goog.exportSymbol('proto.item.GetItemPacksRequest', null, global);
goog.exportSymbol('proto.item.GetItemTypeResponse', null, global);
goog.exportSymbol('proto.item.ItemPackElementRequest', null, global);
goog.exportSymbol('proto.item.ItemPackElementResponse', null, global);
goog.exportSymbol('proto.item.ItemPackRequest', null, global);
goog.exportSymbol('proto.item.ItemPackResponse', null, global);
goog.exportSymbol('proto.item.ItemPacksResponse', null, global);
goog.exportSymbol('proto.item.ItemRequest', null, global);
goog.exportSymbol('proto.item.ItemResponse', null, global);
goog.exportSymbol('proto.item.ItemTypeRequest', null, global);
goog.exportSymbol('proto.item.ItemTypeResponse', null, global);
goog.exportSymbol('proto.item.ItemsRequest', null, global);
goog.exportSymbol('proto.item.ItemsResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.ItemTypeRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.item.ItemTypeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.item.ItemTypeRequest.displayName = 'proto.item.ItemTypeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.ItemTypeResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.item.ItemTypeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.item.ItemTypeResponse.displayName = 'proto.item.ItemTypeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.GetItemTypeResponse = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.item.GetItemTypeResponse.repeatedFields_,
    null,
  );
};
goog.inherits(proto.item.GetItemTypeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.item.GetItemTypeResponse.displayName = 'proto.item.GetItemTypeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.ItemRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.item.ItemRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.item.ItemRequest.displayName = 'proto.item.ItemRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.ItemResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.item.ItemResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.item.ItemResponse.displayName = 'proto.item.ItemResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.ItemsRequest = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.item.ItemsRequest.repeatedFields_,
    null,
  );
};
goog.inherits(proto.item.ItemsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.item.ItemsRequest.displayName = 'proto.item.ItemsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.ItemsResponse = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.item.ItemsResponse.repeatedFields_,
    null,
  );
};
goog.inherits(proto.item.ItemsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.item.ItemsResponse.displayName = 'proto.item.ItemsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.ItemPackRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.item.ItemPackRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.item.ItemPackRequest.displayName = 'proto.item.ItemPackRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.ItemPackResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.item.ItemPackResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.item.ItemPackResponse.displayName = 'proto.item.ItemPackResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.ItemPackElementRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.item.ItemPackElementRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.item.ItemPackElementRequest.displayName =
    'proto.item.ItemPackElementRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.ItemPackElementResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.item.ItemPackElementResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.item.ItemPackElementResponse.displayName =
    'proto.item.ItemPackElementResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.GetItemPacksRequest = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.item.GetItemPacksRequest.repeatedFields_,
    null,
  );
};
goog.inherits(proto.item.GetItemPacksRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.item.GetItemPacksRequest.displayName = 'proto.item.GetItemPacksRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.ItemPacksResponse = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.item.ItemPacksResponse.repeatedFields_,
    null,
  );
};
goog.inherits(proto.item.ItemPacksResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.item.ItemPacksResponse.displayName = 'proto.item.ItemPacksResponse';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.item.ItemTypeRequest.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.item.ItemTypeRequest.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.item.ItemTypeRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.item.ItemTypeRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        itemTypeId: jspb.Message.getFieldWithDefault(msg, 1, ''),
        name: jspb.Message.getFieldWithDefault(msg, 2, ''),
        description: jspb.Message.getFieldWithDefault(msg, 3, ''),
        image: jspb.Message.getFieldWithDefault(msg, 4, ''),
        meta: jspb.Message.getFieldWithDefault(msg, 5, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.ItemTypeRequest}
 */
proto.item.ItemTypeRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.ItemTypeRequest();
  return proto.item.ItemTypeRequest.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.ItemTypeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.ItemTypeRequest}
 */
proto.item.ItemTypeRequest.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setItemTypeId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setDescription(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setImage(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setMeta(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.ItemTypeRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.item.ItemTypeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.ItemTypeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.ItemTypeRequest.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getItemTypeId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getImage();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getMeta();
  if (f.length > 0) {
    writer.writeString(5, f);
  }
};

/**
 * optional string item_type_id = 1;
 * @return {string}
 */
proto.item.ItemTypeRequest.prototype.getItemTypeId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemTypeRequest} returns this
 */
proto.item.ItemTypeRequest.prototype.setItemTypeId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string name = 2;
 * @return {string}
 */
proto.item.ItemTypeRequest.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemTypeRequest} returns this
 */
proto.item.ItemTypeRequest.prototype.setName = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string description = 3;
 * @return {string}
 */
proto.item.ItemTypeRequest.prototype.getDescription = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemTypeRequest} returns this
 */
proto.item.ItemTypeRequest.prototype.setDescription = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string image = 4;
 * @return {string}
 */
proto.item.ItemTypeRequest.prototype.getImage = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemTypeRequest} returns this
 */
proto.item.ItemTypeRequest.prototype.setImage = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional string meta = 5;
 * @return {string}
 */
proto.item.ItemTypeRequest.prototype.getMeta = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemTypeRequest} returns this
 */
proto.item.ItemTypeRequest.prototype.setMeta = function (value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.item.ItemTypeResponse.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.item.ItemTypeResponse.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.item.ItemTypeResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.item.ItemTypeResponse.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
        errorMessage: jspb.Message.getFieldWithDefault(msg, 2, ''),
        itemType:
          (f = msg.getItemType()) &&
          item$common_pb.ItemType.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.ItemTypeResponse}
 */
proto.item.ItemTypeResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.ItemTypeResponse();
  return proto.item.ItemTypeResponse.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.ItemTypeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.ItemTypeResponse}
 */
proto.item.ItemTypeResponse.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setSuccess(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setErrorMessage(value);
        break;
      case 3:
        var value = new item$common_pb.ItemType();
        reader.readMessage(
          value,
          item$common_pb.ItemType.deserializeBinaryFromReader,
        );
        msg.setItemType(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.ItemTypeResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.item.ItemTypeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.ItemTypeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.ItemTypeResponse.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(1, f);
  }
  f = message.getErrorMessage();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getItemType();
  if (f != null) {
    writer.writeMessage(3, f, item$common_pb.ItemType.serializeBinaryToWriter);
  }
};

/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.item.ItemTypeResponse.prototype.getSuccess = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 1, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.item.ItemTypeResponse} returns this
 */
proto.item.ItemTypeResponse.prototype.setSuccess = function (value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};

/**
 * optional string error_message = 2;
 * @return {string}
 */
proto.item.ItemTypeResponse.prototype.getErrorMessage = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemTypeResponse} returns this
 */
proto.item.ItemTypeResponse.prototype.setErrorMessage = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional ItemType item_type = 3;
 * @return {?proto.item.ItemType}
 */
proto.item.ItemTypeResponse.prototype.getItemType = function () {
  return /** @type{?proto.item.ItemType} */ (
    jspb.Message.getWrapperField(this, item$common_pb.ItemType, 3)
  );
};

/**
 * @param {?proto.item.ItemType|undefined} value
 * @return {!proto.item.ItemTypeResponse} returns this
 */
proto.item.ItemTypeResponse.prototype.setItemType = function (value) {
  return jspb.Message.setWrapperField(this, 3, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.item.ItemTypeResponse} returns this
 */
proto.item.ItemTypeResponse.prototype.clearItemType = function () {
  return this.setItemType(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.item.ItemTypeResponse.prototype.hasItemType = function () {
  return jspb.Message.getField(this, 3) != null;
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.item.GetItemTypeResponse.repeatedFields_ = [3];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.item.GetItemTypeResponse.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.item.GetItemTypeResponse.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.item.GetItemTypeResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.item.GetItemTypeResponse.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
        errorMessage: jspb.Message.getFieldWithDefault(msg, 2, ''),
        itemTypeList: jspb.Message.toObjectList(
          msg.getItemTypeList(),
          item$common_pb.ItemType.toObject,
          includeInstance,
        ),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.GetItemTypeResponse}
 */
proto.item.GetItemTypeResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.GetItemTypeResponse();
  return proto.item.GetItemTypeResponse.deserializeBinaryFromReader(
    msg,
    reader,
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.GetItemTypeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.GetItemTypeResponse}
 */
proto.item.GetItemTypeResponse.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setSuccess(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setErrorMessage(value);
        break;
      case 3:
        var value = new item$common_pb.ItemType();
        reader.readMessage(
          value,
          item$common_pb.ItemType.deserializeBinaryFromReader,
        );
        msg.addItemType(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.GetItemTypeResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.item.GetItemTypeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.GetItemTypeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.GetItemTypeResponse.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(1, f);
  }
  f = message.getErrorMessage();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getItemTypeList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      item$common_pb.ItemType.serializeBinaryToWriter,
    );
  }
};

/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.item.GetItemTypeResponse.prototype.getSuccess = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 1, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.item.GetItemTypeResponse} returns this
 */
proto.item.GetItemTypeResponse.prototype.setSuccess = function (value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};

/**
 * optional string error_message = 2;
 * @return {string}
 */
proto.item.GetItemTypeResponse.prototype.getErrorMessage = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.GetItemTypeResponse} returns this
 */
proto.item.GetItemTypeResponse.prototype.setErrorMessage = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * repeated ItemType item_type = 3;
 * @return {!Array<!proto.item.ItemType>}
 */
proto.item.GetItemTypeResponse.prototype.getItemTypeList = function () {
  return /** @type{!Array<!proto.item.ItemType>} */ (
    jspb.Message.getRepeatedWrapperField(this, item$common_pb.ItemType, 3)
  );
};

/**
 * @param {!Array<!proto.item.ItemType>} value
 * @return {!proto.item.GetItemTypeResponse} returns this
 */
proto.item.GetItemTypeResponse.prototype.setItemTypeList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};

/**
 * @param {!proto.item.ItemType=} opt_value
 * @param {number=} opt_index
 * @return {!proto.item.ItemType}
 */
proto.item.GetItemTypeResponse.prototype.addItemType = function (
  opt_value,
  opt_index,
) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    3,
    opt_value,
    proto.item.ItemType,
    opt_index,
  );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.item.GetItemTypeResponse} returns this
 */
proto.item.GetItemTypeResponse.prototype.clearItemTypeList = function () {
  return this.setItemTypeList([]);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.item.ItemRequest.prototype.toObject = function (opt_includeInstance) {
    return proto.item.ItemRequest.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.item.ItemRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.item.ItemRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        itemId: jspb.Message.getFieldWithDefault(msg, 1, ''),
        itemTypeId: jspb.Message.getFieldWithDefault(msg, 2, ''),
        name: jspb.Message.getFieldWithDefault(msg, 3, ''),
        description: jspb.Message.getFieldWithDefault(msg, 4, ''),
        imageUrl: jspb.Message.getFieldWithDefault(msg, 5, ''),
        metadata: jspb.Message.getFieldWithDefault(msg, 6, ''),
        price: jspb.Message.getFieldWithDefault(msg, 7, ''),
        currency: jspb.Message.getFieldWithDefault(msg, 8, ''),
        effectDuration: jspb.Message.getFieldWithDefault(msg, 9, 0),
        effectApplyType: jspb.Message.getFieldWithDefault(msg, 10, 0),
        acquireLimitByDay: jspb.Message.getFieldWithDefault(msg, 11, 0),
        acquireLimitByWeek: jspb.Message.getFieldWithDefault(msg, 12, 0),
        acquireLimitByMonth: jspb.Message.getFieldWithDefault(msg, 13, 0),
        useLimitByDay: jspb.Message.getFieldWithDefault(msg, 14, 0),
        useLimitByWeek: jspb.Message.getFieldWithDefault(msg, 15, 0),
        useLimitByMonth: jspb.Message.getFieldWithDefault(msg, 16, 0),
        isConsumable: jspb.Message.getBooleanFieldWithDefault(msg, 17, false),
        isActive: jspb.Message.getBooleanFieldWithDefault(msg, 18, false),
        page: jspb.Message.getFieldWithDefault(msg, 19, 0),
        countPerPage: jspb.Message.getFieldWithDefault(msg, 20, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.ItemRequest}
 */
proto.item.ItemRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.ItemRequest();
  return proto.item.ItemRequest.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.ItemRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.ItemRequest}
 */
proto.item.ItemRequest.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setItemId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setItemTypeId(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setDescription(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setImageUrl(value);
        break;
      case 6:
        var value = /** @type {string} */ (reader.readString());
        msg.setMetadata(value);
        break;
      case 7:
        var value = /** @type {string} */ (reader.readString());
        msg.setPrice(value);
        break;
      case 8:
        var value = /** @type {string} */ (reader.readString());
        msg.setCurrency(value);
        break;
      case 9:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setEffectDuration(value);
        break;
      case 10:
        var value = /** @type {!proto.item.EffectApplyType} */ (
          reader.readEnum()
        );
        msg.setEffectApplyType(value);
        break;
      case 11:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setAcquireLimitByDay(value);
        break;
      case 12:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setAcquireLimitByWeek(value);
        break;
      case 13:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setAcquireLimitByMonth(value);
        break;
      case 14:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setUseLimitByDay(value);
        break;
      case 15:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setUseLimitByWeek(value);
        break;
      case 16:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setUseLimitByMonth(value);
        break;
      case 17:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsConsumable(value);
        break;
      case 18:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsActive(value);
        break;
      case 19:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setPage(value);
        break;
      case 20:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setCountPerPage(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.ItemRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.item.ItemRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.ItemRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.ItemRequest.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getItemId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getItemTypeId();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getImageUrl();
  if (f.length > 0) {
    writer.writeString(5, f);
  }
  f = message.getMetadata();
  if (f.length > 0) {
    writer.writeString(6, f);
  }
  f = message.getPrice();
  if (f.length > 0) {
    writer.writeString(7, f);
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(8, f);
  }
  f = message.getEffectDuration();
  if (f !== 0) {
    writer.writeInt32(9, f);
  }
  f = message.getEffectApplyType();
  if (f !== 0.0) {
    writer.writeEnum(10, f);
  }
  f = message.getAcquireLimitByDay();
  if (f !== 0) {
    writer.writeInt32(11, f);
  }
  f = message.getAcquireLimitByWeek();
  if (f !== 0) {
    writer.writeInt32(12, f);
  }
  f = message.getAcquireLimitByMonth();
  if (f !== 0) {
    writer.writeInt32(13, f);
  }
  f = message.getUseLimitByDay();
  if (f !== 0) {
    writer.writeInt32(14, f);
  }
  f = message.getUseLimitByWeek();
  if (f !== 0) {
    writer.writeInt32(15, f);
  }
  f = message.getUseLimitByMonth();
  if (f !== 0) {
    writer.writeInt32(16, f);
  }
  f = message.getIsConsumable();
  if (f) {
    writer.writeBool(17, f);
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(18, f);
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(19, f);
  }
  f = message.getCountPerPage();
  if (f !== 0) {
    writer.writeInt32(20, f);
  }
};

/**
 * optional string item_id = 1;
 * @return {string}
 */
proto.item.ItemRequest.prototype.getItemId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemRequest} returns this
 */
proto.item.ItemRequest.prototype.setItemId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string item_type_id = 2;
 * @return {string}
 */
proto.item.ItemRequest.prototype.getItemTypeId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemRequest} returns this
 */
proto.item.ItemRequest.prototype.setItemTypeId = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string name = 3;
 * @return {string}
 */
proto.item.ItemRequest.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemRequest} returns this
 */
proto.item.ItemRequest.prototype.setName = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string description = 4;
 * @return {string}
 */
proto.item.ItemRequest.prototype.getDescription = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemRequest} returns this
 */
proto.item.ItemRequest.prototype.setDescription = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional string image_url = 5;
 * @return {string}
 */
proto.item.ItemRequest.prototype.getImageUrl = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemRequest} returns this
 */
proto.item.ItemRequest.prototype.setImageUrl = function (value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * optional string metadata = 6;
 * @return {string}
 */
proto.item.ItemRequest.prototype.getMetadata = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemRequest} returns this
 */
proto.item.ItemRequest.prototype.setMetadata = function (value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};

/**
 * optional string price = 7;
 * @return {string}
 */
proto.item.ItemRequest.prototype.getPrice = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemRequest} returns this
 */
proto.item.ItemRequest.prototype.setPrice = function (value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};

/**
 * optional string currency = 8;
 * @return {string}
 */
proto.item.ItemRequest.prototype.getCurrency = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemRequest} returns this
 */
proto.item.ItemRequest.prototype.setCurrency = function (value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};

/**
 * optional int32 effect_duration = 9;
 * @return {number}
 */
proto.item.ItemRequest.prototype.getEffectDuration = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.ItemRequest} returns this
 */
proto.item.ItemRequest.prototype.setEffectDuration = function (value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};

/**
 * optional EffectApplyType effect_apply_type = 10;
 * @return {!proto.item.EffectApplyType}
 */
proto.item.ItemRequest.prototype.getEffectApplyType = function () {
  return /** @type {!proto.item.EffectApplyType} */ (
    jspb.Message.getFieldWithDefault(this, 10, 0)
  );
};

/**
 * @param {!proto.item.EffectApplyType} value
 * @return {!proto.item.ItemRequest} returns this
 */
proto.item.ItemRequest.prototype.setEffectApplyType = function (value) {
  return jspb.Message.setProto3EnumField(this, 10, value);
};

/**
 * optional int32 acquire_limit_by_day = 11;
 * @return {number}
 */
proto.item.ItemRequest.prototype.getAcquireLimitByDay = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.ItemRequest} returns this
 */
proto.item.ItemRequest.prototype.setAcquireLimitByDay = function (value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};

/**
 * optional int32 acquire_limit_by_week = 12;
 * @return {number}
 */
proto.item.ItemRequest.prototype.getAcquireLimitByWeek = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.ItemRequest} returns this
 */
proto.item.ItemRequest.prototype.setAcquireLimitByWeek = function (value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};

/**
 * optional int32 acquire_limit_by_month = 13;
 * @return {number}
 */
proto.item.ItemRequest.prototype.getAcquireLimitByMonth = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.ItemRequest} returns this
 */
proto.item.ItemRequest.prototype.setAcquireLimitByMonth = function (value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};

/**
 * optional int32 use_limit_by_day = 14;
 * @return {number}
 */
proto.item.ItemRequest.prototype.getUseLimitByDay = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.ItemRequest} returns this
 */
proto.item.ItemRequest.prototype.setUseLimitByDay = function (value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};

/**
 * optional int32 use_limit_by_week = 15;
 * @return {number}
 */
proto.item.ItemRequest.prototype.getUseLimitByWeek = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.ItemRequest} returns this
 */
proto.item.ItemRequest.prototype.setUseLimitByWeek = function (value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};

/**
 * optional int32 use_limit_by_month = 16;
 * @return {number}
 */
proto.item.ItemRequest.prototype.getUseLimitByMonth = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.ItemRequest} returns this
 */
proto.item.ItemRequest.prototype.setUseLimitByMonth = function (value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};

/**
 * optional bool is_consumable = 17;
 * @return {boolean}
 */
proto.item.ItemRequest.prototype.getIsConsumable = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 17, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.item.ItemRequest} returns this
 */
proto.item.ItemRequest.prototype.setIsConsumable = function (value) {
  return jspb.Message.setProto3BooleanField(this, 17, value);
};

/**
 * optional bool is_active = 18;
 * @return {boolean}
 */
proto.item.ItemRequest.prototype.getIsActive = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 18, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.item.ItemRequest} returns this
 */
proto.item.ItemRequest.prototype.setIsActive = function (value) {
  return jspb.Message.setProto3BooleanField(this, 18, value);
};

/**
 * optional int32 page = 19;
 * @return {number}
 */
proto.item.ItemRequest.prototype.getPage = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.ItemRequest} returns this
 */
proto.item.ItemRequest.prototype.setPage = function (value) {
  return jspb.Message.setProto3IntField(this, 19, value);
};

/**
 * optional int32 count_per_page = 20;
 * @return {number}
 */
proto.item.ItemRequest.prototype.getCountPerPage = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.ItemRequest} returns this
 */
proto.item.ItemRequest.prototype.setCountPerPage = function (value) {
  return jspb.Message.setProto3IntField(this, 20, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.item.ItemResponse.prototype.toObject = function (opt_includeInstance) {
    return proto.item.ItemResponse.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.item.ItemResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.item.ItemResponse.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
        errorMessage: jspb.Message.getFieldWithDefault(msg, 2, ''),
        item:
          (f = msg.getItem()) &&
          item$common_pb.Item.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.ItemResponse}
 */
proto.item.ItemResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.ItemResponse();
  return proto.item.ItemResponse.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.ItemResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.ItemResponse}
 */
proto.item.ItemResponse.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setSuccess(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setErrorMessage(value);
        break;
      case 3:
        var value = new item$common_pb.Item();
        reader.readMessage(
          value,
          item$common_pb.Item.deserializeBinaryFromReader,
        );
        msg.setItem(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.ItemResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.item.ItemResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.ItemResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.ItemResponse.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(1, f);
  }
  f = message.getErrorMessage();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getItem();
  if (f != null) {
    writer.writeMessage(3, f, item$common_pb.Item.serializeBinaryToWriter);
  }
};

/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.item.ItemResponse.prototype.getSuccess = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 1, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.item.ItemResponse} returns this
 */
proto.item.ItemResponse.prototype.setSuccess = function (value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};

/**
 * optional string error_message = 2;
 * @return {string}
 */
proto.item.ItemResponse.prototype.getErrorMessage = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemResponse} returns this
 */
proto.item.ItemResponse.prototype.setErrorMessage = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional Item item = 3;
 * @return {?proto.item.Item}
 */
proto.item.ItemResponse.prototype.getItem = function () {
  return /** @type{?proto.item.Item} */ (
    jspb.Message.getWrapperField(this, item$common_pb.Item, 3)
  );
};

/**
 * @param {?proto.item.Item|undefined} value
 * @return {!proto.item.ItemResponse} returns this
 */
proto.item.ItemResponse.prototype.setItem = function (value) {
  return jspb.Message.setWrapperField(this, 3, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.item.ItemResponse} returns this
 */
proto.item.ItemResponse.prototype.clearItem = function () {
  return this.setItem(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.item.ItemResponse.prototype.hasItem = function () {
  return jspb.Message.getField(this, 3) != null;
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.item.ItemsRequest.repeatedFields_ = [1];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.item.ItemsRequest.prototype.toObject = function (opt_includeInstance) {
    return proto.item.ItemsRequest.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.item.ItemsRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.item.ItemsRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        itemIdList:
          (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.ItemsRequest}
 */
proto.item.ItemsRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.ItemsRequest();
  return proto.item.ItemsRequest.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.ItemsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.ItemsRequest}
 */
proto.item.ItemsRequest.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.addItemId(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.ItemsRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.item.ItemsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.ItemsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.ItemsRequest.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getItemIdList();
  if (f.length > 0) {
    writer.writeRepeatedString(1, f);
  }
};

/**
 * repeated string item_id = 1;
 * @return {!Array<string>}
 */
proto.item.ItemsRequest.prototype.getItemIdList = function () {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};

/**
 * @param {!Array<string>} value
 * @return {!proto.item.ItemsRequest} returns this
 */
proto.item.ItemsRequest.prototype.setItemIdList = function (value) {
  return jspb.Message.setField(this, 1, value || []);
};

/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.item.ItemsRequest} returns this
 */
proto.item.ItemsRequest.prototype.addItemId = function (value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.item.ItemsRequest} returns this
 */
proto.item.ItemsRequest.prototype.clearItemIdList = function () {
  return this.setItemIdList([]);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.item.ItemsResponse.repeatedFields_ = [3];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.item.ItemsResponse.prototype.toObject = function (opt_includeInstance) {
    return proto.item.ItemsResponse.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.item.ItemsResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.item.ItemsResponse.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
        errorMessage: jspb.Message.getFieldWithDefault(msg, 2, ''),
        itemList: jspb.Message.toObjectList(
          msg.getItemList(),
          item$common_pb.Item.toObject,
          includeInstance,
        ),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.ItemsResponse}
 */
proto.item.ItemsResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.ItemsResponse();
  return proto.item.ItemsResponse.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.ItemsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.ItemsResponse}
 */
proto.item.ItemsResponse.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setSuccess(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setErrorMessage(value);
        break;
      case 3:
        var value = new item$common_pb.Item();
        reader.readMessage(
          value,
          item$common_pb.Item.deserializeBinaryFromReader,
        );
        msg.addItem(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.ItemsResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.item.ItemsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.ItemsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.ItemsResponse.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(1, f);
  }
  f = message.getErrorMessage();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getItemList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      item$common_pb.Item.serializeBinaryToWriter,
    );
  }
};

/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.item.ItemsResponse.prototype.getSuccess = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 1, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.item.ItemsResponse} returns this
 */
proto.item.ItemsResponse.prototype.setSuccess = function (value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};

/**
 * optional string error_message = 2;
 * @return {string}
 */
proto.item.ItemsResponse.prototype.getErrorMessage = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemsResponse} returns this
 */
proto.item.ItemsResponse.prototype.setErrorMessage = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * repeated Item item = 3;
 * @return {!Array<!proto.item.Item>}
 */
proto.item.ItemsResponse.prototype.getItemList = function () {
  return /** @type{!Array<!proto.item.Item>} */ (
    jspb.Message.getRepeatedWrapperField(this, item$common_pb.Item, 3)
  );
};

/**
 * @param {!Array<!proto.item.Item>} value
 * @return {!proto.item.ItemsResponse} returns this
 */
proto.item.ItemsResponse.prototype.setItemList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};

/**
 * @param {!proto.item.Item=} opt_value
 * @param {number=} opt_index
 * @return {!proto.item.Item}
 */
proto.item.ItemsResponse.prototype.addItem = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    3,
    opt_value,
    proto.item.Item,
    opt_index,
  );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.item.ItemsResponse} returns this
 */
proto.item.ItemsResponse.prototype.clearItemList = function () {
  return this.setItemList([]);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.item.ItemPackRequest.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.item.ItemPackRequest.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.item.ItemPackRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.item.ItemPackRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        itemPackId: jspb.Message.getFieldWithDefault(msg, 1, ''),
        name: jspb.Message.getFieldWithDefault(msg, 2, ''),
        description: jspb.Message.getFieldWithDefault(msg, 3, ''),
        imageUrl: jspb.Message.getFieldWithDefault(msg, 4, ''),
        metadata: jspb.Message.getFieldWithDefault(msg, 5, ''),
        inAppPriceId: jspb.Message.getFieldWithDefault(msg, 6, 0),
        currency: jspb.Message.getFieldWithDefault(msg, 7, ''),
        price: jspb.Message.getFieldWithDefault(msg, 8, ''),
        totalPrice: jspb.Message.getFieldWithDefault(msg, 9, ''),
        discount: jspb.Message.getFieldWithDefault(msg, 10, 0),
        gainPercent: jspb.Message.getFieldWithDefault(msg, 11, 0),
        sellingState: jspb.Message.getFieldWithDefault(msg, 12, 0),
        sellingStartAt: jspb.Message.getFieldWithDefault(msg, 13, ''),
        sellingDuration: jspb.Message.getFieldWithDefault(msg, 14, 0),
        sellingEndAt: jspb.Message.getFieldWithDefault(msg, 15, ''),
        buyLimitByDay: jspb.Message.getFieldWithDefault(msg, 16, 0),
        buyLimitByWeek: jspb.Message.getFieldWithDefault(msg, 17, 0),
        buyLimitByMonth: jspb.Message.getFieldWithDefault(msg, 18, 0),
        isRefundable: jspb.Message.getBooleanFieldWithDefault(msg, 19, false),
        isActive: jspb.Message.getBooleanFieldWithDefault(msg, 20, false),
        page: jspb.Message.getFieldWithDefault(msg, 21, 0),
        countPerPage: jspb.Message.getFieldWithDefault(msg, 22, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.ItemPackRequest}
 */
proto.item.ItemPackRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.ItemPackRequest();
  return proto.item.ItemPackRequest.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.ItemPackRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.ItemPackRequest}
 */
proto.item.ItemPackRequest.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setItemPackId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setDescription(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setImageUrl(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setMetadata(value);
        break;
      case 6:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setInAppPriceId(value);
        break;
      case 7:
        var value = /** @type {string} */ (reader.readString());
        msg.setCurrency(value);
        break;
      case 8:
        var value = /** @type {string} */ (reader.readString());
        msg.setPrice(value);
        break;
      case 9:
        var value = /** @type {string} */ (reader.readString());
        msg.setTotalPrice(value);
        break;
      case 10:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setDiscount(value);
        break;
      case 11:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setGainPercent(value);
        break;
      case 12:
        var value = /** @type {!proto.item.SellingState} */ (reader.readEnum());
        msg.setSellingState(value);
        break;
      case 13:
        var value = /** @type {string} */ (reader.readString());
        msg.setSellingStartAt(value);
        break;
      case 14:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setSellingDuration(value);
        break;
      case 15:
        var value = /** @type {string} */ (reader.readString());
        msg.setSellingEndAt(value);
        break;
      case 16:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setBuyLimitByDay(value);
        break;
      case 17:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setBuyLimitByWeek(value);
        break;
      case 18:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setBuyLimitByMonth(value);
        break;
      case 19:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsRefundable(value);
        break;
      case 20:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsActive(value);
        break;
      case 21:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setPage(value);
        break;
      case 22:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setCountPerPage(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.ItemPackRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.item.ItemPackRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.ItemPackRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.ItemPackRequest.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getItemPackId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getImageUrl();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getMetadata();
  if (f.length > 0) {
    writer.writeString(5, f);
  }
  f = message.getInAppPriceId();
  if (f !== 0) {
    writer.writeInt32(6, f);
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(7, f);
  }
  f = message.getPrice();
  if (f.length > 0) {
    writer.writeString(8, f);
  }
  f = message.getTotalPrice();
  if (f.length > 0) {
    writer.writeString(9, f);
  }
  f = message.getDiscount();
  if (f !== 0) {
    writer.writeInt32(10, f);
  }
  f = message.getGainPercent();
  if (f !== 0) {
    writer.writeInt32(11, f);
  }
  f = message.getSellingState();
  if (f !== 0.0) {
    writer.writeEnum(12, f);
  }
  f = message.getSellingStartAt();
  if (f.length > 0) {
    writer.writeString(13, f);
  }
  f = message.getSellingDuration();
  if (f !== 0) {
    writer.writeInt32(14, f);
  }
  f = message.getSellingEndAt();
  if (f.length > 0) {
    writer.writeString(15, f);
  }
  f = message.getBuyLimitByDay();
  if (f !== 0) {
    writer.writeInt32(16, f);
  }
  f = message.getBuyLimitByWeek();
  if (f !== 0) {
    writer.writeInt32(17, f);
  }
  f = message.getBuyLimitByMonth();
  if (f !== 0) {
    writer.writeInt32(18, f);
  }
  f = message.getIsRefundable();
  if (f) {
    writer.writeBool(19, f);
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(20, f);
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(21, f);
  }
  f = message.getCountPerPage();
  if (f !== 0) {
    writer.writeInt32(22, f);
  }
};

/**
 * optional string item_pack_id = 1;
 * @return {string}
 */
proto.item.ItemPackRequest.prototype.getItemPackId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemPackRequest} returns this
 */
proto.item.ItemPackRequest.prototype.setItemPackId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string name = 2;
 * @return {string}
 */
proto.item.ItemPackRequest.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemPackRequest} returns this
 */
proto.item.ItemPackRequest.prototype.setName = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string description = 3;
 * @return {string}
 */
proto.item.ItemPackRequest.prototype.getDescription = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemPackRequest} returns this
 */
proto.item.ItemPackRequest.prototype.setDescription = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string image_url = 4;
 * @return {string}
 */
proto.item.ItemPackRequest.prototype.getImageUrl = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemPackRequest} returns this
 */
proto.item.ItemPackRequest.prototype.setImageUrl = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional string metadata = 5;
 * @return {string}
 */
proto.item.ItemPackRequest.prototype.getMetadata = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemPackRequest} returns this
 */
proto.item.ItemPackRequest.prototype.setMetadata = function (value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * optional int32 in_app_price_id = 6;
 * @return {number}
 */
proto.item.ItemPackRequest.prototype.getInAppPriceId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.ItemPackRequest} returns this
 */
proto.item.ItemPackRequest.prototype.setInAppPriceId = function (value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};

/**
 * optional string currency = 7;
 * @return {string}
 */
proto.item.ItemPackRequest.prototype.getCurrency = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemPackRequest} returns this
 */
proto.item.ItemPackRequest.prototype.setCurrency = function (value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};

/**
 * optional string price = 8;
 * @return {string}
 */
proto.item.ItemPackRequest.prototype.getPrice = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemPackRequest} returns this
 */
proto.item.ItemPackRequest.prototype.setPrice = function (value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};

/**
 * optional string total_price = 9;
 * @return {string}
 */
proto.item.ItemPackRequest.prototype.getTotalPrice = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemPackRequest} returns this
 */
proto.item.ItemPackRequest.prototype.setTotalPrice = function (value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};

/**
 * optional int32 discount = 10;
 * @return {number}
 */
proto.item.ItemPackRequest.prototype.getDiscount = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.ItemPackRequest} returns this
 */
proto.item.ItemPackRequest.prototype.setDiscount = function (value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};

/**
 * optional int32 gain_percent = 11;
 * @return {number}
 */
proto.item.ItemPackRequest.prototype.getGainPercent = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.ItemPackRequest} returns this
 */
proto.item.ItemPackRequest.prototype.setGainPercent = function (value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};

/**
 * optional SellingState selling_state = 12;
 * @return {!proto.item.SellingState}
 */
proto.item.ItemPackRequest.prototype.getSellingState = function () {
  return /** @type {!proto.item.SellingState} */ (
    jspb.Message.getFieldWithDefault(this, 12, 0)
  );
};

/**
 * @param {!proto.item.SellingState} value
 * @return {!proto.item.ItemPackRequest} returns this
 */
proto.item.ItemPackRequest.prototype.setSellingState = function (value) {
  return jspb.Message.setProto3EnumField(this, 12, value);
};

/**
 * optional string selling_start_at = 13;
 * @return {string}
 */
proto.item.ItemPackRequest.prototype.getSellingStartAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemPackRequest} returns this
 */
proto.item.ItemPackRequest.prototype.setSellingStartAt = function (value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};

/**
 * optional int32 selling_duration = 14;
 * @return {number}
 */
proto.item.ItemPackRequest.prototype.getSellingDuration = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.ItemPackRequest} returns this
 */
proto.item.ItemPackRequest.prototype.setSellingDuration = function (value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};

/**
 * optional string selling_end_at = 15;
 * @return {string}
 */
proto.item.ItemPackRequest.prototype.getSellingEndAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemPackRequest} returns this
 */
proto.item.ItemPackRequest.prototype.setSellingEndAt = function (value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};

/**
 * optional int32 buy_limit_by_day = 16;
 * @return {number}
 */
proto.item.ItemPackRequest.prototype.getBuyLimitByDay = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.ItemPackRequest} returns this
 */
proto.item.ItemPackRequest.prototype.setBuyLimitByDay = function (value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};

/**
 * optional int32 buy_limit_by_week = 17;
 * @return {number}
 */
proto.item.ItemPackRequest.prototype.getBuyLimitByWeek = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.ItemPackRequest} returns this
 */
proto.item.ItemPackRequest.prototype.setBuyLimitByWeek = function (value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};

/**
 * optional int32 buy_limit_by_month = 18;
 * @return {number}
 */
proto.item.ItemPackRequest.prototype.getBuyLimitByMonth = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.ItemPackRequest} returns this
 */
proto.item.ItemPackRequest.prototype.setBuyLimitByMonth = function (value) {
  return jspb.Message.setProto3IntField(this, 18, value);
};

/**
 * optional bool is_refundable = 19;
 * @return {boolean}
 */
proto.item.ItemPackRequest.prototype.getIsRefundable = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 19, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.item.ItemPackRequest} returns this
 */
proto.item.ItemPackRequest.prototype.setIsRefundable = function (value) {
  return jspb.Message.setProto3BooleanField(this, 19, value);
};

/**
 * optional bool is_active = 20;
 * @return {boolean}
 */
proto.item.ItemPackRequest.prototype.getIsActive = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 20, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.item.ItemPackRequest} returns this
 */
proto.item.ItemPackRequest.prototype.setIsActive = function (value) {
  return jspb.Message.setProto3BooleanField(this, 20, value);
};

/**
 * optional int32 page = 21;
 * @return {number}
 */
proto.item.ItemPackRequest.prototype.getPage = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.ItemPackRequest} returns this
 */
proto.item.ItemPackRequest.prototype.setPage = function (value) {
  return jspb.Message.setProto3IntField(this, 21, value);
};

/**
 * optional int32 count_per_page = 22;
 * @return {number}
 */
proto.item.ItemPackRequest.prototype.getCountPerPage = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.ItemPackRequest} returns this
 */
proto.item.ItemPackRequest.prototype.setCountPerPage = function (value) {
  return jspb.Message.setProto3IntField(this, 22, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.item.ItemPackResponse.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.item.ItemPackResponse.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.item.ItemPackResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.item.ItemPackResponse.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
        errorMessage: jspb.Message.getFieldWithDefault(msg, 2, ''),
        itemPack:
          (f = msg.getItemPack()) &&
          item$common_pb.ItemPack.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.ItemPackResponse}
 */
proto.item.ItemPackResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.ItemPackResponse();
  return proto.item.ItemPackResponse.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.ItemPackResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.ItemPackResponse}
 */
proto.item.ItemPackResponse.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setSuccess(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setErrorMessage(value);
        break;
      case 3:
        var value = new item$common_pb.ItemPack();
        reader.readMessage(
          value,
          item$common_pb.ItemPack.deserializeBinaryFromReader,
        );
        msg.setItemPack(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.ItemPackResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.item.ItemPackResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.ItemPackResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.ItemPackResponse.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(1, f);
  }
  f = message.getErrorMessage();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getItemPack();
  if (f != null) {
    writer.writeMessage(3, f, item$common_pb.ItemPack.serializeBinaryToWriter);
  }
};

/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.item.ItemPackResponse.prototype.getSuccess = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 1, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.item.ItemPackResponse} returns this
 */
proto.item.ItemPackResponse.prototype.setSuccess = function (value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};

/**
 * optional string error_message = 2;
 * @return {string}
 */
proto.item.ItemPackResponse.prototype.getErrorMessage = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemPackResponse} returns this
 */
proto.item.ItemPackResponse.prototype.setErrorMessage = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional ItemPack item_pack = 3;
 * @return {?proto.item.ItemPack}
 */
proto.item.ItemPackResponse.prototype.getItemPack = function () {
  return /** @type{?proto.item.ItemPack} */ (
    jspb.Message.getWrapperField(this, item$common_pb.ItemPack, 3)
  );
};

/**
 * @param {?proto.item.ItemPack|undefined} value
 * @return {!proto.item.ItemPackResponse} returns this
 */
proto.item.ItemPackResponse.prototype.setItemPack = function (value) {
  return jspb.Message.setWrapperField(this, 3, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.item.ItemPackResponse} returns this
 */
proto.item.ItemPackResponse.prototype.clearItemPack = function () {
  return this.setItemPack(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.item.ItemPackResponse.prototype.hasItemPack = function () {
  return jspb.Message.getField(this, 3) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.item.ItemPackElementRequest.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.item.ItemPackElementRequest.toObject(
      opt_includeInstance,
      this,
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.item.ItemPackElementRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.item.ItemPackElementRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        itemPackId: jspb.Message.getFieldWithDefault(msg, 1, ''),
        childPackId: jspb.Message.getFieldWithDefault(msg, 2, ''),
        itemId: jspb.Message.getFieldWithDefault(msg, 3, ''),
        amount: jspb.Message.getFieldWithDefault(msg, 4, ''),
        order: jspb.Message.getFieldWithDefault(msg, 5, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.ItemPackElementRequest}
 */
proto.item.ItemPackElementRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.ItemPackElementRequest();
  return proto.item.ItemPackElementRequest.deserializeBinaryFromReader(
    msg,
    reader,
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.ItemPackElementRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.ItemPackElementRequest}
 */
proto.item.ItemPackElementRequest.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setItemPackId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setChildPackId(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setItemId(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setAmount(value);
        break;
      case 5:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setOrder(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.ItemPackElementRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.item.ItemPackElementRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.ItemPackElementRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.ItemPackElementRequest.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getItemPackId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getChildPackId();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getItemId();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getAmount();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getOrder();
  if (f !== 0) {
    writer.writeInt32(5, f);
  }
};

/**
 * optional string item_pack_id = 1;
 * @return {string}
 */
proto.item.ItemPackElementRequest.prototype.getItemPackId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemPackElementRequest} returns this
 */
proto.item.ItemPackElementRequest.prototype.setItemPackId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string child_pack_id = 2;
 * @return {string}
 */
proto.item.ItemPackElementRequest.prototype.getChildPackId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemPackElementRequest} returns this
 */
proto.item.ItemPackElementRequest.prototype.setChildPackId = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string item_id = 3;
 * @return {string}
 */
proto.item.ItemPackElementRequest.prototype.getItemId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemPackElementRequest} returns this
 */
proto.item.ItemPackElementRequest.prototype.setItemId = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string amount = 4;
 * @return {string}
 */
proto.item.ItemPackElementRequest.prototype.getAmount = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemPackElementRequest} returns this
 */
proto.item.ItemPackElementRequest.prototype.setAmount = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional int32 order = 5;
 * @return {number}
 */
proto.item.ItemPackElementRequest.prototype.getOrder = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.ItemPackElementRequest} returns this
 */
proto.item.ItemPackElementRequest.prototype.setOrder = function (value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.item.ItemPackElementResponse.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.item.ItemPackElementResponse.toObject(
      opt_includeInstance,
      this,
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.item.ItemPackElementResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.item.ItemPackElementResponse.toObject = function (
    includeInstance,
    msg,
  ) {
    var f,
      obj = {
        success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
        errorMessage: jspb.Message.getFieldWithDefault(msg, 2, ''),
        itemPackElement:
          (f = msg.getItemPackElement()) &&
          item$common_pb.ItemPackElement.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.ItemPackElementResponse}
 */
proto.item.ItemPackElementResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.ItemPackElementResponse();
  return proto.item.ItemPackElementResponse.deserializeBinaryFromReader(
    msg,
    reader,
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.ItemPackElementResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.ItemPackElementResponse}
 */
proto.item.ItemPackElementResponse.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setSuccess(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setErrorMessage(value);
        break;
      case 3:
        var value = new item$common_pb.ItemPackElement();
        reader.readMessage(
          value,
          item$common_pb.ItemPackElement.deserializeBinaryFromReader,
        );
        msg.setItemPackElement(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.ItemPackElementResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.item.ItemPackElementResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.ItemPackElementResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.ItemPackElementResponse.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(1, f);
  }
  f = message.getErrorMessage();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getItemPackElement();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      item$common_pb.ItemPackElement.serializeBinaryToWriter,
    );
  }
};

/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.item.ItemPackElementResponse.prototype.getSuccess = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 1, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.item.ItemPackElementResponse} returns this
 */
proto.item.ItemPackElementResponse.prototype.setSuccess = function (value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};

/**
 * optional string error_message = 2;
 * @return {string}
 */
proto.item.ItemPackElementResponse.prototype.getErrorMessage = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemPackElementResponse} returns this
 */
proto.item.ItemPackElementResponse.prototype.setErrorMessage = function (
  value,
) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional ItemPackElement item_pack_element = 3;
 * @return {?proto.item.ItemPackElement}
 */
proto.item.ItemPackElementResponse.prototype.getItemPackElement = function () {
  return /** @type{?proto.item.ItemPackElement} */ (
    jspb.Message.getWrapperField(this, item$common_pb.ItemPackElement, 3)
  );
};

/**
 * @param {?proto.item.ItemPackElement|undefined} value
 * @return {!proto.item.ItemPackElementResponse} returns this
 */
proto.item.ItemPackElementResponse.prototype.setItemPackElement = function (
  value,
) {
  return jspb.Message.setWrapperField(this, 3, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.item.ItemPackElementResponse} returns this
 */
proto.item.ItemPackElementResponse.prototype.clearItemPackElement =
  function () {
    return this.setItemPackElement(undefined);
  };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.item.ItemPackElementResponse.prototype.hasItemPackElement = function () {
  return jspb.Message.getField(this, 3) != null;
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.item.GetItemPacksRequest.repeatedFields_ = [1];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.item.GetItemPacksRequest.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.item.GetItemPacksRequest.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.item.GetItemPacksRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.item.GetItemPacksRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        itemPackIdList:
          (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.GetItemPacksRequest}
 */
proto.item.GetItemPacksRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.GetItemPacksRequest();
  return proto.item.GetItemPacksRequest.deserializeBinaryFromReader(
    msg,
    reader,
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.GetItemPacksRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.GetItemPacksRequest}
 */
proto.item.GetItemPacksRequest.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.addItemPackId(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.GetItemPacksRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.item.GetItemPacksRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.GetItemPacksRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.GetItemPacksRequest.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getItemPackIdList();
  if (f.length > 0) {
    writer.writeRepeatedString(1, f);
  }
};

/**
 * repeated string item_pack_id = 1;
 * @return {!Array<string>}
 */
proto.item.GetItemPacksRequest.prototype.getItemPackIdList = function () {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};

/**
 * @param {!Array<string>} value
 * @return {!proto.item.GetItemPacksRequest} returns this
 */
proto.item.GetItemPacksRequest.prototype.setItemPackIdList = function (value) {
  return jspb.Message.setField(this, 1, value || []);
};

/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.item.GetItemPacksRequest} returns this
 */
proto.item.GetItemPacksRequest.prototype.addItemPackId = function (
  value,
  opt_index,
) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.item.GetItemPacksRequest} returns this
 */
proto.item.GetItemPacksRequest.prototype.clearItemPackIdList = function () {
  return this.setItemPackIdList([]);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.item.ItemPacksResponse.repeatedFields_ = [3];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.item.ItemPacksResponse.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.item.ItemPacksResponse.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.item.ItemPacksResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.item.ItemPacksResponse.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
        errorMessage: jspb.Message.getFieldWithDefault(msg, 2, ''),
        itemPackList: jspb.Message.toObjectList(
          msg.getItemPackList(),
          item$common_pb.ItemPack.toObject,
          includeInstance,
        ),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.ItemPacksResponse}
 */
proto.item.ItemPacksResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.ItemPacksResponse();
  return proto.item.ItemPacksResponse.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.ItemPacksResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.ItemPacksResponse}
 */
proto.item.ItemPacksResponse.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setSuccess(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setErrorMessage(value);
        break;
      case 3:
        var value = new item$common_pb.ItemPack();
        reader.readMessage(
          value,
          item$common_pb.ItemPack.deserializeBinaryFromReader,
        );
        msg.addItemPack(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.ItemPacksResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.item.ItemPacksResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.ItemPacksResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.ItemPacksResponse.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(1, f);
  }
  f = message.getErrorMessage();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getItemPackList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      item$common_pb.ItemPack.serializeBinaryToWriter,
    );
  }
};

/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.item.ItemPacksResponse.prototype.getSuccess = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 1, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.item.ItemPacksResponse} returns this
 */
proto.item.ItemPacksResponse.prototype.setSuccess = function (value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};

/**
 * optional string error_message = 2;
 * @return {string}
 */
proto.item.ItemPacksResponse.prototype.getErrorMessage = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.ItemPacksResponse} returns this
 */
proto.item.ItemPacksResponse.prototype.setErrorMessage = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * repeated ItemPack item_pack = 3;
 * @return {!Array<!proto.item.ItemPack>}
 */
proto.item.ItemPacksResponse.prototype.getItemPackList = function () {
  return /** @type{!Array<!proto.item.ItemPack>} */ (
    jspb.Message.getRepeatedWrapperField(this, item$common_pb.ItemPack, 3)
  );
};

/**
 * @param {!Array<!proto.item.ItemPack>} value
 * @return {!proto.item.ItemPacksResponse} returns this
 */
proto.item.ItemPacksResponse.prototype.setItemPackList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};

/**
 * @param {!proto.item.ItemPack=} opt_value
 * @param {number=} opt_index
 * @return {!proto.item.ItemPack}
 */
proto.item.ItemPacksResponse.prototype.addItemPack = function (
  opt_value,
  opt_index,
) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    3,
    opt_value,
    proto.item.ItemPack,
    opt_index,
  );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.item.ItemPacksResponse} returns this
 */
proto.item.ItemPacksResponse.prototype.clearItemPackList = function () {
  return this.setItemPackList([]);
};

goog.object.extend(exports, proto.item);
