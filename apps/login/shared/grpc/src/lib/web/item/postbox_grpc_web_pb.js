/**
 * @fileoverview gRPC-Web generated client stub for item
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.29.3
// source: postbox.proto

/* eslint-disable */
// @ts-nocheck

const grpc = {};
grpc.web = require('grpc-web');

var item$common_pb = require('./item-common_pb.js');
const proto = {};
proto.item = require('./postbox_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.item.PostBoxServiceClient = function (hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');
};

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.item.PostBoxServicePromiseClient = function (
  hostname,
  credentials,
  options,
) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.item.GetPostsRequest,
 *   !proto.item.GetPostsResponse>}
 */
const methodDescriptor_PostBoxService_GetPosts = new grpc.web.MethodDescriptor(
  '/item.PostBoxService/GetPosts',
  grpc.web.MethodType.UNARY,
  proto.item.GetPostsRequest,
  proto.item.GetPostsResponse,
  /**
   * @param {!proto.item.GetPostsRequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.item.GetPostsResponse.deserializeBinary,
);

/**
 * @param {!proto.item.GetPostsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.item.GetPostsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.item.GetPostsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.item.PostBoxServiceClient.prototype.getPosts = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/item.PostBoxService/GetPosts',
    request,
    metadata || {},
    methodDescriptor_PostBoxService_GetPosts,
    callback,
  );
};

/**
 * @param {!proto.item.GetPostsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.item.GetPostsResponse>}
 *     Promise that resolves to the response
 */
proto.item.PostBoxServicePromiseClient.prototype.getPosts = function (
  request,
  metadata,
) {
  return this.client_.unaryCall(
    this.hostname_ + '/item.PostBoxService/GetPosts',
    request,
    metadata || {},
    methodDescriptor_PostBoxService_GetPosts,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.item.MoneyOverflowRequest,
 *   !proto.item.PostResponse>}
 */
const methodDescriptor_PostBoxService_MoneyOverflow =
  new grpc.web.MethodDescriptor(
    '/item.PostBoxService/MoneyOverflow',
    grpc.web.MethodType.UNARY,
    proto.item.MoneyOverflowRequest,
    proto.item.PostResponse,
    /**
     * @param {!proto.item.MoneyOverflowRequest} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.item.PostResponse.deserializeBinary,
  );

/**
 * @param {!proto.item.MoneyOverflowRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.item.PostResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.item.PostResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.item.PostBoxServiceClient.prototype.moneyOverflow = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/item.PostBoxService/MoneyOverflow',
    request,
    metadata || {},
    methodDescriptor_PostBoxService_MoneyOverflow,
    callback,
  );
};

/**
 * @param {!proto.item.MoneyOverflowRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.item.PostResponse>}
 *     Promise that resolves to the response
 */
proto.item.PostBoxServicePromiseClient.prototype.moneyOverflow = function (
  request,
  metadata,
) {
  return this.client_.unaryCall(
    this.hostname_ + '/item.PostBoxService/MoneyOverflow',
    request,
    metadata || {},
    methodDescriptor_PostBoxService_MoneyOverflow,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.item.SendPostRequest,
 *   !proto.item.PostResponse>}
 */
const methodDescriptor_PostBoxService_SendPost = new grpc.web.MethodDescriptor(
  '/item.PostBoxService/SendPost',
  grpc.web.MethodType.UNARY,
  proto.item.SendPostRequest,
  proto.item.PostResponse,
  /**
   * @param {!proto.item.SendPostRequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.item.PostResponse.deserializeBinary,
);

/**
 * @param {!proto.item.SendPostRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.item.PostResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.item.PostResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.item.PostBoxServiceClient.prototype.sendPost = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/item.PostBoxService/SendPost',
    request,
    metadata || {},
    methodDescriptor_PostBoxService_SendPost,
    callback,
  );
};

/**
 * @param {!proto.item.SendPostRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.item.PostResponse>}
 *     Promise that resolves to the response
 */
proto.item.PostBoxServicePromiseClient.prototype.sendPost = function (
  request,
  metadata,
) {
  return this.client_.unaryCall(
    this.hostname_ + '/item.PostBoxService/SendPost',
    request,
    metadata || {},
    methodDescriptor_PostBoxService_SendPost,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.item.SendMessageRequest,
 *   !proto.item.PostResponse>}
 */
const methodDescriptor_PostBoxService_SendMessage =
  new grpc.web.MethodDescriptor(
    '/item.PostBoxService/SendMessage',
    grpc.web.MethodType.UNARY,
    proto.item.SendMessageRequest,
    proto.item.PostResponse,
    /**
     * @param {!proto.item.SendMessageRequest} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.item.PostResponse.deserializeBinary,
  );

/**
 * @param {!proto.item.SendMessageRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.item.PostResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.item.PostResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.item.PostBoxServiceClient.prototype.sendMessage = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/item.PostBoxService/SendMessage',
    request,
    metadata || {},
    methodDescriptor_PostBoxService_SendMessage,
    callback,
  );
};

/**
 * @param {!proto.item.SendMessageRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.item.PostResponse>}
 *     Promise that resolves to the response
 */
proto.item.PostBoxServicePromiseClient.prototype.sendMessage = function (
  request,
  metadata,
) {
  return this.client_.unaryCall(
    this.hostname_ + '/item.PostBoxService/SendMessage',
    request,
    metadata || {},
    methodDescriptor_PostBoxService_SendMessage,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.item.DefaultIntIdRequest,
 *   !proto.item.PostResponse>}
 */
const methodDescriptor_PostBoxService_OpenPost = new grpc.web.MethodDescriptor(
  '/item.PostBoxService/OpenPost',
  grpc.web.MethodType.UNARY,
  item$common_pb.DefaultIntIdRequest,
  proto.item.PostResponse,
  /**
   * @param {!proto.item.DefaultIntIdRequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.item.PostResponse.deserializeBinary,
);

/**
 * @param {!proto.item.DefaultIntIdRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.item.PostResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.item.PostResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.item.PostBoxServiceClient.prototype.openPost = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/item.PostBoxService/OpenPost',
    request,
    metadata || {},
    methodDescriptor_PostBoxService_OpenPost,
    callback,
  );
};

/**
 * @param {!proto.item.DefaultIntIdRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.item.PostResponse>}
 *     Promise that resolves to the response
 */
proto.item.PostBoxServicePromiseClient.prototype.openPost = function (
  request,
  metadata,
) {
  return this.client_.unaryCall(
    this.hostname_ + '/item.PostBoxService/OpenPost',
    request,
    metadata || {},
    methodDescriptor_PostBoxService_OpenPost,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.item.DefaultIntIdRequest,
 *   !proto.item.PostResponse>}
 */
const methodDescriptor_PostBoxService_ReceivItem =
  new grpc.web.MethodDescriptor(
    '/item.PostBoxService/ReceivItem',
    grpc.web.MethodType.UNARY,
    item$common_pb.DefaultIntIdRequest,
    proto.item.PostResponse,
    /**
     * @param {!proto.item.DefaultIntIdRequest} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.item.PostResponse.deserializeBinary,
  );

/**
 * @param {!proto.item.DefaultIntIdRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.item.PostResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.item.PostResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.item.PostBoxServiceClient.prototype.receivItem = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/item.PostBoxService/ReceivItem',
    request,
    metadata || {},
    methodDescriptor_PostBoxService_ReceivItem,
    callback,
  );
};

/**
 * @param {!proto.item.DefaultIntIdRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.item.PostResponse>}
 *     Promise that resolves to the response
 */
proto.item.PostBoxServicePromiseClient.prototype.receivItem = function (
  request,
  metadata,
) {
  return this.client_.unaryCall(
    this.hostname_ + '/item.PostBoxService/ReceivItem',
    request,
    metadata || {},
    methodDescriptor_PostBoxService_ReceivItem,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.item.BulkRequest,
 *   !proto.item.BulkResponse>}
 */
const methodDescriptor_PostBoxService_BulkReceivItem =
  new grpc.web.MethodDescriptor(
    '/item.PostBoxService/BulkReceivItem',
    grpc.web.MethodType.UNARY,
    proto.item.BulkRequest,
    proto.item.BulkResponse,
    /**
     * @param {!proto.item.BulkRequest} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.item.BulkResponse.deserializeBinary,
  );

/**
 * @param {!proto.item.BulkRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.item.BulkResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.item.BulkResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.item.PostBoxServiceClient.prototype.bulkReceivItem = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/item.PostBoxService/BulkReceivItem',
    request,
    metadata || {},
    methodDescriptor_PostBoxService_BulkReceivItem,
    callback,
  );
};

/**
 * @param {!proto.item.BulkRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.item.BulkResponse>}
 *     Promise that resolves to the response
 */
proto.item.PostBoxServicePromiseClient.prototype.bulkReceivItem = function (
  request,
  metadata,
) {
  return this.client_.unaryCall(
    this.hostname_ + '/item.PostBoxService/BulkReceivItem',
    request,
    metadata || {},
    methodDescriptor_PostBoxService_BulkReceivItem,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.item.DefaultIntIdRequest,
 *   !proto.item.DefaultResponse>}
 */
const methodDescriptor_PostBoxService_DeactivePost =
  new grpc.web.MethodDescriptor(
    '/item.PostBoxService/DeactivePost',
    grpc.web.MethodType.UNARY,
    item$common_pb.DefaultIntIdRequest,
    item$common_pb.DefaultResponse,
    /**
     * @param {!proto.item.DefaultIntIdRequest} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    item$common_pb.DefaultResponse.deserializeBinary,
  );

/**
 * @param {!proto.item.DefaultIntIdRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.item.DefaultResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.item.DefaultResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.item.PostBoxServiceClient.prototype.deactivePost = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/item.PostBoxService/DeactivePost',
    request,
    metadata || {},
    methodDescriptor_PostBoxService_DeactivePost,
    callback,
  );
};

/**
 * @param {!proto.item.DefaultIntIdRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.item.DefaultResponse>}
 *     Promise that resolves to the response
 */
proto.item.PostBoxServicePromiseClient.prototype.deactivePost = function (
  request,
  metadata,
) {
  return this.client_.unaryCall(
    this.hostname_ + '/item.PostBoxService/DeactivePost',
    request,
    metadata || {},
    methodDescriptor_PostBoxService_DeactivePost,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.item.BulkRequest,
 *   !proto.item.BulkResponse>}
 */
const methodDescriptor_PostBoxService_BulkDeactive =
  new grpc.web.MethodDescriptor(
    '/item.PostBoxService/BulkDeactive',
    grpc.web.MethodType.UNARY,
    proto.item.BulkRequest,
    proto.item.BulkResponse,
    /**
     * @param {!proto.item.BulkRequest} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.item.BulkResponse.deserializeBinary,
  );

/**
 * @param {!proto.item.BulkRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.item.BulkResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.item.BulkResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.item.PostBoxServiceClient.prototype.bulkDeactive = function (
  request,
  metadata,
  callback,
) {
  return this.client_.rpcCall(
    this.hostname_ + '/item.PostBoxService/BulkDeactive',
    request,
    metadata || {},
    methodDescriptor_PostBoxService_BulkDeactive,
    callback,
  );
};

/**
 * @param {!proto.item.BulkRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.item.BulkResponse>}
 *     Promise that resolves to the response
 */
proto.item.PostBoxServicePromiseClient.prototype.bulkDeactive = function (
  request,
  metadata,
) {
  return this.client_.unaryCall(
    this.hostname_ + '/item.PostBoxService/BulkDeactive',
    request,
    metadata || {},
    methodDescriptor_PostBoxService_BulkDeactive,
  );
};

module.exports = proto.item;
