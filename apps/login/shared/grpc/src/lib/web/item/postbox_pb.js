// source: postbox.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
  (typeof globalThis !== 'undefined' && globalThis) ||
  (typeof window !== 'undefined' && window) ||
  (typeof global !== 'undefined' && global) ||
  (typeof self !== 'undefined' && self) ||
  function () {
    return this;
  }.call(null) ||
  Function('return this')();

var item$common_pb = require('./item-common_pb.js');
goog.object.extend(proto, item$common_pb);
goog.exportSymbol('proto.item.Amount', null, global);
goog.exportSymbol('proto.item.BulkRequest', null, global);
goog.exportSymbol('proto.item.BulkResponse', null, global);
goog.exportSymbol('proto.item.GetPostsRequest', null, global);
goog.exportSymbol('proto.item.GetPostsResponse', null, global);
goog.exportSymbol('proto.item.MoneyOverflowRequest', null, global);
goog.exportSymbol('proto.item.PostResponse', null, global);
goog.exportSymbol('proto.item.SendMessageRequest', null, global);
goog.exportSymbol('proto.item.SendPostRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.Amount = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.item.Amount, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.item.Amount.displayName = 'proto.item.Amount';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.SendPostRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.item.SendPostRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.item.SendPostRequest.displayName = 'proto.item.SendPostRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.SendMessageRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.item.SendMessageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.item.SendMessageRequest.displayName = 'proto.item.SendMessageRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.PostResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.item.PostResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.item.PostResponse.displayName = 'proto.item.PostResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.GetPostsRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.item.GetPostsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.item.GetPostsRequest.displayName = 'proto.item.GetPostsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.GetPostsResponse = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.item.GetPostsResponse.repeatedFields_,
    null,
  );
};
goog.inherits(proto.item.GetPostsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.item.GetPostsResponse.displayName = 'proto.item.GetPostsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.MoneyOverflowRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.item.MoneyOverflowRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.item.MoneyOverflowRequest.displayName =
    'proto.item.MoneyOverflowRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.BulkRequest = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.item.BulkRequest.repeatedFields_,
    null,
  );
};
goog.inherits(proto.item.BulkRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.item.BulkRequest.displayName = 'proto.item.BulkRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.BulkResponse = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.item.BulkResponse.repeatedFields_,
    null,
  );
};
goog.inherits(proto.item.BulkResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.item.BulkResponse.displayName = 'proto.item.BulkResponse';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.item.Amount.prototype.toObject = function (opt_includeInstance) {
    return proto.item.Amount.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.item.Amount} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.item.Amount.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        game: jspb.Message.getFieldWithDefault(msg, 1, ''),
        cash: jspb.Message.getFieldWithDefault(msg, 2, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.Amount}
 */
proto.item.Amount.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.Amount();
  return proto.item.Amount.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.Amount} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.Amount}
 */
proto.item.Amount.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setGame(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setCash(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.Amount.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.item.Amount.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.Amount} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.Amount.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getGame();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getCash();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
};

/**
 * optional string game = 1;
 * @return {string}
 */
proto.item.Amount.prototype.getGame = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.Amount} returns this
 */
proto.item.Amount.prototype.setGame = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string cash = 2;
 * @return {string}
 */
proto.item.Amount.prototype.getCash = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.Amount} returns this
 */
proto.item.Amount.prototype.setCash = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.item.SendPostRequest.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.item.SendPostRequest.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.item.SendPostRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.item.SendPostRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        accountId: jspb.Message.getFieldWithDefault(msg, 1, ''),
        senderId: jspb.Message.getFieldWithDefault(msg, 2, ''),
        message: jspb.Message.getFieldWithDefault(msg, 3, ''),
        itemPackId: jspb.Message.getFieldWithDefault(msg, 4, ''),
        itemId: jspb.Message.getFieldWithDefault(msg, 5, ''),
        amount: jspb.Message.getFieldWithDefault(msg, 6, ''),
        cash: jspb.Message.getFieldWithDefault(msg, 7, ''),
        game: jspb.Message.getFieldWithDefault(msg, 8, ''),
        type: jspb.Message.getFieldWithDefault(msg, 9, 0),
        state: jspb.Message.getFieldWithDefault(msg, 10, 0),
        isVisible: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
        limitedAt: jspb.Message.getFieldWithDefault(msg, 12, ''),
        openedAt: jspb.Message.getFieldWithDefault(msg, 13, ''),
        receivedAt: jspb.Message.getFieldWithDefault(msg, 14, ''),
        txGroupId: jspb.Message.getFieldWithDefault(msg, 15, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.SendPostRequest}
 */
proto.item.SendPostRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.SendPostRequest();
  return proto.item.SendPostRequest.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.SendPostRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.SendPostRequest}
 */
proto.item.SendPostRequest.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setAccountId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setSenderId(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setMessage(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setItemPackId(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setItemId(value);
        break;
      case 6:
        var value = /** @type {string} */ (reader.readString());
        msg.setAmount(value);
        break;
      case 7:
        var value = /** @type {string} */ (reader.readString());
        msg.setCash(value);
        break;
      case 8:
        var value = /** @type {string} */ (reader.readString());
        msg.setGame(value);
        break;
      case 9:
        var value = /** @type {!proto.item.PostType} */ (reader.readEnum());
        msg.setType(value);
        break;
      case 10:
        var value = /** @type {!proto.item.PostBoxState} */ (reader.readEnum());
        msg.setState(value);
        break;
      case 11:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsVisible(value);
        break;
      case 12:
        var value = /** @type {string} */ (reader.readString());
        msg.setLimitedAt(value);
        break;
      case 13:
        var value = /** @type {string} */ (reader.readString());
        msg.setOpenedAt(value);
        break;
      case 14:
        var value = /** @type {string} */ (reader.readString());
        msg.setReceivedAt(value);
        break;
      case 15:
        var value = /** @type {string} */ (reader.readString());
        msg.setTxGroupId(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.SendPostRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.item.SendPostRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.SendPostRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.SendPostRequest.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getAccountId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getSenderId();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getItemPackId();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getItemId();
  if (f.length > 0) {
    writer.writeString(5, f);
  }
  f = message.getAmount();
  if (f.length > 0) {
    writer.writeString(6, f);
  }
  f = message.getCash();
  if (f.length > 0) {
    writer.writeString(7, f);
  }
  f = message.getGame();
  if (f.length > 0) {
    writer.writeString(8, f);
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(9, f);
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(10, f);
  }
  f = message.getIsVisible();
  if (f) {
    writer.writeBool(11, f);
  }
  f = message.getLimitedAt();
  if (f.length > 0) {
    writer.writeString(12, f);
  }
  f = message.getOpenedAt();
  if (f.length > 0) {
    writer.writeString(13, f);
  }
  f = message.getReceivedAt();
  if (f.length > 0) {
    writer.writeString(14, f);
  }
  f = message.getTxGroupId();
  if (f.length > 0) {
    writer.writeString(15, f);
  }
};

/**
 * optional string account_id = 1;
 * @return {string}
 */
proto.item.SendPostRequest.prototype.getAccountId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.SendPostRequest} returns this
 */
proto.item.SendPostRequest.prototype.setAccountId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string sender_id = 2;
 * @return {string}
 */
proto.item.SendPostRequest.prototype.getSenderId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.SendPostRequest} returns this
 */
proto.item.SendPostRequest.prototype.setSenderId = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string message = 3;
 * @return {string}
 */
proto.item.SendPostRequest.prototype.getMessage = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.SendPostRequest} returns this
 */
proto.item.SendPostRequest.prototype.setMessage = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string item_pack_id = 4;
 * @return {string}
 */
proto.item.SendPostRequest.prototype.getItemPackId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.SendPostRequest} returns this
 */
proto.item.SendPostRequest.prototype.setItemPackId = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional string item_id = 5;
 * @return {string}
 */
proto.item.SendPostRequest.prototype.getItemId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.SendPostRequest} returns this
 */
proto.item.SendPostRequest.prototype.setItemId = function (value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * optional string amount = 6;
 * @return {string}
 */
proto.item.SendPostRequest.prototype.getAmount = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.SendPostRequest} returns this
 */
proto.item.SendPostRequest.prototype.setAmount = function (value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};

/**
 * optional string cash = 7;
 * @return {string}
 */
proto.item.SendPostRequest.prototype.getCash = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.SendPostRequest} returns this
 */
proto.item.SendPostRequest.prototype.setCash = function (value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};

/**
 * optional string game = 8;
 * @return {string}
 */
proto.item.SendPostRequest.prototype.getGame = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.SendPostRequest} returns this
 */
proto.item.SendPostRequest.prototype.setGame = function (value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};

/**
 * optional PostType type = 9;
 * @return {!proto.item.PostType}
 */
proto.item.SendPostRequest.prototype.getType = function () {
  return /** @type {!proto.item.PostType} */ (
    jspb.Message.getFieldWithDefault(this, 9, 0)
  );
};

/**
 * @param {!proto.item.PostType} value
 * @return {!proto.item.SendPostRequest} returns this
 */
proto.item.SendPostRequest.prototype.setType = function (value) {
  return jspb.Message.setProto3EnumField(this, 9, value);
};

/**
 * optional PostBoxState state = 10;
 * @return {!proto.item.PostBoxState}
 */
proto.item.SendPostRequest.prototype.getState = function () {
  return /** @type {!proto.item.PostBoxState} */ (
    jspb.Message.getFieldWithDefault(this, 10, 0)
  );
};

/**
 * @param {!proto.item.PostBoxState} value
 * @return {!proto.item.SendPostRequest} returns this
 */
proto.item.SendPostRequest.prototype.setState = function (value) {
  return jspb.Message.setProto3EnumField(this, 10, value);
};

/**
 * optional bool is_visible = 11;
 * @return {boolean}
 */
proto.item.SendPostRequest.prototype.getIsVisible = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 11, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.item.SendPostRequest} returns this
 */
proto.item.SendPostRequest.prototype.setIsVisible = function (value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};

/**
 * optional string limited_at = 12;
 * @return {string}
 */
proto.item.SendPostRequest.prototype.getLimitedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.SendPostRequest} returns this
 */
proto.item.SendPostRequest.prototype.setLimitedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};

/**
 * optional string opened_at = 13;
 * @return {string}
 */
proto.item.SendPostRequest.prototype.getOpenedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.SendPostRequest} returns this
 */
proto.item.SendPostRequest.prototype.setOpenedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};

/**
 * optional string received_at = 14;
 * @return {string}
 */
proto.item.SendPostRequest.prototype.getReceivedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.SendPostRequest} returns this
 */
proto.item.SendPostRequest.prototype.setReceivedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};

/**
 * optional string tx_group_id = 15;
 * @return {string}
 */
proto.item.SendPostRequest.prototype.getTxGroupId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.SendPostRequest} returns this
 */
proto.item.SendPostRequest.prototype.setTxGroupId = function (value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.item.SendMessageRequest.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.item.SendMessageRequest.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.item.SendMessageRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.item.SendMessageRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        accountId: jspb.Message.getFieldWithDefault(msg, 1, ''),
        senderId: jspb.Message.getFieldWithDefault(msg, 2, ''),
        message: jspb.Message.getFieldWithDefault(msg, 3, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.SendMessageRequest}
 */
proto.item.SendMessageRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.SendMessageRequest();
  return proto.item.SendMessageRequest.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.SendMessageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.SendMessageRequest}
 */
proto.item.SendMessageRequest.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setAccountId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setSenderId(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setMessage(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.SendMessageRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.item.SendMessageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.SendMessageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.SendMessageRequest.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getAccountId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getSenderId();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
};

/**
 * optional string account_id = 1;
 * @return {string}
 */
proto.item.SendMessageRequest.prototype.getAccountId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.SendMessageRequest} returns this
 */
proto.item.SendMessageRequest.prototype.setAccountId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string sender_id = 2;
 * @return {string}
 */
proto.item.SendMessageRequest.prototype.getSenderId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.SendMessageRequest} returns this
 */
proto.item.SendMessageRequest.prototype.setSenderId = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string message = 3;
 * @return {string}
 */
proto.item.SendMessageRequest.prototype.getMessage = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.SendMessageRequest} returns this
 */
proto.item.SendMessageRequest.prototype.setMessage = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.item.PostResponse.prototype.toObject = function (opt_includeInstance) {
    return proto.item.PostResponse.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.item.PostResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.item.PostResponse.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
        errorMessage: jspb.Message.getFieldWithDefault(msg, 2, ''),
        postBox:
          (f = msg.getPostBox()) &&
          item$common_pb.PostBox.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.PostResponse}
 */
proto.item.PostResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.PostResponse();
  return proto.item.PostResponse.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.PostResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.PostResponse}
 */
proto.item.PostResponse.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setSuccess(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setErrorMessage(value);
        break;
      case 3:
        var value = new item$common_pb.PostBox();
        reader.readMessage(
          value,
          item$common_pb.PostBox.deserializeBinaryFromReader,
        );
        msg.setPostBox(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.PostResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.item.PostResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.PostResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.PostResponse.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(1, f);
  }
  f = message.getErrorMessage();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getPostBox();
  if (f != null) {
    writer.writeMessage(3, f, item$common_pb.PostBox.serializeBinaryToWriter);
  }
};

/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.item.PostResponse.prototype.getSuccess = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 1, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.item.PostResponse} returns this
 */
proto.item.PostResponse.prototype.setSuccess = function (value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};

/**
 * optional string error_message = 2;
 * @return {string}
 */
proto.item.PostResponse.prototype.getErrorMessage = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.PostResponse} returns this
 */
proto.item.PostResponse.prototype.setErrorMessage = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional PostBox post_box = 3;
 * @return {?proto.item.PostBox}
 */
proto.item.PostResponse.prototype.getPostBox = function () {
  return /** @type{?proto.item.PostBox} */ (
    jspb.Message.getWrapperField(this, item$common_pb.PostBox, 3)
  );
};

/**
 * @param {?proto.item.PostBox|undefined} value
 * @return {!proto.item.PostResponse} returns this
 */
proto.item.PostResponse.prototype.setPostBox = function (value) {
  return jspb.Message.setWrapperField(this, 3, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.item.PostResponse} returns this
 */
proto.item.PostResponse.prototype.clearPostBox = function () {
  return this.setPostBox(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.item.PostResponse.prototype.hasPostBox = function () {
  return jspb.Message.getField(this, 3) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.item.GetPostsRequest.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.item.GetPostsRequest.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.item.GetPostsRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.item.GetPostsRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        accountId: jspb.Message.getFieldWithDefault(msg, 1, ''),
        type: jspb.Message.getFieldWithDefault(msg, 2, 0),
        state: jspb.Message.getFieldWithDefault(msg, 3, 0),
        isVisible: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.GetPostsRequest}
 */
proto.item.GetPostsRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.GetPostsRequest();
  return proto.item.GetPostsRequest.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.GetPostsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.GetPostsRequest}
 */
proto.item.GetPostsRequest.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setAccountId(value);
        break;
      case 2:
        var value = /** @type {!proto.item.PostType} */ (reader.readEnum());
        msg.setType(value);
        break;
      case 3:
        var value = /** @type {!proto.item.PostBoxState} */ (reader.readEnum());
        msg.setState(value);
        break;
      case 4:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsVisible(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.GetPostsRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.item.GetPostsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.GetPostsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.GetPostsRequest.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getAccountId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(2, f);
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(3, f);
  }
  f = message.getIsVisible();
  if (f) {
    writer.writeBool(4, f);
  }
};

/**
 * optional string account_id = 1;
 * @return {string}
 */
proto.item.GetPostsRequest.prototype.getAccountId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.GetPostsRequest} returns this
 */
proto.item.GetPostsRequest.prototype.setAccountId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional PostType type = 2;
 * @return {!proto.item.PostType}
 */
proto.item.GetPostsRequest.prototype.getType = function () {
  return /** @type {!proto.item.PostType} */ (
    jspb.Message.getFieldWithDefault(this, 2, 0)
  );
};

/**
 * @param {!proto.item.PostType} value
 * @return {!proto.item.GetPostsRequest} returns this
 */
proto.item.GetPostsRequest.prototype.setType = function (value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};

/**
 * optional PostBoxState state = 3;
 * @return {!proto.item.PostBoxState}
 */
proto.item.GetPostsRequest.prototype.getState = function () {
  return /** @type {!proto.item.PostBoxState} */ (
    jspb.Message.getFieldWithDefault(this, 3, 0)
  );
};

/**
 * @param {!proto.item.PostBoxState} value
 * @return {!proto.item.GetPostsRequest} returns this
 */
proto.item.GetPostsRequest.prototype.setState = function (value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};

/**
 * optional bool is_visible = 4;
 * @return {boolean}
 */
proto.item.GetPostsRequest.prototype.getIsVisible = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 4, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.item.GetPostsRequest} returns this
 */
proto.item.GetPostsRequest.prototype.setIsVisible = function (value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.item.GetPostsResponse.repeatedFields_ = [3];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.item.GetPostsResponse.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.item.GetPostsResponse.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.item.GetPostsResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.item.GetPostsResponse.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
        errorMessage: jspb.Message.getFieldWithDefault(msg, 2, ''),
        postBoxesList: jspb.Message.toObjectList(
          msg.getPostBoxesList(),
          item$common_pb.PostBox.toObject,
          includeInstance,
        ),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.GetPostsResponse}
 */
proto.item.GetPostsResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.GetPostsResponse();
  return proto.item.GetPostsResponse.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.GetPostsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.GetPostsResponse}
 */
proto.item.GetPostsResponse.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setSuccess(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setErrorMessage(value);
        break;
      case 3:
        var value = new item$common_pb.PostBox();
        reader.readMessage(
          value,
          item$common_pb.PostBox.deserializeBinaryFromReader,
        );
        msg.addPostBoxes(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.GetPostsResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.item.GetPostsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.GetPostsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.GetPostsResponse.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(1, f);
  }
  f = message.getErrorMessage();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getPostBoxesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      item$common_pb.PostBox.serializeBinaryToWriter,
    );
  }
};

/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.item.GetPostsResponse.prototype.getSuccess = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 1, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.item.GetPostsResponse} returns this
 */
proto.item.GetPostsResponse.prototype.setSuccess = function (value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};

/**
 * optional string error_message = 2;
 * @return {string}
 */
proto.item.GetPostsResponse.prototype.getErrorMessage = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.GetPostsResponse} returns this
 */
proto.item.GetPostsResponse.prototype.setErrorMessage = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * repeated PostBox post_boxes = 3;
 * @return {!Array<!proto.item.PostBox>}
 */
proto.item.GetPostsResponse.prototype.getPostBoxesList = function () {
  return /** @type{!Array<!proto.item.PostBox>} */ (
    jspb.Message.getRepeatedWrapperField(this, item$common_pb.PostBox, 3)
  );
};

/**
 * @param {!Array<!proto.item.PostBox>} value
 * @return {!proto.item.GetPostsResponse} returns this
 */
proto.item.GetPostsResponse.prototype.setPostBoxesList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};

/**
 * @param {!proto.item.PostBox=} opt_value
 * @param {number=} opt_index
 * @return {!proto.item.PostBox}
 */
proto.item.GetPostsResponse.prototype.addPostBoxes = function (
  opt_value,
  opt_index,
) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    3,
    opt_value,
    proto.item.PostBox,
    opt_index,
  );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.item.GetPostsResponse} returns this
 */
proto.item.GetPostsResponse.prototype.clearPostBoxesList = function () {
  return this.setPostBoxesList([]);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.item.MoneyOverflowRequest.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.item.MoneyOverflowRequest.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.item.MoneyOverflowRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.item.MoneyOverflowRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        accountId: jspb.Message.getFieldWithDefault(msg, 1, ''),
        txGroupId: jspb.Message.getFieldWithDefault(msg, 2, ''),
        amount:
          (f = msg.getAmount()) &&
          proto.item.Amount.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.MoneyOverflowRequest}
 */
proto.item.MoneyOverflowRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.MoneyOverflowRequest();
  return proto.item.MoneyOverflowRequest.deserializeBinaryFromReader(
    msg,
    reader,
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.MoneyOverflowRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.MoneyOverflowRequest}
 */
proto.item.MoneyOverflowRequest.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setAccountId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setTxGroupId(value);
        break;
      case 3:
        var value = new proto.item.Amount();
        reader.readMessage(
          value,
          proto.item.Amount.deserializeBinaryFromReader,
        );
        msg.setAmount(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.MoneyOverflowRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.item.MoneyOverflowRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.MoneyOverflowRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.MoneyOverflowRequest.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getAccountId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getTxGroupId();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getAmount();
  if (f != null) {
    writer.writeMessage(3, f, proto.item.Amount.serializeBinaryToWriter);
  }
};

/**
 * optional string account_id = 1;
 * @return {string}
 */
proto.item.MoneyOverflowRequest.prototype.getAccountId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.MoneyOverflowRequest} returns this
 */
proto.item.MoneyOverflowRequest.prototype.setAccountId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string tx_group_id = 2;
 * @return {string}
 */
proto.item.MoneyOverflowRequest.prototype.getTxGroupId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.MoneyOverflowRequest} returns this
 */
proto.item.MoneyOverflowRequest.prototype.setTxGroupId = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional Amount amount = 3;
 * @return {?proto.item.Amount}
 */
proto.item.MoneyOverflowRequest.prototype.getAmount = function () {
  return /** @type{?proto.item.Amount} */ (
    jspb.Message.getWrapperField(this, proto.item.Amount, 3)
  );
};

/**
 * @param {?proto.item.Amount|undefined} value
 * @return {!proto.item.MoneyOverflowRequest} returns this
 */
proto.item.MoneyOverflowRequest.prototype.setAmount = function (value) {
  return jspb.Message.setWrapperField(this, 3, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.item.MoneyOverflowRequest} returns this
 */
proto.item.MoneyOverflowRequest.prototype.clearAmount = function () {
  return this.setAmount(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.item.MoneyOverflowRequest.prototype.hasAmount = function () {
  return jspb.Message.getField(this, 3) != null;
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.item.BulkRequest.repeatedFields_ = [2];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.item.BulkRequest.prototype.toObject = function (opt_includeInstance) {
    return proto.item.BulkRequest.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.item.BulkRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.item.BulkRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        accountId: jspb.Message.getFieldWithDefault(msg, 1, ''),
        postboxIdsList:
          (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
        type: jspb.Message.getFieldWithDefault(msg, 3, 0),
        state: jspb.Message.getFieldWithDefault(msg, 4, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.BulkRequest}
 */
proto.item.BulkRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.BulkRequest();
  return proto.item.BulkRequest.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.BulkRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.BulkRequest}
 */
proto.item.BulkRequest.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setAccountId(value);
        break;
      case 2:
        var values = /** @type {!Array<number>} */ (
          reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]
        );
        for (var i = 0; i < values.length; i++) {
          msg.addPostboxIds(values[i]);
        }
        break;
      case 3:
        var value = /** @type {!proto.item.PostType} */ (reader.readEnum());
        msg.setType(value);
        break;
      case 4:
        var value = /** @type {!proto.item.PostBoxState} */ (reader.readEnum());
        msg.setState(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.BulkRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.item.BulkRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.BulkRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.BulkRequest.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getAccountId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getPostboxIdsList();
  if (f.length > 0) {
    writer.writePackedInt32(2, f);
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(3, f);
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(4, f);
  }
};

/**
 * optional string account_id = 1;
 * @return {string}
 */
proto.item.BulkRequest.prototype.getAccountId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.BulkRequest} returns this
 */
proto.item.BulkRequest.prototype.setAccountId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * repeated int32 postbox_ids = 2;
 * @return {!Array<number>}
 */
proto.item.BulkRequest.prototype.getPostboxIdsList = function () {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2));
};

/**
 * @param {!Array<number>} value
 * @return {!proto.item.BulkRequest} returns this
 */
proto.item.BulkRequest.prototype.setPostboxIdsList = function (value) {
  return jspb.Message.setField(this, 2, value || []);
};

/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.item.BulkRequest} returns this
 */
proto.item.BulkRequest.prototype.addPostboxIds = function (value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.item.BulkRequest} returns this
 */
proto.item.BulkRequest.prototype.clearPostboxIdsList = function () {
  return this.setPostboxIdsList([]);
};

/**
 * optional PostType type = 3;
 * @return {!proto.item.PostType}
 */
proto.item.BulkRequest.prototype.getType = function () {
  return /** @type {!proto.item.PostType} */ (
    jspb.Message.getFieldWithDefault(this, 3, 0)
  );
};

/**
 * @param {!proto.item.PostType} value
 * @return {!proto.item.BulkRequest} returns this
 */
proto.item.BulkRequest.prototype.setType = function (value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};

/**
 * optional PostBoxState state = 4;
 * @return {!proto.item.PostBoxState}
 */
proto.item.BulkRequest.prototype.getState = function () {
  return /** @type {!proto.item.PostBoxState} */ (
    jspb.Message.getFieldWithDefault(this, 4, 0)
  );
};

/**
 * @param {!proto.item.PostBoxState} value
 * @return {!proto.item.BulkRequest} returns this
 */
proto.item.BulkRequest.prototype.setState = function (value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.item.BulkResponse.repeatedFields_ = [3, 4];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.item.BulkResponse.prototype.toObject = function (opt_includeInstance) {
    return proto.item.BulkResponse.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.item.BulkResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.item.BulkResponse.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
        errorMessage: jspb.Message.getFieldWithDefault(msg, 2, ''),
        successPostboxIdsList:
          (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
        failPostboxIdsList:
          (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.BulkResponse}
 */
proto.item.BulkResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.BulkResponse();
  return proto.item.BulkResponse.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.BulkResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.BulkResponse}
 */
proto.item.BulkResponse.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setSuccess(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setErrorMessage(value);
        break;
      case 3:
        var values = /** @type {!Array<number>} */ (
          reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]
        );
        for (var i = 0; i < values.length; i++) {
          msg.addSuccessPostboxIds(values[i]);
        }
        break;
      case 4:
        var values = /** @type {!Array<number>} */ (
          reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]
        );
        for (var i = 0; i < values.length; i++) {
          msg.addFailPostboxIds(values[i]);
        }
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.BulkResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.item.BulkResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.BulkResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.BulkResponse.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(1, f);
  }
  f = message.getErrorMessage();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getSuccessPostboxIdsList();
  if (f.length > 0) {
    writer.writePackedInt32(3, f);
  }
  f = message.getFailPostboxIdsList();
  if (f.length > 0) {
    writer.writePackedInt32(4, f);
  }
};

/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.item.BulkResponse.prototype.getSuccess = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 1, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.item.BulkResponse} returns this
 */
proto.item.BulkResponse.prototype.setSuccess = function (value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};

/**
 * optional string error_message = 2;
 * @return {string}
 */
proto.item.BulkResponse.prototype.getErrorMessage = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.BulkResponse} returns this
 */
proto.item.BulkResponse.prototype.setErrorMessage = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * repeated int32 success_postbox_ids = 3;
 * @return {!Array<number>}
 */
proto.item.BulkResponse.prototype.getSuccessPostboxIdsList = function () {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 3));
};

/**
 * @param {!Array<number>} value
 * @return {!proto.item.BulkResponse} returns this
 */
proto.item.BulkResponse.prototype.setSuccessPostboxIdsList = function (value) {
  return jspb.Message.setField(this, 3, value || []);
};

/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.item.BulkResponse} returns this
 */
proto.item.BulkResponse.prototype.addSuccessPostboxIds = function (
  value,
  opt_index,
) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.item.BulkResponse} returns this
 */
proto.item.BulkResponse.prototype.clearSuccessPostboxIdsList = function () {
  return this.setSuccessPostboxIdsList([]);
};

/**
 * repeated int32 fail_postbox_ids = 4;
 * @return {!Array<number>}
 */
proto.item.BulkResponse.prototype.getFailPostboxIdsList = function () {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 4));
};

/**
 * @param {!Array<number>} value
 * @return {!proto.item.BulkResponse} returns this
 */
proto.item.BulkResponse.prototype.setFailPostboxIdsList = function (value) {
  return jspb.Message.setField(this, 4, value || []);
};

/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.item.BulkResponse} returns this
 */
proto.item.BulkResponse.prototype.addFailPostboxIds = function (
  value,
  opt_index,
) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.item.BulkResponse} returns this
 */
proto.item.BulkResponse.prototype.clearFailPostboxIdsList = function () {
  return this.setFailPostboxIdsList([]);
};

goog.object.extend(exports, proto.item);
