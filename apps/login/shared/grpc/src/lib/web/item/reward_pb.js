// source: reward.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
  (typeof globalThis !== 'undefined' && globalThis) ||
  (typeof window !== 'undefined' && window) ||
  (typeof global !== 'undefined' && global) ||
  (typeof self !== 'undefined' && self) ||
  function () {
    return this;
  }.call(null) ||
  Function('return this')();

goog.exportSymbol('proto.item.GetPaidRewardsRequest', null, global);
goog.exportSymbol('proto.item.GetPaidRewardsResponse', null, global);
goog.exportSymbol('proto.item.GetRewardsRequest', null, global);
goog.exportSymbol('proto.item.GetRewardsResponse', null, global);
goog.exportSymbol('proto.item.PaidReward', null, global);
goog.exportSymbol('proto.item.PayRewardRequest', null, global);
goog.exportSymbol('proto.item.PayRewardResponse', null, global);
goog.exportSymbol('proto.item.Reward', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.Reward = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.item.Reward, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.item.Reward.displayName = 'proto.item.Reward';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.PaidReward = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.item.PaidReward, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.item.PaidReward.displayName = 'proto.item.PaidReward';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.GetRewardsRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.item.GetRewardsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.item.GetRewardsRequest.displayName = 'proto.item.GetRewardsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.GetRewardsResponse = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.item.GetRewardsResponse.repeatedFields_,
    null,
  );
};
goog.inherits(proto.item.GetRewardsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.item.GetRewardsResponse.displayName = 'proto.item.GetRewardsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.PayRewardRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.item.PayRewardRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.item.PayRewardRequest.displayName = 'proto.item.PayRewardRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.PayRewardResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.item.PayRewardResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.item.PayRewardResponse.displayName = 'proto.item.PayRewardResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.GetPaidRewardsRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.item.GetPaidRewardsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.item.GetPaidRewardsRequest.displayName =
    'proto.item.GetPaidRewardsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.item.GetPaidRewardsResponse = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.item.GetPaidRewardsResponse.repeatedFields_,
    null,
  );
};
goog.inherits(proto.item.GetPaidRewardsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.item.GetPaidRewardsResponse.displayName =
    'proto.item.GetPaidRewardsResponse';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.item.Reward.prototype.toObject = function (opt_includeInstance) {
    return proto.item.Reward.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.item.Reward} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.item.Reward.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        rewardId: jspb.Message.getFieldWithDefault(msg, 1, 0),
        rewardType: jspb.Message.getFieldWithDefault(msg, 2, ''),
        name: jspb.Message.getFieldWithDefault(msg, 3, ''),
        description: jspb.Message.getFieldWithDefault(msg, 4, ''),
        key: jspb.Message.getFieldWithDefault(msg, 5, ''),
        value: jspb.Message.getFieldWithDefault(msg, 6, ''),
        condition: jspb.Message.getFieldWithDefault(msg, 7, ''),
        schemaName: jspb.Message.getFieldWithDefault(msg, 8, ''),
        tableName: jspb.Message.getFieldWithDefault(msg, 9, ''),
        targetId: jspb.Message.getFieldWithDefault(msg, 10, ''),
        createdAt: jspb.Message.getFieldWithDefault(msg, 11, ''),
        updatedAt: jspb.Message.getFieldWithDefault(msg, 12, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.Reward}
 */
proto.item.Reward.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.Reward();
  return proto.item.Reward.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.Reward} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.Reward}
 */
proto.item.Reward.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setRewardId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setRewardType(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setDescription(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setKey(value);
        break;
      case 6:
        var value = /** @type {string} */ (reader.readString());
        msg.setValue(value);
        break;
      case 7:
        var value = /** @type {string} */ (reader.readString());
        msg.setCondition(value);
        break;
      case 8:
        var value = /** @type {string} */ (reader.readString());
        msg.setSchemaName(value);
        break;
      case 9:
        var value = /** @type {string} */ (reader.readString());
        msg.setTableName(value);
        break;
      case 10:
        var value = /** @type {string} */ (reader.readString());
        msg.setTargetId(value);
        break;
      case 11:
        var value = /** @type {string} */ (reader.readString());
        msg.setCreatedAt(value);
        break;
      case 12:
        var value = /** @type {string} */ (reader.readString());
        msg.setUpdatedAt(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.Reward.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.item.Reward.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.Reward} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.Reward.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getRewardId();
  if (f !== 0) {
    writer.writeInt32(1, f);
  }
  f = message.getRewardType();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(5, f);
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(6, f);
  }
  f = message.getCondition();
  if (f.length > 0) {
    writer.writeString(7, f);
  }
  f = message.getSchemaName();
  if (f.length > 0) {
    writer.writeString(8, f);
  }
  f = message.getTableName();
  if (f.length > 0) {
    writer.writeString(9, f);
  }
  f = message.getTargetId();
  if (f.length > 0) {
    writer.writeString(10, f);
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(11, f);
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(12, f);
  }
};

/**
 * optional int32 reward_id = 1;
 * @return {number}
 */
proto.item.Reward.prototype.getRewardId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.Reward} returns this
 */
proto.item.Reward.prototype.setRewardId = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional string reward_type = 2;
 * @return {string}
 */
proto.item.Reward.prototype.getRewardType = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.Reward} returns this
 */
proto.item.Reward.prototype.setRewardType = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string name = 3;
 * @return {string}
 */
proto.item.Reward.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.Reward} returns this
 */
proto.item.Reward.prototype.setName = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string description = 4;
 * @return {string}
 */
proto.item.Reward.prototype.getDescription = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.Reward} returns this
 */
proto.item.Reward.prototype.setDescription = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional string key = 5;
 * @return {string}
 */
proto.item.Reward.prototype.getKey = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.Reward} returns this
 */
proto.item.Reward.prototype.setKey = function (value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * optional string value = 6;
 * @return {string}
 */
proto.item.Reward.prototype.getValue = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.Reward} returns this
 */
proto.item.Reward.prototype.setValue = function (value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};

/**
 * optional string condition = 7;
 * @return {string}
 */
proto.item.Reward.prototype.getCondition = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.Reward} returns this
 */
proto.item.Reward.prototype.setCondition = function (value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};

/**
 * optional string schema_name = 8;
 * @return {string}
 */
proto.item.Reward.prototype.getSchemaName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.Reward} returns this
 */
proto.item.Reward.prototype.setSchemaName = function (value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};

/**
 * optional string table_name = 9;
 * @return {string}
 */
proto.item.Reward.prototype.getTableName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.Reward} returns this
 */
proto.item.Reward.prototype.setTableName = function (value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};

/**
 * optional string target_id = 10;
 * @return {string}
 */
proto.item.Reward.prototype.getTargetId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.Reward} returns this
 */
proto.item.Reward.prototype.setTargetId = function (value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};

/**
 * optional string created_at = 11;
 * @return {string}
 */
proto.item.Reward.prototype.getCreatedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.Reward} returns this
 */
proto.item.Reward.prototype.setCreatedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};

/**
 * optional string updated_at = 12;
 * @return {string}
 */
proto.item.Reward.prototype.getUpdatedAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.Reward} returns this
 */
proto.item.Reward.prototype.setUpdatedAt = function (value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.item.PaidReward.prototype.toObject = function (opt_includeInstance) {
    return proto.item.PaidReward.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.item.PaidReward} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.item.PaidReward.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        txGroupId: jspb.Message.getFieldWithDefault(msg, 1, ''),
        transactionId: jspb.Message.getFieldWithDefault(msg, 2, ''),
        rewardId: jspb.Message.getFieldWithDefault(msg, 3, 0),
        rewardType: jspb.Message.getFieldWithDefault(msg, 4, ''),
        key: jspb.Message.getFieldWithDefault(msg, 5, ''),
        paidAt: jspb.Message.getFieldWithDefault(msg, 6, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.PaidReward}
 */
proto.item.PaidReward.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.PaidReward();
  return proto.item.PaidReward.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.PaidReward} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.PaidReward}
 */
proto.item.PaidReward.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setTxGroupId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setTransactionId(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setRewardId(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setRewardType(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setKey(value);
        break;
      case 6:
        var value = /** @type {string} */ (reader.readString());
        msg.setPaidAt(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.PaidReward.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.item.PaidReward.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.PaidReward} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.PaidReward.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getTxGroupId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getTransactionId();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getRewardId();
  if (f !== 0) {
    writer.writeInt32(3, f);
  }
  f = message.getRewardType();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(5, f);
  }
  f = message.getPaidAt();
  if (f.length > 0) {
    writer.writeString(6, f);
  }
};

/**
 * optional string tx_group_id = 1;
 * @return {string}
 */
proto.item.PaidReward.prototype.getTxGroupId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.PaidReward} returns this
 */
proto.item.PaidReward.prototype.setTxGroupId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string transaction_id = 2;
 * @return {string}
 */
proto.item.PaidReward.prototype.getTransactionId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.PaidReward} returns this
 */
proto.item.PaidReward.prototype.setTransactionId = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional int32 reward_id = 3;
 * @return {number}
 */
proto.item.PaidReward.prototype.getRewardId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.PaidReward} returns this
 */
proto.item.PaidReward.prototype.setRewardId = function (value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};

/**
 * optional string reward_type = 4;
 * @return {string}
 */
proto.item.PaidReward.prototype.getRewardType = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.PaidReward} returns this
 */
proto.item.PaidReward.prototype.setRewardType = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional string key = 5;
 * @return {string}
 */
proto.item.PaidReward.prototype.getKey = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.PaidReward} returns this
 */
proto.item.PaidReward.prototype.setKey = function (value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * optional string paid_at = 6;
 * @return {string}
 */
proto.item.PaidReward.prototype.getPaidAt = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.PaidReward} returns this
 */
proto.item.PaidReward.prototype.setPaidAt = function (value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.item.GetRewardsRequest.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.item.GetRewardsRequest.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.item.GetRewardsRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.item.GetRewardsRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        rewardId: jspb.Message.getFieldWithDefault(msg, 1, 0),
        rewardType: jspb.Message.getFieldWithDefault(msg, 2, ''),
        key: jspb.Message.getFieldWithDefault(msg, 3, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.GetRewardsRequest}
 */
proto.item.GetRewardsRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.GetRewardsRequest();
  return proto.item.GetRewardsRequest.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.GetRewardsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.GetRewardsRequest}
 */
proto.item.GetRewardsRequest.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setRewardId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setRewardType(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setKey(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.GetRewardsRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.item.GetRewardsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.GetRewardsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.GetRewardsRequest.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getRewardId();
  if (f !== 0) {
    writer.writeInt32(1, f);
  }
  f = message.getRewardType();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
};

/**
 * optional int32 reward_id = 1;
 * @return {number}
 */
proto.item.GetRewardsRequest.prototype.getRewardId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.GetRewardsRequest} returns this
 */
proto.item.GetRewardsRequest.prototype.setRewardId = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional string reward_type = 2;
 * @return {string}
 */
proto.item.GetRewardsRequest.prototype.getRewardType = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.GetRewardsRequest} returns this
 */
proto.item.GetRewardsRequest.prototype.setRewardType = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string key = 3;
 * @return {string}
 */
proto.item.GetRewardsRequest.prototype.getKey = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.GetRewardsRequest} returns this
 */
proto.item.GetRewardsRequest.prototype.setKey = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.item.GetRewardsResponse.repeatedFields_ = [3];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.item.GetRewardsResponse.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.item.GetRewardsResponse.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.item.GetRewardsResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.item.GetRewardsResponse.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
        errorMessage: jspb.Message.getFieldWithDefault(msg, 2, ''),
        rewardList: jspb.Message.toObjectList(
          msg.getRewardList(),
          proto.item.Reward.toObject,
          includeInstance,
        ),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.GetRewardsResponse}
 */
proto.item.GetRewardsResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.GetRewardsResponse();
  return proto.item.GetRewardsResponse.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.GetRewardsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.GetRewardsResponse}
 */
proto.item.GetRewardsResponse.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setSuccess(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setErrorMessage(value);
        break;
      case 3:
        var value = new proto.item.Reward();
        reader.readMessage(
          value,
          proto.item.Reward.deserializeBinaryFromReader,
        );
        msg.addReward(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.GetRewardsResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.item.GetRewardsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.GetRewardsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.GetRewardsResponse.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(1, f);
  }
  f = message.getErrorMessage();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getRewardList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.item.Reward.serializeBinaryToWriter,
    );
  }
};

/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.item.GetRewardsResponse.prototype.getSuccess = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 1, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.item.GetRewardsResponse} returns this
 */
proto.item.GetRewardsResponse.prototype.setSuccess = function (value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};

/**
 * optional string error_message = 2;
 * @return {string}
 */
proto.item.GetRewardsResponse.prototype.getErrorMessage = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.GetRewardsResponse} returns this
 */
proto.item.GetRewardsResponse.prototype.setErrorMessage = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * repeated Reward reward = 3;
 * @return {!Array<!proto.item.Reward>}
 */
proto.item.GetRewardsResponse.prototype.getRewardList = function () {
  return /** @type{!Array<!proto.item.Reward>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.item.Reward, 3)
  );
};

/**
 * @param {!Array<!proto.item.Reward>} value
 * @return {!proto.item.GetRewardsResponse} returns this
 */
proto.item.GetRewardsResponse.prototype.setRewardList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};

/**
 * @param {!proto.item.Reward=} opt_value
 * @param {number=} opt_index
 * @return {!proto.item.Reward}
 */
proto.item.GetRewardsResponse.prototype.addReward = function (
  opt_value,
  opt_index,
) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    3,
    opt_value,
    proto.item.Reward,
    opt_index,
  );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.item.GetRewardsResponse} returns this
 */
proto.item.GetRewardsResponse.prototype.clearRewardList = function () {
  return this.setRewardList([]);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.item.PayRewardRequest.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.item.PayRewardRequest.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.item.PayRewardRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.item.PayRewardRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        rewardId: jspb.Message.getFieldWithDefault(msg, 1, 0),
        accountId: jspb.Message.getFieldWithDefault(msg, 2, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.PayRewardRequest}
 */
proto.item.PayRewardRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.PayRewardRequest();
  return proto.item.PayRewardRequest.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.PayRewardRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.PayRewardRequest}
 */
proto.item.PayRewardRequest.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setRewardId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setAccountId(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.PayRewardRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.item.PayRewardRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.PayRewardRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.PayRewardRequest.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getRewardId();
  if (f !== 0) {
    writer.writeInt32(1, f);
  }
  f = message.getAccountId();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
};

/**
 * optional int32 reward_id = 1;
 * @return {number}
 */
proto.item.PayRewardRequest.prototype.getRewardId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.item.PayRewardRequest} returns this
 */
proto.item.PayRewardRequest.prototype.setRewardId = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional string account_id = 2;
 * @return {string}
 */
proto.item.PayRewardRequest.prototype.getAccountId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.PayRewardRequest} returns this
 */
proto.item.PayRewardRequest.prototype.setAccountId = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.item.PayRewardResponse.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.item.PayRewardResponse.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.item.PayRewardResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.item.PayRewardResponse.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
        errorMessage: jspb.Message.getFieldWithDefault(msg, 2, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.PayRewardResponse}
 */
proto.item.PayRewardResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.PayRewardResponse();
  return proto.item.PayRewardResponse.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.PayRewardResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.PayRewardResponse}
 */
proto.item.PayRewardResponse.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setSuccess(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setErrorMessage(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.PayRewardResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.item.PayRewardResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.PayRewardResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.PayRewardResponse.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(1, f);
  }
  f = message.getErrorMessage();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
};

/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.item.PayRewardResponse.prototype.getSuccess = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 1, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.item.PayRewardResponse} returns this
 */
proto.item.PayRewardResponse.prototype.setSuccess = function (value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};

/**
 * optional string error_message = 2;
 * @return {string}
 */
proto.item.PayRewardResponse.prototype.getErrorMessage = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.PayRewardResponse} returns this
 */
proto.item.PayRewardResponse.prototype.setErrorMessage = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.item.GetPaidRewardsRequest.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.item.GetPaidRewardsRequest.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.item.GetPaidRewardsRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.item.GetPaidRewardsRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        accountId: jspb.Message.getFieldWithDefault(msg, 1, ''),
        startDate: jspb.Message.getFieldWithDefault(msg, 2, ''),
        endDate: jspb.Message.getFieldWithDefault(msg, 3, ''),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.GetPaidRewardsRequest}
 */
proto.item.GetPaidRewardsRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.GetPaidRewardsRequest();
  return proto.item.GetPaidRewardsRequest.deserializeBinaryFromReader(
    msg,
    reader,
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.GetPaidRewardsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.GetPaidRewardsRequest}
 */
proto.item.GetPaidRewardsRequest.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setAccountId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setStartDate(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setEndDate(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.GetPaidRewardsRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.item.GetPaidRewardsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.GetPaidRewardsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.GetPaidRewardsRequest.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getAccountId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getStartDate();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getEndDate();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
};

/**
 * optional string account_id = 1;
 * @return {string}
 */
proto.item.GetPaidRewardsRequest.prototype.getAccountId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.GetPaidRewardsRequest} returns this
 */
proto.item.GetPaidRewardsRequest.prototype.setAccountId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string start_date = 2;
 * @return {string}
 */
proto.item.GetPaidRewardsRequest.prototype.getStartDate = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.GetPaidRewardsRequest} returns this
 */
proto.item.GetPaidRewardsRequest.prototype.setStartDate = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string end_date = 3;
 * @return {string}
 */
proto.item.GetPaidRewardsRequest.prototype.getEndDate = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.GetPaidRewardsRequest} returns this
 */
proto.item.GetPaidRewardsRequest.prototype.setEndDate = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.item.GetPaidRewardsResponse.repeatedFields_ = [3];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.item.GetPaidRewardsResponse.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.item.GetPaidRewardsResponse.toObject(
      opt_includeInstance,
      this,
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.item.GetPaidRewardsResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.item.GetPaidRewardsResponse.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
        errorMessage: jspb.Message.getFieldWithDefault(msg, 2, ''),
        paidRewardList: jspb.Message.toObjectList(
          msg.getPaidRewardList(),
          proto.item.PaidReward.toObject,
          includeInstance,
        ),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.item.GetPaidRewardsResponse}
 */
proto.item.GetPaidRewardsResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.item.GetPaidRewardsResponse();
  return proto.item.GetPaidRewardsResponse.deserializeBinaryFromReader(
    msg,
    reader,
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.item.GetPaidRewardsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.item.GetPaidRewardsResponse}
 */
proto.item.GetPaidRewardsResponse.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setSuccess(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setErrorMessage(value);
        break;
      case 3:
        var value = new proto.item.PaidReward();
        reader.readMessage(
          value,
          proto.item.PaidReward.deserializeBinaryFromReader,
        );
        msg.addPaidReward(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.item.GetPaidRewardsResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.item.GetPaidRewardsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.item.GetPaidRewardsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.item.GetPaidRewardsResponse.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(1, f);
  }
  f = message.getErrorMessage();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getPaidRewardList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.item.PaidReward.serializeBinaryToWriter,
    );
  }
};

/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.item.GetPaidRewardsResponse.prototype.getSuccess = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 1, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.item.GetPaidRewardsResponse} returns this
 */
proto.item.GetPaidRewardsResponse.prototype.setSuccess = function (value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};

/**
 * optional string error_message = 2;
 * @return {string}
 */
proto.item.GetPaidRewardsResponse.prototype.getErrorMessage = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.item.GetPaidRewardsResponse} returns this
 */
proto.item.GetPaidRewardsResponse.prototype.setErrorMessage = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * repeated PaidReward paid_reward = 3;
 * @return {!Array<!proto.item.PaidReward>}
 */
proto.item.GetPaidRewardsResponse.prototype.getPaidRewardList = function () {
  return /** @type{!Array<!proto.item.PaidReward>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.item.PaidReward, 3)
  );
};

/**
 * @param {!Array<!proto.item.PaidReward>} value
 * @return {!proto.item.GetPaidRewardsResponse} returns this
 */
proto.item.GetPaidRewardsResponse.prototype.setPaidRewardList = function (
  value,
) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};

/**
 * @param {!proto.item.PaidReward=} opt_value
 * @param {number=} opt_index
 * @return {!proto.item.PaidReward}
 */
proto.item.GetPaidRewardsResponse.prototype.addPaidReward = function (
  opt_value,
  opt_index,
) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    3,
    opt_value,
    proto.item.PaidReward,
    opt_index,
  );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.item.GetPaidRewardsResponse} returns this
 */
proto.item.GetPaidRewardsResponse.prototype.clearPaidRewardList = function () {
  return this.setPaidRewardList([]);
};

goog.object.extend(exports, proto.item);
