syntax = "proto3";

package auth.admin;

message User {
  string user_id = 1;
  string email = 2;
  string employee_number = 3; // 사원번호
  string name = 4; // 이름
  int32 department_id = 5; // 부서 ID
  int32 position_id = 6; // 직책 ID
  int32 job_id = 7; // 직무 ID
  int64 phone_number = 8; // 전화번호
  int32 extension_number = 9; // 사내번호
  int32 state = 10; // 계정 상태
  string created_at = 11; // 생성일
}

// 인증을 위한 gRPC 서비스 정의
service AdminAuthService {
  rpc SignIn(SignInRequest) returns (SignInResponse);
  rpc VerifyToken(TokenRequest) returns (VerifyTokenResponse);
  rpc VerifyTokenWithContext(TokenWithContextRequest) returns (VerifyTokenWithContextResponse);
  rpc RenewToken(TokenRequest) returns (RenewTokenResponse);
  rpc DestroyToken(TokenRequest) returns (DystroyTokenResponse);
}

// 요청 및 응답 메시지
message SignInRequest {
  string email = 1;
  string password = 2;
}

message SignInResponse {
    bool success = 1;
    string error_message = 2;
    string access_token = 3;
    string refresh_token = 4;
    User user = 5;
    repeated string role = 6;
}

message TokenRequest {
  string access_token = 1;
  string refresh_token = 2;
}

message VerifyTokenResponse {
  bool success = 1;
  string error_message = 2;
}

message TokenWithContextRequest {
  string access_token = 1;
  string refresh_token = 2;
  string resource = 3; // 접근 권한이 필요한 리소스 id
  string action = 4; // 리소스에 대한 액션 id
}

message VerifyTokenWithContextResponse {
  bool success = 1;
  string error_message = 2;
}

message RenewTokenResponse {
  bool success = 1;
  string error_message = 2;
  string access_token = 3;
  string refresh_token = 4;
}

message DystroyTokenResponse {
  bool success = 1;
  string error_message = 2;
}
