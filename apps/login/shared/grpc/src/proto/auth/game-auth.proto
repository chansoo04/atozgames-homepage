syntax = "proto3";

package game;

service AuthService {
  // User
  rpc IssueTokenByIdentity(TokenRequest) returns (IssueTokenByIdentityResponse); // 본인인증 서비스에서 발급한 토큰을 검증하고 서버에서 커스텀 토큰 발급
  rpc VerifyIdentityToken(TokenRequest) returns (DefaultResponse); // 본인인증을 기준으로 발급한 커스텀 토큰을 검증
  rpc DeleteAccount(TokenRequest) returns (DefaultResponse); // 탈퇴시 Firebase 아이디 삭제 및 레디스 삭제

  // Account
  rpc CreateCustomToken(CreateCustomTokenRequest) returns (CreateCustomTokenResponse); // Firebase Auth 커스텀 토큰 발급
  rpc VerifyIdToken(AccountSignRequest) returns (AccountSignResponse); // Firebase Auth ID 토큰 검증 / accessToken
  rpc AccountSignUp(AccountSignWithCredentialRequest) returns (AccountSignResponse);
  rpc AccountSignInWithCredential(AccountSignWithCredentialRequest) returns (AccountSignResponse);
  rpc AccountSignIn(AccountSignRequest) returns (AccountSignResponse);
  rpc AccountSignOut(AccountSignOutRequest) returns (DefaultResponse);
  rpc SignOutAll(TokenRequest) returns (DefaultResponse);
  rpc ResetPassword(ResetPasswordRequest) returns (DefaultResponse) {} // 비밀번호 재설정 | 본인인증 필요
}

message TokenRequest {
  string uid = 1;
  string token = 2; // 본인인증 서비스에서 발급한 토큰
}

message IssueTokenByIdentityResponse {
  bool success = 1;
  string error_message = 2;
  string token = 3; // 서버에서 발급한 토큰
}

message CreateCustomTokenRequest {
  string provider = 1;
  string token = 2;
}

message CreateCustomTokenResponse {
  bool success = 1;
  string error_message = 2;
  string custom_token = 3;
  CustomTokenIssueType issue_type = 4;
}

message AccountSignWithCredentialRequest {
  string user_id = 1;
  string credential = 2;
  string provider = 3;
}

message AccountSignRequest {
  string uid = 1;
  string id_token = 2; // firebase access token
}

message AccountSignOutRequest {
  string uid = 1;
}

message AccountSignResponse {
  bool success = 1;
  string error_message = 2;
  string auth_code = 3;
  string account_id = 4;
  string firebase_uid = 5;
  string id_token = 6;
}

enum CustomTokenIssueType {
  EXIST = 0; // 기존 유저
  NEW = 1; // 신규 유저 등록
}

message ResetPasswordRequest {
  string token = 1; // 본인인증 후 서버에서 발급한 커스텀 토큰
  string user_id = 2;
  string account_id = 3;
  string password = 4;
}

message DefaultResponse {
  bool success = 1;
  string error_message = 2;
}
