syntax = "proto3";

package item;

import "item-common.proto";

message ClassState {
  string account_id = 1;
  string grade = 2;
  string expired_at = 3;
  int32 continuous_day = 4;
}

service InventoryService {
  rpc GetInventory(GetInventoryRequest) returns (InventoriesResponse) {}

  rpc GetClassItem(GetInventoryRequest) returns (InventoryResponse) {}
  rpc GetClassItemByAccountIds(GetInvetoryRepeatRequest) returns (InventoriesResponse) {}

  rpc GetItemByType(GetInventoryByRequest) returns (InventoriesResponse) {}
  rpc GetItemByItemId(GetInventoryByRequest) returns (InventoriesResponse) {}

  rpc InputItem(InventoryItemRequest) returns (InventoryResponse) {}
  rpc UseItem(InventoryItemRequest) returns (InventoryResponse) {}

  rpc EffectOn(InventoryItemRequest) returns (InventoryResponse) {}
  rpc EffectOff(InventoryItemRequest) returns (InventoryResponse) {}

  // class item control
  rpc ClassValidate(ClassValidateRequest) returns (ClassValidateResponse) {}
  rpc ClassApply(ClassApplyRequest) returns (ClassStateResponse) {}
  rpc ClassCancel(ClassCancelRequest) returns (ClassCancelResponse) {}
  rpc ClassContinuousAdd(AccountIdRequest) returns (ClassContinuousRewardResponse) {}
  rpc ClassContinuousReward(AccountIdRequest) returns (ClassContinuousRewardResponse) {}
}

message AccountIdRequest {
  string account_id = 1;
}

message GetInventoryRequest {
  string account_id = 1;
  bool include_item = 2; // default false
}

message GetInvetoryRepeatRequest {
  repeated string account_ids = 1;
  bool include_item = 2; // default false
}

message GetInventoryByRequest {
  string account_id = 1;
  string key = 2; // item_id or type
  bool include_item = 3; // default false
}

message InventoryResponse {
  bool success = 1;
  string error_message = 2;
  Inventory inventory = 3;
}

message InventoriesResponse {
  bool success = 1;
  string error_message = 2;
  repeated Inventory inventory = 3;
}

message InventoryItemRequest {
  string account_id = 1;
  string item_id = 2;
  int32 amount = 3;
  TransactionType transaction_type = 4;
  string tx_group_id = 5;
}

message ClassValidateRequest {
  string account_id = 1;
  string grade = 2;
  string payment_type = 3; // SINGLE | RECURRING
}

message ClassValidateResponse {
  bool success = 1;
  string error_message = 2;
  string result = 3; // NEW, APPEND, UPGRADE, FAIL
}

message ClassApplyRequest {
  string account_id = 1;
  string grade = 2;
  int32 count = 3;
  string payment_type = 4; // SINGLE | RECURRING
}

message ClassCancelRequest {
  string account_id = 1;
  string grade = 2;
}

message ClassStateResponse {
  bool success = 1;
  string error_message = 2;
  ClassState class_state = 3;
}

message ClassCancelResponse {
  bool success = 1;
  string error_message = 2;
  ClassState class_state = 3;
  string excess = 4;
  string balance = 5;
  string money_box = 6;
}

message ClassContinuousRewardResponse {
  bool success = 1;
  string error_message = 2;
  int32 month = 3;
  string amount = 4;
}
